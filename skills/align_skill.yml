action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D8qIQurLRHPvxvGfCg+o7K/DQqHWMQypj9jL5fOXHjSP5GkK7LdzNY/e726o5ao2L9r
    0scDPzLjP2+8gxoC7OI/Z0oQsAOc0j8qO6Jx7sfRP1S5N5NIhu4/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D8qIQurLRHPvxvGfCg+o7K/DQqHWMQypj9jL5fOXHjSP5GkK7LdzNY/e726o5ao2L9r
    0scDPzLjP2+8gxoC7OI/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      KubSYBcD8D/b+konERnuv552cy7/3Oo/vAWnerH4zb/BldjztFHjP6CyWiqteeq/FGqcEfoD6z+1
      TbpFuc/qPxNW22LfKOk/2/pKJxEZ7r8r5tJgFwPwP/HVZHrp9uq/+c2nvcP0wD+zaq6TlOPlv8Mj
      fjIbfuw/ZLg3OUKK6r8PKAfYj8zsv8QMsPtvS+q/nnZzLv/c6j/x1WR66fbqvyvm0mAXA/A/9Tcr
      t/BqzT9lxYnSaDPQP341phTPOuO/si2BIPrK5z8T2cJtMVLmP9KJb/fl++I/vAWnerH4zb/5zae9
      w/TAP/U3K7fwas0/NebSYBcD8D/aE8RNmpDdv+SaKwoCndc/I6yRLnfRr7/o1mZ47wzHv5QNw0ac
      zNK/wZXY87RR4z+zaq6TlOPlv2XFidJoM9A/2hPETZqQ3b855tJgFwPwP2+z10gRZuW/RBbdVadc
      4T96I8p2QW3jP12TbXGSe+M/oLJaKq156r/DI34yG37sP341phTPOuO/5JorCgKd1z9vs9dIEWbl
      vzPm0mAXA/A/6lMrxMRf5b+Znqvb+Hztv9VFTnJfa+m/FGqcEfoD6z9kuDc5Qorqv7ItgSD6yuc/
      I6yRLnfRr79EFt1Vp1zhP+pTK8TEX+W/J+bSYBcD8D+PAo5S6a7nPy0TwGke1+o/tU26RbnP6j8P
      KAfYj8zsvxPZwm0xUuY/6NZmeO8Mx796I8p2QW3jP5meq9v4fO2/jwKOUumu5z835tJgFwPwPxoV
      WPY7RuU/E1bbYt8o6T/EDLD7b0vqv9KJb/fl++I/lA3DRpzM0r9dk21xknvjP9VFTnJfa+m/LRPA
      aR7X6j8aFVj2O0blPy3m0mAXA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      HbqSHLqSjDwIzRsIzRv/vMAiSsAiSsI8+ZZv+ZZvyzwsyaEryaH6vIg5TYg5Tag83AN63AP69DyG
      /F6G/N71vECPe0CPWxC9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    FnqNE/du0j9LMXNRh1a0P0mK21fwMrc/37QUiAG8sD9N2pNAo3ekPxqgt1M57bY/tAv2vOVrqj8T
    T6juc5mpP1+IEXcyk6Y/F6P55/ompz9q2HIi4S6jP4Fs7COaU7c/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    FnqNE/du0j9LMXNRh1a0P0mK21fwMrc/37QUiAG8sD9N2pNAo3ekPxqgt1M57bY/tAv2vOVrqj8T
    T6juc5mpP1+IEXcyk6Y/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABXs7Psf/jUv1XJk1pJrUK/gInedTj7eD+YD3ICLvrUP0/PGPwDIdE/hb9rND681b+X
    TB7GhNXkPxwHG8Fq6uM/FXwk8+Fzxz8A3REwCLXHP3FdYJCwceQ/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABXs7Psf/jUv1XJk1pJrUK/gInedTj7eD+YD3ICLvrUP0/PGPwDIdE/hb9rND681b+X
    TB7GhNXkPxwHG8Fq6uM/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P853wYAAAD4Py4jj8NP8/c/NeHPVh2u6b8qbLljo//3vyI1
      ANVI3ts/OZnfSLCf8r9T8Xi3x66nP/9CUi7S+Pe/AAAAAAAA+P8uI4/DT/P3PzrfBgAAAPg/i+NN
      dK8F57+TFyr8qu73v/ZM3e7m6NU/APICMuqc8b/oR3s/UjzCP+Wa6BsT2fe/AAAAAAAA+P814c9W
      Ha7pv4vjTXSvBee/ON8GAAAA+D+gGWsoYh7qP/7NvoZyIfe/PbnHgcTA9j+Yg/XK7d7zPwbq6jwl
      nOs/AAAAAAAA+P8qbLljo//3v5MXKvyq7ve/oBlrKGIe6j833wYAAAD4PzKh8YwR3dy/AUA6/3XJ
      8j9I94E73LOevzX12oiu+/c/AAAAAAAA+P8iNQDVSN7bP/ZM3e7m6NU//s2+hnIh978xofGMEd3c
      vzffBgAAAPg/VAWsFHLk878EpttwoL32v3IW5cw/I+C/AAAAAAAA+P85md9IsJ/yvwDyAjLqnPG/
      PbnHgcTA9j8BQDr/dcnyP1QFrBRy5PO/ON8GAAAA+D9Ht5fZ2hztP0eiJJZmVfM/AAAAAAAA+P9T
      8Xi3x66nP+lHez9SPMI/mIP1yu3e8z9G94E73LOevwSm23Cgvfa/R7eX2doc7T853wYAAAD4P+sB
      vomy4po/AAAAAAAA+P/+QlIu0vj3v+Wa6BsT2fe/BurqPCWc6z819dqIrvv3P3EW5cw/I+C/R6Ik
      lmZV8z/rAb6JsuKaPzrfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P9VVVVVVVUAPVVVVVVVVZW8AAAAAAAAAABVVVVVVVWVvAAAAAAAALg8VVVVVVVVzTyr
      qqqq6jXyvAAAAAAAAAAA
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAACeF+l8Ffh0P2OtkW1cRE8/GaJ5ddMkdj9pUlFTFiZ1P3hSpr5fp5w/l+YmXeXblj8+
    xhWKxbCSP2EqBYIqc4w/PVUN+SbvwD8+I06jClnBP6FDBpAgHt0/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAACeF+l8Ffh0P2OtkW1cRE8/GaJ5ddMkdj9pUlFTFiZ1P3hSpr5fp5w/l+YmXeXblj8+
    xhWKxbCSP2EqBYIqc4w/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      KubSYBcD8D/b+konERnuv552cy7/3Oo/vAWnerH4zb/BldjztFHjP6CyWiqteeq/FGqcEfoD6z+1
      TbpFuc/qPxNW22LfKOk/lCW77bTKgr8hx9fOUwepv3819n7eZoM/2/pKJxEZ7r8r5tJgFwPwP/HV
      ZHrp9uq/+c2nvcP0wD+zaq6TlOPlv8MjfjIbfuw/ZLg3OUKK6r8PKAfYj8zsv8QMsPtvS+q/pPhP
      2Etgvz+0pMTaPJfFPzAibCjrX7O/nnZzLv/c6j/x1WR66fbqvyvm0mAXA/A/9Tcrt/BqzT9lxYnS
      aDPQP341phTPOuO/si2BIPrK5z8T2cJtMVLmP9KJb/fl++I/7+jNO8/Ds7+6/ILOS/unv5Vve1Yn
      dcI/vAWnerH4zb/5zae9w/TAP/U3K7fwas0/NebSYBcD8D/aE8RNmpDdv+SaKwoCndc/I6yRLnfR
      r7/o1mZ47wzHv5QNw0aczNK/YubzSsdM27+nhpFdYIfRv+wM0943R9k/wZXY87RR4z+zaq6TlOPl
      v2XFidJoM9A/2hPETZqQ3b855tJgFwPwP2+z10gRZuW/RBbdVadc4T96I8p2QW3jP12TbXGSe+M/
      PDQ/6nOd0L/jrqE+gy/Wv2PIrMnPsqg/oLJaKq156r/DI34yG37sP341phTPOuO/5JorCgKd1z9v
      s9dIEWblvzPm0mAXA/A/6lMrxMRf5b+Znqvb+Hztv9VFTnJfa+m/MRrpaS1Fpr+8UYW9C3y0P1/f
      n14YQbI/FGqcEfoD6z9kuDc5Qorqv7ItgSD6yuc/I6yRLnfRr79EFt1Vp1zhP+pTK8TEX+W/J+bS
      YBcD8D+PAo5S6a7nPy0TwGke1+o/Fu0NfDcx0b9n8afJHybSv06WXK4Ie8w/tU26RbnP6j8PKAfY
      j8zsvxPZwm0xUuY/6NZmeO8Mx796I8p2QW3jP5meq9v4fO2/jwKOUumu5z835tJgFwPwPxoVWPY7
      RuU/f+uvNprwg7/uANifTpW6v3rD2JoPOo2/E1bbYt8o6T/EDLD7b0vqv9KJb/fl++I/lA3DRpzM
      0r9dk21xknvjP9VFTnJfa+m/LRPAaR7X6j8aFVj2O0blPy3m0mAXA/A/XrsuO+Ryw78OzVJTWrzJ
      v1tl7ALolrk/lCW77bTKgr+k+E/YS2C/P+/ozTvPw7O/YubzSsdM2788ND/qc53QvzEa6WktRaa/
      Fu0NfDcx0b9/6682mvCDv167LjvkcsO/JubSYBcD8D9lLzJBH6nuP+lk1r5iJ7K/IcfXzlMHqb+0
      pMTaPJfFP7r8gs5L+6e/p4aRXWCH0b/jrqE+gy/Wv7xRhb0LfLQ/Z/GnyR8m0r/uANifTpW6vw7N
      UlNavMm/ZS8yQR+p7j8g5tJgFwPwP7ANmE3RLKs/fzX2ft5mgz8wImwo61+zv5Vve1YndcI/7AzT
      3jdH2T9jyKzJz7KoP1/fn14YQbI/TpZcrgh7zD96w9iaDzqNv1tl7ALolrk/6WTWvmInsr+wDZhN
      0SyrPy7m0mAXA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      HbqSHLqSjDwIzRsIzRv/vMAiSsAiSsI8+ZZv+ZZvyzwsyaEryaH6vIg5TYg5Tag83AN63AP69DyG
      /F6G/N71vECPe0CPWxC9h64kh64k+TxECVhECVjgPNJHqtFHqhK9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: [link]
name: align
num_gripper_vars: 3
objs: [time, node, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      kh04HICQ+z+9+buSmiHnvxmZ4dqoNP6/430KO/RAAkDHf+cZR6LAP89vuIgnrt2/607bKb2f6T+U
      hd9UbEDZP+g7zvSHdOK/kvVgU8L2y7+lwqn4tGLDP1Du3eR0X8E/7rbmV7xTwz/8KYaryo1yP6oB
      v1JhgOc/TowipHKz8b8TFhG5uPDzPzbN7/4A0fO/1G8cj40Y6j/5PRlwEn7QP6bidg74veW/axNc
      wLjd9j8WWfEWx6j3v3z1DveYcO8/EFoW4lAh5L/eMVeLxMrVPwrvVlr8UOu/7E1C8YxK8D8zHvS3
      hA/nv5k5SeMvn+A/jfHTvpEoxL+sF0jPoVfEvwXmampw5eU/Z8Y1Cb5J9L/SicdC0ZP8P/07EvH7
      Ofy/Xr/Q3Ytp8z8e7VQs/9H2vxgacOc4ywJACOamL4iTBMAv8mnfL7UNQEnBc9f5wgbArw9AJ6wB
      +z9PlN+5oxroP6UrgP7Wj/G/IlLYVzTe7j8MECJzflD7v7/N1As/ygFA/wRpXKS4978=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
