action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    /P//////3z8fKddblKDRv8yOAQU3pa2/3AXmLzGzpj9J1mEoosXTP7dsNo7LSNs/iscvuVbT1r/S
    p/izIKfiPyafl332geI/UQWmoN6i2D9t2//rIyzeP1/vXCieEes/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    /P//////3z8fKddblKDRv8yOAQU3pa2/3AXmLzGzpj9J1mEoosXTP7dsNo7LSNs/iscvuVbT1r/S
    p/izIKfiPyafl332geI/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      5KXtSYoD8D/fFw7LaHbpv/Z62Cyrj+c/X+HZws/dyL9mbaeNHUvjPzJ4/JolEea/+ms1DCtc5D/Z
      VyKR1NzmPwJeWGH1/uU/3xcOy2h26b/rpe1JigPwP0/FRP2TqOe/pNEu2shd1z84eX6PzNbqv59o
      /LTYnOk/jpgMPqPI6L9OeGOjUhvuvxXL07itGua/9nrYLKuP5z9PxUT9k6jnv+ql7UmKA/A/9yAD
      vuWFxD+e9IUT2+bTPz/pz5LBAeS/QdO3s4be4D/pR0hk2unjP/7Pa7G47uI/X+HZws/dyL+k0S7a
      yF3XP/cgA77lhcQ/6qXtSYoD8D/uvlL0K+fivzDmQhBEItU/qlhPp37r3L/OGbBs9Dndv9KnOtRC
      k9e/Zm2njR1L4z84eX6PzNbqv570hRPb5tM/7r5S9Cvn4r/4pe1JigPwPzzH7vr+lOW/LIDJQ4Gh
      5D+l7lKWWsbrP0VlrLEB3t0/Mnj8miUR5r+faPy02JzpPz/pz5LBAeS/MOZCEEQi1T88x+76/pTl
      v/Cl7UmKA/A/USKlIcDz3r9sxdee8Qbpv236RdDshOW/+ms1DCtc5D+OmAw+o8jov0HTt7OG3uA/
      qlhPp37r3L8sgMlDgaHkP1EipSHA896/6KXtSYoD8D82nkiIujTnP4tMUvKPMOo/2VcikdTc5j9O
      eGOjUhvuv+lHSGTa6eM/zhmwbPQ53b+l7lKWWsbrP2zF157xBum/Np5IiLo05z/upe1JigPwPx8b
      f41jc+E/Al5YYfX+5T8Vy9O4rRrmv/7Pa7G47uI/0qc61EKT179FZayxAd7dP236RdDshOW/i0xS
      8o8w6j8fG3+NY3PhP+6l7UmKA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      PVJCTgX8xjzgF27tjVXqvFVVVVVVVcE8dBOcddIM4DxFYQxMHAAGPdIM4UG5nwo9T5ohPCjX9zw4
      66QZwqsRPTVDeFDutwI9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    5jggyWpt0j8EeJtuSQC3PzdU78YUSbU/zv6L9jeGpz8C0OAAjT+rPz0HO1KpOK4/KzfMvwwYtz85
    h8+o2X2pP89jE+qbeao/V5iUQGTpxj/svPdXZAvHP8JCIx6fU8c/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    5jggyWpt0j8EeJtuSQC3PzdU78YUSbU/zv6L9jeGpz8C0OAAjT+rPz0HO1KpOK4/KzfMvwwYtz85
    h8+o2X2pP89jE+qbeao/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAA9bqH0KanVvwAmbJOZ8Yq/nQlJ1X1qoj9LZk0pwObVPyVTauBYt9g/9QDQnqOl079z
    srFnOYnjP0OvvLjDyuM/YZDUrEHA4D/VoV5avMjfPyV0CiEKbOc/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAA9bqH0KanVvwAmbJOZ8Yq/nQlJ1X1qoj9LZk0pwObVPyVTauBYt9g/9QDQnqOl079z
    srFnOYnjP0OvvLjDyuM/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P843wYAAAD4P/2tf8IHJvY/qj4Rkr/u5z9J6C+JGej3vwJi
      8Pm18Pc/0VVvJ3KS878Qzw2yCyf3v/ATTaeiTvY/AAAAAAAA+P/9rX/CByb2PzffBgAAAPg/xixe
      N0QO8z+3jRfbdD/1v7pEpx4WcfU/3oZIL3Fp979DlgxuFs33vy0uf0IjLfE/AAAAAAAA+P+qPhGS
      v+7nP8YsXjdEDvM/ON8GAAAA+D9BNqEZTizkv44ozcCF8OQ/vl0ArIjM9b9Rtrzt/QXxv3r5fbNp
      lMs/AAAAAAAA+P9J6C+JGej3v7eNF9t0P/W/QTahGU4s5L873wYAAAD4P5a8SW4K//e/iIVOBZ5F
      8j8PMC1FY4H2P510ABcmAPe/AAAAAAAA+P8CYvD5tfD3P7pEpx4WcfU/jijNwIXw5D+XvEluCv/3
      vzjfBgAAAPg/jhZ000aL8r+kNb+CM6b2v4Xj1PU54PY/AAAAAAAA+P/RVW8ncpLzv96GSC9xafe/
      vl0ArIjM9b+IhU4FnkXyP44WdNNGi/K/ON8GAAAA+D9RHYx/HIr2PwtIC1F9Iuq/AAAAAAAA+P8Q
      zw2yCyf3v0OWDG4Wzfe/Uba87f0F8b8PMC1FY4H2P6Q1v4Izpva/UR2MfxyK9j843wYAAAD4P1w5
      xjL7L/O/AAAAAAAA+P/wE02nok72Py0uf0IjLfE/evl9s2mUyz+ddAAXJgD3v4Xj1PU54PY/C0gL
      UX0i6r9cOcYy+y/zvzjfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAADUvAAAAAAAAAAAVVVVVVVVlTyrqqqqqqrUvFVVVVVVVYW8AAAAAAAAAABV
      VVVVVVXuvFVVVVVVVWW8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADWbNELAmCgP8wgNWaa1pc/KvO9xdFvlz+pUYF7eSqgP8tVkTdCenE/MjH+950UnT+0
    j2JRDGWWPxWaVc6tVH8/qrRx81sRyT+yXp3O4VHLPz/IbPJARck/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADWbNELAmCgP8wgNWaa1pc/KvO9xdFvlz+pUYF7eSqgP8tVkTdCenE/MjH+950UnT+0
    j2JRDGWWPxWaVc6tVH8/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      5KXtSYoD8D/fFw7LaHbpv/Z62Cyrj+c/X+HZws/dyL9mbaeNHUvjPzJ4/JolEea/+ms1DCtc5D/Z
      VyKR1NzmPwJeWGH1/uU/ifYwD2rUzz/UqE98UPOxP4OiZVZxZMq/3xcOy2h26b/rpe1JigPwP0/F
      RP2TqOe/pNEu2shd1z84eX6PzNbqv59o/LTYnOk/jpgMPqPI6L9OeGOjUhvuvxXL07itGua/FbqO
      ncFKwr9Xvv9bbhvPvwxocmyfMMA/9nrYLKuP5z9PxUT9k6jnv+ql7UmKA/A/9yADvuWFxD+e9IUT
      2+bTPz/pz5LBAeS/QdO3s4be4D/pR0hk2unjP/7Pa7G47uI//S1QkkMqoD9CM0RJKrytv5LW2JEO
      HXW/X+HZws/dyL+k0S7ayF3XP/cgA77lhcQ/6qXtSYoD8D/uvlL0K+fivzDmQhBEItU/qlhPp37r
      3L/OGbBs9Dndv9KnOtRCk9e/SxbUqd+N1L+J+hXO453iv6S9wOAsVtQ/Zm2njR1L4z84eX6PzNbq
      v570hRPb5tM/7r5S9Cvn4r/4pe1JigPwPzzH7vr+lOW/LIDJQ4Gh5D+l7lKWWsbrP0VlrLEB3t0/
      P5pZjH5Cvz/f2ScuQxvQP/nM29DnWb2/Mnj8miUR5r+faPy02JzpPz/pz5LBAeS/MOZCEEQi1T88
      x+76/pTlv/Cl7UmKA/A/USKlIcDz3r9sxdee8Qbpv236RdDshOW/2pkF0jZIwb9zkHuPZSLAv6XO
      3V1bxr0/+ms1DCtc5D+OmAw+o8jov0HTt7OG3uA/qlhPp37r3L8sgMlDgaHkP1EipSHA896/6KXt
      SYoD8D82nkiIujTnP4tMUvKPMOo/UFg0RcDgzz+qRbbYGwbdP7oW51BNmM+/2VcikdTc5j9OeGOj
      Uhvuv+lHSGTa6eM/zhmwbPQ53b+l7lKWWsbrP2zF157xBum/Np5IiLo05z/upe1JigPwPx8bf41j
      c+E/lNT2eGXNxj+ErANmN+rUP5Ak0ZrvB8a/Al5YYfX+5T8Vy9O4rRrmv/7Pa7G47uI/0qc61EKT
      179FZayxAd7dP236RdDshOW/i0xS8o8w6j8fG3+NY3PhP+6l7UmKA/A/NXDCRMHSzT/S3VHPoCPS
      P9lymFDHDMu/ifYwD2rUzz8Vuo6dwUrCv/0tUJJDKqA/SxbUqd+N1L8/mlmMfkK/P9qZBdI2SMG/
      UFg0RcDgzz+U1PZ4Zc3GPzVwwkTB0s0/zaXtSYoD8D/efO2e2VvnP0hot8BiKOu/1KhPfFDzsT9X
      vv9bbhvPv0IzREkqvK2/ifoVzuOd4r/f2ScuQxvQP3OQe49lIsC/qkW22BsG3T+ErANmN+rUP9Ld
      Uc+gI9I/3nztntlb5z/ipe1JigPwP/h1wlaqv+S/g6JlVnFkyr8MaHJsnzDAP5LW2JEOHXW/pL3A
      4CxW1D/5zNvQ51m9v6XO3V1bxr0/uhbnUE2Yz7+QJNGa7wfGv9lymFDHDMu/SGi3wGIo67/4dcJW
      qr/kv9ql7UmKA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      PVJCTgX8xjzgF27tjVXqvFVVVVVVVcE8dBOcddIM4DxFYQxMHAAGPdIM4UG5nwo9T5ohPCjX9zw4
      66QZwqsRPTVDeFDutwI92ccUW+a9BD3RuEpdzzkRPeY9fI1A+vY8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: [link]
name: align
num_gripper_vars: 3
objs: [time, node, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      gdThBpDP+z8rZSa5Mezxv2X1y1SXcvO/MI08papPAkDmUb+Epynlv4LWm+m7Lus/5hBmaNOH/j/q
      rccP3TjcPz62KVGGc9u/YexNGUAN1D8eVTzXAr/fv03ktJSn9sY/CvVacWDU0D8I5xIqoGzaP+th
      tZrYCtI/5tzWxbNY279Hl/Qgm+uSv8Ck5E1gQsq/fYBT+h7lyb+3heIgAXvHv5VApS+F8+S/kGx0
      Xliv8T+bBYbbj3HZv53skaVhp+Q/vwgzzyaM5r9dKQCnJHzXP+u0Kxd2/9m/rUvsy0xg3T9jrtNV
      vyLEP6ZZWOdVNlk/45JZKeeM8r8iz+sUtNLev3aououyPNa/C/jReG/F0D/uqe9VwWTWv7OcapUz
      HPI/Dtpm5U7G/D+l6WaF26Ksvz/s9JBfHe+/xRLk+dzs4z+PMMlbcq3RP6Z800r5aOM/tKGhM6Zg
      8r8fwJrBLBPnP82/5C8MY9c/jsj8gn+/278SwXTDe4vcPw8apqSXFeS/aY3fl0fa678=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
