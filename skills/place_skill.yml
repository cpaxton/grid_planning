action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    ////////3z8aZbRpgUPKv9APgXy2n3K/IjNxJgjlhb8Ftp2EceDKPxsnTfOe2NM/QKd9OxO5y7/d
    HZCLN3rkPypdSFw9BuU/LZRB/uEb2D9gwDh8+iHWP6CS0fEU+O0/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    ////////3z8aZbRpgUPKv9APgXy2n3K/IjNxJgjlhb8Ftp2EceDKPxsnTfOe2NM/QKd9OxO5y7/d
    HZCLN3rkPypdSFw9BuU/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      YSmUPcwC8D8Zahy3+uTrPyd+P9t2/Lc/aLqMDEsmwj8HFfrgo/jrv5bCipTY5+W/zlbjEoAX3T+R
      ngAJc5PkP/Rw63ewb9Q/GWoct/rk6z9eKZQ9zALwP2Ujlg3JXME/yTj0Mzs4tz+3L1dfY7Pvv1P7
      dUreIuC/cTQA6dW04T80mTzEHZviP1hzegxI+9I/J34/23b8tz9lI5YNyVzBP04plD3MAvA/WFSn
      l0/w6b8PIkkTJm+xv6CVCUJBT8S/c2ZQPWAHxL/2ysWk5FjDv9ISXty47Mg/aLqMDEsmwj/JOPQz
      Ozi3P1hUp5dP8Om/YymUPcwC8D/a3NIMN2XJv0IfggwyusA/iu9Z9LIw0j/QvlrYlH7DP6uu2KU7
      Ab6/BxX64KP467+3L1dfY7Pvvw8iSRMmb7G/2tzSDDdlyb9SKZQ9zALwP8ngiRg1OeA/GAV4+Skw
      4r+LPEMG+hTiv6w1THNJ8dO/lsKKlNjn5b9T+3VK3iLgv6CVCUJBT8S/Qh+CDDK6wD/J4IkYNTng
      P1wplD3MAvA/fT3snZBp2L+9/6wlD6revwQJUihvRua/zlbjEoAX3T9xNADp1bThP3NmUD1gB8S/
      iu9Z9LIw0j8YBXj5KTDiv3097J2Qadi/WSmUPcwC8D9q4xJeChTkP7R/tXckI9s/kZ4ACXOT5D80
      mTzEHZviP/bKxaTkWMO/0L5a2JR+wz+LPEMG+hTiv73/rCUPqt6/auMSXgoU5D9SKZQ9zALwP1U5
      6GLetae/9HDrd7Bv1D9Yc3oMSPvSP9ISXty47Mg/q67YpTsBvr+sNUxzSfHTvwQJUihvRua/tH+1
      dyQj2z9VOehi3rWnv14plD3MAvA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      STxfV2w0pDyg3jb2953UPN6/ZlSFLdC8k91smSIKvjzYnotpxHymvMpK9NpzMf289vedOJySAb05
      718zqsLjvLkzmOEd/QW9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    bVqcpfpv0j/2MkHFAFKtP4IKgd0u7pY/fRECHK8WpD8j+OUGliWuP7B+nTcfL7I/O3r4PeVftT+m
    FD92gHOlPy9Ox3G54qY/MOiPWdR8vT9HKFqh7lPDP2mborkEmsU/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    bVqcpfpv0j/2MkHFAFKtP4IKgd0u7pY/fRECHK8WpD8j+OUGliWuP7B+nTcfL7I/O3r4PeVftT+m
    FD92gHOlPy9Ox3G54qY/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABIAWntdF3DvwB4EvzRMHK/K8CfCFQhiD+QjRCXYHPDP43EV5ZBFtE/7HmQINIIyr+D
    ophTUGXlP1dzR8VSEOU/v+teVJcj4j+1m7CMqQ/gP7VFVarRYeY/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABIAWntdF3DvwB4EvzRMHK/K8CfCFQhiD+QjRCXYHPDP43EV5ZBFtE/7HmQINIIyr+D
    ophTUGXlP1dzR8VSEOU/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P843wYAAAD4P7Vm8KIAVfc/RknVwffa1L9Xmdcxxev3v1yd
      wV10gvI/HNFhACtU97871leaP2Dov5sQiZab4fe/AAAAAAAA+P+1ZvCiAFX3PzjfBgAAAPg/x7wt
      Ssbdmj+aT6B1n8z2vxJPgHzakvU/J6J+vP//97/uoU/9S7Hwv1mP7t9zxve/AAAAAAAA+P9GSdXB
      99rUv8e8LUrG3Zo/Od8GAAAA+D/YRemVemLcPwPmkA5dyOU/oBpJe27Bm79IvcGrjYjxv2RD9SDf
      4sY/AAAAAAAA+P9Xmdcxxev3v5pPoHWfzPa/2EXplXpi3D853wYAAAD4P4gWUrO9NfG//i2cvYLL
      9j8JXU4hZvHkP/EuHCn9m/c/AAAAAAAA+P9cncFddILyPxJPgHzakvU/A+aQDl3I5T+IFlKzvTXx
      vzjfBgAAAPg/RX/NTWmU9b/Bu34Ae4/2v+greTqK7/O/AAAAAAAA+P8c0WEAK1T3vyeifrz///e/
      oBpJe27Bm7/+LZy9gsv2P0V/zU1plPW/ON8GAAAA+D8JA98y2rPwP4VtCkD3xfc/AAAAAAAA+P87
      1leaP2Dov+6hT/1LsfC/SL3Bq42I8b8JXU4hZvHkP8G7fgB7j/a/CQPfMtqz8D863wYAAAD4P5Uh
      vcP4XOw/AAAAAAAA+P+bEImWm+H3v1mP7t9zxve/ZEP1IN/ixj/xLhwp/Zv3P+greTqK7/O/hW0K
      QPfF9z+VIb3D+FzsPzjfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAAAAAAAAAAAAAAAVVVVVVVVlbxVVVVVVVXyPFVVVVVVVdM8AAAAAAAAAABV
      VVVVVdXxvAAAAAAAANy8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABBNuOKC75xP7aBo0HG4Gw/RWUC0lK0dz+YQORMHHxyPw/uC3XFU6U/6R2uHgTksD8h
    +QXsTyqTPy0aQOE+ppg/OZeCgEg3wT8RcPPH+FzKP8H0n2RIY8M/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABBNuOKC75xP7aBo0HG4Gw/RWUC0lK0dz+YQORMHHxyPw/uC3XFU6U/6R2uHgTksD8h
    +QXsTyqTPy0aQOE+ppg/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      YSmUPcwC8D8Zahy3+uTrPyd+P9t2/Lc/aLqMDEsmwj8HFfrgo/jrv5bCipTY5+W/zlbjEoAX3T+R
      ngAJc5PkP/Rw63ewb9Q/1ytBtXoewj/vU0RGVHAMP4k7SW9QmLm/GWoct/rk6z9eKZQ9zALwP2Uj
      lg3JXME/yTj0Mzs4tz+3L1dfY7Pvv1P7dUreIuC/cTQA6dW04T80mTzEHZviP1hzegxI+9I/5Zuc
      t62Btj/u2jUVhSxPPxlmks/XqqG/J34/23b8tz9lI5YNyVzBP04plD3MAvA/WFSnl0/w6b8PIkkT
      Jm+xv6CVCUJBT8S/c2ZQPWAHxL/2ysWk5FjDv9ISXty47Mg/ncv0iVt0lr8ZHibKbKDEv2UfbObN
      BNM/aLqMDEsmwj/JOPQzOzi3P1hUp5dP8Om/YymUPcwC8D/a3NIMN2XJv0IfggwyusA/iu9Z9LIw
      0j/QvlrYlH7DP6uu2KU7Ab6/j7LjWFIrtz8dTXPw+k7BP0A+ZkNkH9i/BxX64KP467+3L1dfY7Pv
      vw8iSRMmb7G/2tzSDDdlyb9SKZQ9zALwP8ngiRg1OeA/GAV4+Skw4r+LPEMG+hTiv6w1THNJ8dO/
      zsrWc8R2uL9iQH2j/nmRPzXojDYVcrI/lsKKlNjn5b9T+3VK3iLgv6CVCUJBT8S/Qh+CDDK6wD/J
      4IkYNTngP1wplD3MAvA/fT3snZBp2L+9/6wlD6revwQJUihvRua/SeyWTWn/Pj8ERCn0q8PUP2RB
      9DO33rS/zlbjEoAX3T9xNADp1bThP3NmUD1gB8S/iu9Z9LIw0j8YBXj5KTDiv3097J2Qadi/WSmU
      PcwC8D9q4xJeChTkP7R/tXckI9s/GNk7c3O8WD9oZh3r8enGv+GD8KARLrO/kZ4ACXOT5D80mTzE
      HZviP/bKxaTkWMO/0L5a2JR+wz+LPEMG+hTiv73/rCUPqt6/auMSXgoU5D9SKZQ9zALwP1U56GLe
      tae/Bt/dnABhtD/ngTVOlEzNP8jDgsfyt72/9HDrd7Bv1D9Yc3oMSPvSP9ISXty47Mg/q67YpTsB
      vr+sNUxzSfHTvwQJUihvRua/tH+1dyQj2z9VOehi3rWnv14plD3MAvA/onJY2CCgs79sHjGfYGLj
      vy48mmGV0cA/1ytBtXoewj/lm5y3rYG2P53L9IlbdJa/j7LjWFIrtz/OytZzxHa4v0nslk1p/z4/
      GNk7c3O8WD8G392cAGG0P6JyWNggoLO/SSmUPcwC8D/261YEcrXlP2MIOgaaeee/71NERlRwDD/u
      2jUVhSxPPxkeJspsoMS/HU1z8PpOwT9iQH2j/nmRPwREKfSrw9Q/aGYd6/Hpxr/ngTVOlEzNP2we
      MZ9gYuO/9utWBHK15T9QKZQ9zALwPy8brD/6MeK/iTtJb1CYub8ZZpLP16qhv2UfbObNBNM/QD5m
      Q2Qf2L816Iw2FXKyP2RB9DO33rS/4YPwoBEus7/Iw4LH8re9vy48mmGV0cA/Ywg6Bpp5578vG6w/
      +jHiv1cplD3MAvA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      STxfV2w0pDyg3jb2953UPN6/ZlSFLdC8k91smSIKvjzYnotpxHymvMpK9NpzMf289vedOJySAb05
      718zqsLjvLkzmOEd/QW9Qf5ZZZyJEj2mI9RSVqL3PJY7gxne0Qs9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: [link]
name: place
num_gripper_vars: 3
objs: [time, node, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      ZPl8lA9G+j+qjtYm2K/tv14RVUiYZP+/KpJZq9Mp+z+VR+/XkrXZv0YR1PT3I+g/19FlFfUc8T/W
      bf8oMCC4vw7YtkcWvNY/uz61eIYH2b/nFHyoTpDDP3HMpR5Es/C/M1U1fO/w7T/wJE7Ns9yovzJA
      3ENWTc+/gIZdrlEtsL9pUCOIUw7HP78gWZnL7c+/4oFYtfx1zj8OYPFPfznSv26/zkjWRbi/DxW6
      x4XNrj9M6lYfZNOjPy6D0d+WO/U/wPCDISrl+L+av60TF5Dkv8T+dV4Z0uE/EXt6xjMt5b9JSzDF
      3523P29ZBB7Ld9S/9UjT1GKJ8D/RD0zGvbnKP3r87tm96dG/8lrO8edA5T9RdYC+t/BlP98tiVLM
      A+I/RaSThjTgC8B1OfpjkxXkP5D6HOrHn8+/CW20yG0Ztz9aFmBU4ZfQP06lWZH7GtI/Vg5fBrJq
      uL9ngYSNPeLSv6FjFsdW3dM/ekRo+FFi37/J6c3sTLLhv56ZHahcXOe/nlFOaAfYBUA=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
