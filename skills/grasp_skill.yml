action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D996GFZNmeBP7UKV9qExqE/Lh0ov5S2yT84AL9s1nfKP/9Q8vi014E/t5xp8+JLi79D
    +zGwVdR+v/HGYDwtMKM/WoR9mGe24j9G702NRp3iPxJn9KobkuQ/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D996GFZNmeBP7UKV9qExqE/Lh0ov5S2yT84AL9s1nfKP/9Q8vi014E/t5xp8+JLi79D
    +zGwVdR+v/HGYDwtMKM/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      DqXsrY8E8D99hRN2HYh0P/G2bapsx5i/jJTJs6mHpj+CdPSGwNifP2atNl8jk2Q/0i/OxHWLab/6
      mU5cK8Oov6F5kdeLAbg/fYUTdh2IdD8NpeytjwTwPxswuf9D1MC/AwZjanfg2j8VWUyBg1nZP3Ig
      dr6oqdg/q87a7kpi1z/EOvG3bfjCv6kzZwun+uW/8bZtqmzHmL8bMLn/Q9TAvw6l7K2PBPA/nKeE
      qm9n6T/pV6ui9m7pP5RwOxNna+o/+qsYjlgQ6z+8hjAhcwCxP+ziDrByTsq/jJTJs6mHpj8DBmNq
      d+DaP5ynhKpvZ+k/D6XsrY8E8D+hSPZEQcbvP0BUtaYudO8/MIBsYhBp7z9xwoHbNWXKP80DglXi
      duS/gnT0hsDYnz8VWUyBg1nZP+lXq6L2buk/oUj2REHG7z8PpeytjwTwP/+5KCLDz+8/HtuaARuw
      7z8oEQ22QurPP+CUoLUNhOS/Zq02XyOTZD9yIHa+qKnYP5RwOxNna+o/QFS1pi507z//uSgiw8/v
      PxSl7K2PBPA/m6Vc/iT97z9KIqakli/IP8PKAH1qteO/0i/OxHWLab+rztruSmLXP/qrGI5YEOs/
      MIBsYhBp7z8e25oBG7DvP5ulXP4k/e8/EqXsrY8E8D/L6CZqP4PFP2AUrWf+/eK/+plOXCvDqL/E
      OvG3bfjCv7yGMCFzALE/ccKB2zVlyj8oEQ22QurPP0oipqSWL8g/y+gmaj+DxT8OpeytjwTwP196
      KUbA4ZY/oXmR14sBuD+pM2cLp/rlv+ziDrByTsq/zQOCVeJ25L/glKC1DYTkv8PKAH1qteO/YBSt
      Z/794r9feilGwOGWPxCl7K2PBPA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      KCZ+l6TqiDwKSlRIVhvUvI0GI1ea9tq8Iyz3NMLyCr0jV5r2ikgTPXubSv4B0808gj24U56cjjxB
      XmcHom3FPPJl3tE1QbG8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    tG3ytKxk0j+sUSXWBvGSP/scFf0/Lp4/ULC4SX2RgT/UHPkH17aJPwtfELDfV+c/lRAVewzW5T/m
    90poHEeRPyO6GMhgl44/hjN878NE5j+EBxQl8O3lP8FS1rnUduU/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    tG3ytKxk0j+sUSXWBvGSP/scFf0/Lp4/ULC4SX2RgT/UHPkH17aJPwtfELDfV+c/lRAVewzW5T/m
    90poHEeRPyO6GMhgl44/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D996GFZNmeBP7UKV9qExqE/Lh0ov5S2yT84AL9s1nfKP/9Q8vi014E/t5xp8+JLi79D
    +zGwVdR+v/HGYDwtMKM/WoR9mGe24j9G702NRp3iPxJn9KobkuQ/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D996GFZNmeBP7UKV9qExqE/Lh0ov5S2yT84AL9s1nfKP/9Q8vi014E/t5xp8+JLi79D
    +zGwVdR+v/HGYDwtMKM/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      u73X2d982z0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaOhNvLv4P5ciiBNZP+e/+e/rIRZuib9MRhlpi3m8PxxB
      C1GgRso/55SSAyR/vD+01ZC6N0uvv+xO5stoyGo/AAAAAAAAAACXIogTWT/nv6rX9tI8cgJAWpLo
      hBVnAEDQTSvFpfH5P7hddmpbtvY/hLkG3HHR9z9vEbPBUhTqP5BxlF3cAu2/AAAAAAAAAAD/7+sh
      Fm6Jv1qS6IQVZwBA8SnjvbKTAUDliZzsFob9P1NpJGsIwPo/U/aRXIcY+z9hrdVnGPXzP3wwDkxP
      seq/AAAAAAAAAABNRhlpi3m8P89NK8Wl8fk/5Imc7BaG/T9JJwRdVHT5P09JVwqsNfc/NzfPg3tR
      9z8j6vPqO/n0PxWUD+7YeOO/AAAAAAAAAAAcQQtRoEbKP7hddmpbtvY/U2kkawjA+j9PSVcKrDX3
      P5XHZtmGRvU/2wlpm0FF9T+rLJvYWBLzP1ZLYAjxjuG/AAAAAAAAAADnlJIDJH+8P4S5Btxx0fc/
      U/aRXIcY+z83N8+De1H3P9sJaZtBRfU/9JYJxjte9T9R6rjXb8jyP117vj44MOK/AAAAAAAAAAC0
      1ZC6N0uvv28Rs8FSFOo/Ya3VZxj18z8j6vPqO/n0P6ssm9hYEvM/Ueq412/I8j/d3D25vcoHQAfv
      PqsynNM/AAAAAAAAAADtTubLaMhqP5BxlF3cAu2/fDAOTE+x6r8VlA/u2Hjjv1ZLYAjxjuG/XXu+
      Pjgw4r8H7z6rMpzTPxHI6KdEu+I/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      5GaDpRbW+7+ongs+oE7WP5dYZcEFq9S/qMaL6A+ypr/woXVhe0+aP4A5xmI4LXk/ABw9PYoaMT8Q
      dO56QWKwP0ZdNLYscNQ/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    tG3ytKxk0j+sUSXWBvGSP/scFf0/Lp4/ULC4SX2RgT/UHPkH17aJPwtfELDfV+c/lRAVewzW5T/m
    90poHEeRPyO6GMhgl44/hjN878NE5j+EBxQl8O3lP8FS1rnUduU/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    tG3ytKxk0j+sUSXWBvGSP/scFf0/Lp4/ULC4SX2RgT/UHPkH17aJPwtfELDfV+c/lRAVewzW5T/m
    90poHEeRPyO6GMhgl44/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      DqXsrY8E8D99hRN2HYh0P/G2bapsx5i/jJTJs6mHpj+CdPSGwNifP2atNl8jk2Q/0i/OxHWLab/6
      mU5cK8Oov6F5kdeLAbg/ayDsy7FWsL+EWI6tbE+sv9AzwJ8+LqY/fYUTdh2IdD8NpeytjwTwPxsw
      uf9D1MC/AwZjanfg2j8VWUyBg1nZP3Igdr6oqdg/q87a7kpi1z/EOvG3bfjCv6kzZwun+uW/yP0S
      OyYI0z/7nhXm+c/QP9G3+OdokNI/8bZtqmzHmL8bMLn/Q9TAvw6l7K2PBPA/nKeEqm9n6T/pV6ui
      9m7pP5RwOxNna+o/+qsYjlgQ6z+8hjAhcwCxP+ziDrByTsq/nwFsvfEcx79ncSRDqWDEv716pyRs
      QMS/jJTJs6mHpj8DBmNqd+DaP5ynhKpvZ+k/D6XsrY8E8D+hSPZEQcbvP0BUtaYudO8/MIBsYhBp
      7z9xwoHbNWXKP80DglXiduS/iXXtQoAcoz928fneolChPylCWfHdnbA/gnT0hsDYnz8VWUyBg1nZ
      P+lXq6L2buk/oUj2REHG7z8PpeytjwTwP/+5KCLDz+8/HtuaARuw7z8oEQ22QurPP+CUoLUNhOS/
      9hW9haqEqj+ZY2omozanP37LeVIcPLM/Zq02XyOTZD9yIHa+qKnYP5RwOxNna+o/QFS1pi507z//
      uSgiw8/vPxSl7K2PBPA/m6Vc/iT97z9KIqakli/IP8PKAH1qteO/L5zkRPoHnD/r5TqckeuVPy1H
      nuvWGqc/0i/OxHWLab+rztruSmLXP/qrGI5YEOs/MIBsYhBp7z8e25oBG7DvP5ulXP4k/e8/EqXs
      rY8E8D/L6CZqP4PFP2AUrWf+/eK/ZX+n1gF/iz8wQyliACOCP0rLdpjCUKA/+plOXCvDqL/EOvG3
      bfjCv7yGMCFzALE/ccKB2zVlyj8oEQ22QurPP0oipqSWL8g/y+gmaj+DxT8OpeytjwTwP196KUbA
      4ZY/TbHd7i2ywj+bGAQZL9G+P1U7p6FxmMI/oXmR14sBuD+pM2cLp/rlv+ziDrByTsq/zQOCVeJ2
      5L/glKC1DYTkv8PKAH1qteO/YBStZ/794r9feilGwOGWPxCl7K2PBPA/SptzcXS+1L+PNQsgwDnU
      v03NxO5pCNW/ayDsy7FWsL/I/RI7JgjTP58BbL3xHMe/iXXtQoAcoz/2Fb2FqoSqPy+c5ET6B5w/
      ZX+n1gF/iz9Nsd3uLbLCP0qbc3F0vtS/DaXsrY8E8D9WeR6KxObvP+Pac5c2su8/hFiOrWxPrL/7
      nhXm+c/QP2dxJEOpYMS/dvH53qJQoT+ZY2omozanP+vlOpyR65U/MEMpYgAjgj+bGAQZL9G+P481
      CyDAOdS/VnkeisTm7z8MpeytjwTwP76anbGPwe8/0DPAnz4upj/Rt/jnaJDSP716pyRsQMS/KUJZ
      8d2dsD9+y3lSHDyzPy1HnuvWGqc/Sst2mMJQoD9VO6ehcZjCP03NxO5pCNW/49pzlzay7z++mp2x
      j8HvPxWl7K2PBPA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      KCZ+l6TqiDwKSlRIVhvUvI0GI1ea9tq8Iyz3NMLyCr0jV5r2ikgTPXubSv4B0808gj24U56cjjxB
      XmcHom3FPPJl3tE1QbG8v0tSdcxm1Tyt4HkcNEPiPMmVpr0igq28
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: ['']
name: grasp
num_gripper_vars: 3
objs: [time, link, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      OiVQJxBm8z9H8Dcqfln6v6MfO4Zd0+W/VoSD3lFIAEDPeHTzXYz2v/0R/DHIl+s/U18aqazW/D/A
      8XJ9KYaCv0oXxIty1pS/xNElpMj5oj8NHaD5b6qEv5i2DmGpd4C/pXOieDYUoj8YATsW/2JiPzm6
      lRgQ0ZE/0hsFgIoRlL927spfcCSZPzCaB7tjm5G/4B6xI9GPfz/VQqtgNO+WPxENYEL5t7S/jkr/
      9Bv2tT9gxN+wa6imv2g9j85S8qM/ueQK4sEtqL8PKJv2Tr2ZvyO+gGBWnLc/l5Io1zIDvL9SwvYj
      ORmpP2wxionX8aq/ot5ER0HkrD+6M6uJqyGjP3dh71M768O/cdEE7tHOxz/tQ00cjP3Bv9rCBPTc
      t8A/n1eibi+3uL8Zap2MH5TGPx0//Qx/g9G/tQpfU3OM1T+Lsyrb4e3dvxRW2aKb4ts/QtNePqRL
      xr85BdHhRzZ5Px519SsjSoA/0ivYI+qsoz9yzQacxT++v/XYJ8KYoJg/Qw2hgaNq0T8=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      /v//////7z8=
