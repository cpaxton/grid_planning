action_mean: &id001 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id002 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D+go6p1rafMv1cQ9A1989A/9d2JB+Ub4b/KBkTRqV3lPySgTcJrZuQ/VzcFqfsk0r8s
    Enrb52DlP/mFKlDR+s0/
action_mean_ng: *id001
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      hsENUOIG8D/je+fQoErZP7sfQ033e8I/WmpoKn5/7b/ikQDM/APtP07CZ0PtYd0/kt8tQVLWrz8u
      /0t+Fd3dv0dgKR9O1by/43vn0KBK2T9zwQ1Q4gbwP45thLNFMtu/ujUuYVuO2b8/uY4ibyfRP8o6
      9QttcM0/Nje/bcbsyD+EhCPyD9rIv6iuFN/9w8a/ux9DTfd7wj+ObYSzRTLbv4bBDVDiBvA/EMre
      AZpOu7+N21AosrjRPxwtlCG0rLI//agTSydBzL8+rfTpXHvFv27q1u1VtNE/WmpoKn5/7b+6NS5h
      W47ZvxDK3gGaTru/esENUOIG8D8pqHeDqnDvv7z9ejP+F92/Kdtf+D0Xaj/o8yYUK8zfP9INUpZl
      Dq8/4pEAzPwD7T8/uY4ibyfRP43bUCiyuNE/Kah3g6pw77+XwQ1Q4gbwP9alBF/Jvt8/y7SKZxQu
      pb8oUpmNSIXhv0IFOIuYopy/TsJnQ+1h3T/KOvULbXDNPxwtlCG0rLI/vP16M/4X3b/WpQRfyb7f
      P5jBDVDiBvA/5LeZ4tZFzj+BsntdZnHqv9YOZ4mgjd2/kt8tQVLWrz82N79txuzIP/2oE0snQcy/
      Kdtf+D0Xaj/LtIpnFC6lv+S3meLWRc4/esENUOIG8D+O7ZMrdHvVP9bWO2THJu6/Lv9LfhXd3b+E
      hCPyD9rIvz6t9Olce8W/6PMmFCvM3z8oUpmNSIXhv4Gye11mceq/ju2TK3R71T92wQ1Q4gbwP1eL
      ikg4f7u/R2ApH07VvL+orhTf/cPGv27q1u1VtNE/0g1SlmUOrz9CBTiLmKKcv9YOZ4mgjd2/1tY7
      ZMcm7r9Xi4pIOH+7v3/BDVDiBvA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      0zGXCE8KurzL4ox2D5MSPUHy51UW1/Y8szij3cPW47zJn1dZnBEGvTwpSP68+iO9sfVtwFCNCz20
      e9j6NgD/PDwpSP68ygo9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: &id003 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    ztC9Puhh0j8ciz3quMujPyOMoPcuRKs/P2q09P590j8zGvDJlRXMPx/LZZqworA/OJmHR/9Tpj/E
    HGXYqL+tP7m106rPu6k/
action_std_ng: *id003
goal_mean: &id004 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAA5sG1j9GPLv/tP+XrUANM/zRRscaTm6b9NV9jn2njsPxeH7mIuvuU/U64aIKW+0b+l
    EDZ8o0jkP2x31B+szsw/
goal_mean_ng: *id004
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P843wYAAAD4P6CxSpHWrPG/lr4//HPT8j87vJAEj/z3v+0L
      tM/MOfU/EPHHjrRvg7+L7R4UsLb3vwLnHkLPoc+/AAAAAAAA+P+gsUqR1qzxvzbfBgAAAPg/dEcZ
      KPJbzr9UW4G4Nh/xP0RsTpaYNfe/kFbd0Y4f8L9giQ9/ZO3tP7Kpn6fx7PI/AAAAAAAA+P+Wvj/8
      c9PyP3RHGSjyW86/Od8GAAAA+D/RY2+kR1Dzv5BG1+asZ+M/w4vAG0cC7r/iEVnn3+T0v8nQbZxJ
      Kec/AAAAAAAA+P87vJAEj/z3v1Rbgbg2H/E/0WNvpEdQ87833wYAAAD4P+CcY5vL1vS/U5vRxpqO
      rj/Zea+h9NL3Pxizjb3fRsk/AAAAAAAA+P/tC7TPzDn1P0RsTpaYNfe/kEbX5qxn4z/gnGOby9b0
      vzffBgAAAPg/R8EvICAi5j/ZS7kWTz/zvz8kK6YSF+2/AAAAAAAA+P8Q8ceOtG+Dv5BW3dGOH/C/
      w4vAG0cC7r9Tm9HGmo6uP0fBLyAgIuY/ON8GAAAA+D9/A6r1hsXOPw5ibLuEpfe/AAAAAAAA+P+L
      7R4UsLb3v2CJD39k7e0/4hFZ59/k9L/Zea+h9NL3P9lLuRZPP/O/fwOq9YbFzj853wYAAAD4P2ga
      MZbJsZA/AAAAAAAA+P8C5x5Cz6HPv7Kpn6fx7PI/ydBtnEkp5z8Ys42930bJPz8kK6YSF+2/DmJs
      u4Sl979oGjGWybGQPzjfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P+rqqqqqqqwvAAAAAAAAMC8VVVVVVWVAb0AAAAAAEDUvFVVVVVVVcm8AAAAAAAA2DwA
      AAAAAADMPAAAAAAAAMA8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAUkRb/V/ekP+g5ttLsE6U/crSO7VJmkz8tvRSx1XOhPw1Fx940i6s/LFjL5zJSpT9l
    zlRoWmmoPwfMOa2iiac/
goal_std_ng: *id005
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  init_params: wmc
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: lift
num_gripper_vars: 3
objs: [time, vise]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      /szoVatQaD8AkCHEIe4wPwBQoTnAPkc/AOT0Jgmcb78A4BFKCZhbvwCAD0D46du+EMAbf0c4Yz/A
      2xaS3ztSP5AoPRkA5GW/YOc0HEFRfb8gtOGV0ydzP9AM/aeFJoU/AECQ7r8mRT8AevYFZSd4P0Bi
      fUoD5YY/4Om6syK6ez+Yc4y0cE6av1rkZP9qPKK/oKm3NA23cz9gPK/+6vNjv6DxLfVn+XK/0P/x
      F9yQd7+AMNqf2KJfvwA5PuqXpXY/AM0h5hiudL+AjaSYp6JpP4DsuIy3KGC/gEgTebAvkL8AXfa5
      CFdiP3yolLzQg6g/ANXhGv8I4j4AXpA6jW3pPkCgNI5Yiha/2D2hFSAyIL+YKRoSQ7IxP4xu2yFG
      Zjc/oJdsMIUA4L4g2OGqsB3JPmCC316hFNg+wHQPmTOs4j4APGCrEQDDPgDqZSkYhMq+AJAhxCHu
      MD9A+pf4RoeCPwCcP6IIWmu/ABUBop2Akb8AAEQEuv0hPwAAannXfsA+IHYcR3D2e7+AN57Gv4B6
      vxBupUasGYE/gDSvKVMgnz/ASMM1R1mCvxATVeB4qKO/AJiqUWu/ej8AID4uRcRQPwCIsQzNNG8/
      gO5v3Rh3eb8QRpX+NvqivwCbgihtJ3u/gHfOxAuugD8ALV175b9KPwDP1e99FmK/AMNwh5MJjL9A
      pEIiKsCUvwA1DZZSXHI/wLuatVf0k7/AntfPet+dP8DbZ/FOTZ0/AIjeH46XhL8ADprHvleLv0A4
      CyNJkJ4/MFcW1UipJb+gGD635Vw3vwClMRD2xgS/2NZgEJStTz8gn7qH/4xBP+Eade0oNlO/kD26
      Vt3OAz/wACD/a33tvuDlLae6Bf++8OEUV3PXAr/40h5JRhX3vsCFs6LFhfI+AFChOcA+Rz8AnD+i
      CFprv/7+9DzgU2Y/AKoqpTNmdz8AYHGbketIvwAALCZKU86+4PbLbsL1bz9A+1bTEoBqPxCFBxVA
      NXO/EEtbg35ikL9AjWeSvLJ3P9C+nnepPpU/AJ7B6FC1ZL8AyCWqbYlgPwByV7Jmymg/QNJZind1
      dj8AhcPVJS51PyCHG7m7k4i/gBlbDRdLWL8AIjzo1VpWvwAZ2sfwIFC/AEkXPBxlbD8AqZV8eCCA
      PwBcwLpqJzk/ANOmJ5WReT+AtwpOD+uGv4B0k8tRyIq/ADWnrrKsYr+A6aNa5D17P4BmHGI/Wn0/
      QOjAfmh+Ez+gKErwmKwkPwDeFRm2xPO+6KrqQzKCPr+gadtjRKQev8z6Qw6wVEU/AH1AGPpM9L5A
      kebiGX7ePqBHQmLslu8+AHy1rnkH9D4go4fIYsDlPjAJPyO+oOK+AOT0Jgmcb78AFQGinYCRvwCq
      KqUzZnc/MCO9HTX2pT8A+H3hLPlkPwAAxgccEt4+SCeXYunShD9wCABcJ5SHP7B8JVPiJoq/iNhP
      0Q4Gqr+AAUzcls2FP0gjDfswwq8/AGXwqvTpjb9AtqII4buIv8A7c/cKaJu/AOFdo9qGVz+YuhRC
      Hr++P+wG8w9Y6bI/aLO8vP2Vmb+AqHK69dpjP8DGTVG6YYk/fD+zOpx7oz+OI/GcACWnP9BVzwj7
      D5O/QChkLD8EqT9AFepqjc+wv+CA9c19nqy/wAfU8cVSqD+AU8+T62yYP0JZlHULQsK/MKlZ6yp3
      NT/Q54Kg4IFHPyC3IePgyC0/OOB7BF5dXb9GsqxOiKJZv4gzEfh/4l0/5CgqSBAfEb+YxHryljf5
      PqgjaYKLBQs/KNQ+RF8dDz9Ow9vZHeIFP1T034fHXgC/AOARSgmYW78AAEQEuv0hPwBgcZuR60i/
      APh94Sz5ZD/+IA2cMCFkPwAAL1NXa9g+wA8gZX0PY78AsQFKYnNUv4Dnf7pl62U/AOU8BsLTfj9A
      yiwGNCVyv8BFbDNEvYW/ALC/SIFPMb8AQbN2l590v4B1Zk2BYIO/gCxsozkHeb+AD9Fk3feUP9gb
      1r3ZHp8/AB1++T79br9AlTp+gX1hPwBRx7Qp428/gBa3NvXLcT8A3GqicNJIP8DnE+38sHK/AMTB
      b0p/bD8AgHUuJM1WvwAEkEqnZ2g/gJFv3aD4ij8AAqzIPbFkv0ByGyJEcKS/ADDE9HYJ774AfcCe
      c6v7vgAs45jF9BI/wCmKbdGeIz8AzSJm11orv6JVKU7imDe/wL5/Eo1U4T4Adv9GIerKvoDBj1rt
      S9q+wEN4N1p1474AH9UXz6DIvkB0FYDheM0+AIAPQPjp274AAGp5137APgAALCZKU86+AADGBxwS
      3j4AAC9TV2vYPjwVhRFnYlA/AOCzDsvw5b4A4HAKop7ZvgDMbiiSauk+AGjLDxKDAj8AuKWwwSP0
      vgCwrCbusQm/AAAgRHVKez4A4CD57tD0vgDALcAtYgO/AKDS6ICk+r4APFyNTaQTPwCdD53yYx8/
      AACxM3+M7L4AcL380h3iPgAg4JEyqe8+ANBwpYMv7z4AAAbWQ+KivgCgtrJFNfK+AAC0lPTP5T4A
      ALgfHwqavgBgdBl1ufE+APCtrGCKCj8AwBxtfgTqvgAOZHhzICS/AAA5Icyid74AgM75Q4mGvgDA
      sGSG1pI+ALDgQpK1qT4AHDKsjrCovgDo7lOzgbu+AOAHUD07ZT4A6N4lH19QvgCg8qEBMmC+AADP
      VGs5Z74A0Pcc1LZQvgBoPEhYW1I+EMAbf0c4Yz8gdhxHcPZ7v+D2y27C9W8/SCeXYunShD/ADyBl
      fQ9jvwDgsw7L8OW+vG2xiDzJhD+I+A8MfpB9P/jB9MycY4a/nrnM+menor99OvDRwt+MPy1JU/+g
      bKg/QBzcJ9xadL+8mrtiO+J7P+SXSOxsBYc/Klidn717jT+g2IzGb3REv8pCR0n82KS/UMC9ykMt
      T79bfDacHwlwv/z7CCiWyHC/pvMcbukUcz9E9i/NlMaPP6hJffE2l2o/3HgSE+r/hT9DFjitZmeW
      vyppb0Hau5y/+NcUsvYJiL8+LYv8zliOP663JFNZe6I/0qJbxx7DJD/gMPo4itc1P/xbaykRQRS/
      PMlvGa7AUL9ArNEXQS4gv1Jqwc1Aw1g/OuBwg4TfBr+LkWch7zzxPvHiqpI3wAE/gEoI7PLiBj/b
      j845WKn3PggrwISg1PS+wNsWkt87Uj+AN57Gv4B6v0D7VtMSgGo/cAgAXCeUhz8AsQFKYnNUvwDg
      cAqintm+iPgPDH6QfT8X16eyHw19P15I7mi2zoG/aHX3yNCjnr+sDJ6/wZqFP2nce852y6M/oDDA
      eN1NdL9gi/rJIaFpP4AENViL+HE/yGEDl+vagz+4vniQ+DmLP2JWzauN+JK/qAv+I2iFbL8odBH7
      ffdiv0B9+MWRRVW/BBfz//Nrfj9i0NvOZZqPPwCQTwpqjvk+UPMcZ0n8iT+eINiWyoGWv5AH4TpN
      jpm/AKgYx2M+Y7/YHf6KpaqJP2iKGTXVNH8/mhFefDalIj9QYlzhh9MzP8AcDyFRcfq+TizRkJLi
      TL+ifW/9Hg8xv0b3bxARzlM/YtnbmCINA7+6vC6GvJTsPqLwWsADrP0+vCLUQwS0Aj8QAeYhBKn0
      PkTFvkcQh/G+kCg9GQDkZb8QbqVGrBmBPxCFBxVANXO/sHwlU+Imir+A53+6ZetlPwDMbiiSauk+
      +MH0zJxjhr9eSO5ots6Bv6So04lG04w/fQgaAlplpj9AveRwTyWRv/rB6sXiRq2/GF/W11ITeT/I
      eNgIbK9/v8iqlSNg4Im/tlWZicdPkb+AEE4J2Olbv6lahetArKc/aFeG72qTWj8lmL7Q8JhyP5Yn
      FgJopXI/5AfsecCHeb87X0BWbJCTv6TWhnqBFGy/aLYKXNHRi7/kz8gavqCbP1CPWgs9bKE/yjy8
      4Uc1ij/U36NGhkiSv1yqild7L6S/XJRscdU1Kb8Pp5ooFY86v7CYNH9EiRY/t2i7FRo8VD+4aHPV
      niAnPzFXlIC1ol2/8+KsdT6CCz/pyZQxPLj0vuhMytOBWwW/eu6KUQd2C7+XjSfSSaD8vhArc6h0
      Ffk+YOc0HEFRfb+ANK8pUyCfPxBLW4N+YpC/iNhP0Q4Gqr8A5TwGwtN+PwBoyw8SgwI/nrnM+men
      or9odffI0KOev30IGgJaZaY/X6Ef/TQlwz+STEmSIeCrv/qhm09etMi/EF1xAiNolz8QD7HNKvaU
      v0A/1sA4IKC/9KbpJ9XUqr9oQxPdkKCjv4iO+evrM78/JPv0X8xRiD+gJYrxJj2LP8iumwwYsIU/
      hv8vQDRfnr/E6mPBQzyyv2DESOnlLna/iFbyfgJKrL+L9jf6ceG5P20fBGYcvr4/8NGalc7omj/w
      otT5DH2vvztXvhrh/LS/Bq/rrrZYRr9+b3oPQqpXv6jAtXRbdSo/9AbgANqVcT/iI37RAepPPy2E
      3Ufy2Xi/GylxEwyEJz/NoYO/LqwRvyTpnKqTSSK/nSkkI35DJ78YJPHm/QcZv84oloIbjBU/ILTh
      ldMncz/ASMM1R1mCv0CNZ5K8snc/gAFM3JbNhT9AyiwGNCVyvwC4pbDBI/S+fTrw0cLfjD+sDJ6/
      wZqFP0C95HBPJZG/kkxJkiHgq7+cfM7FVR2YP6h/2aN0cLI/IPKAwA5Ceb8ABuY0MxaMP3hxjL7i
      VZg/XG08gOgpmT+kVH2dHkqVv1CipWRxEbW/EL2+N7cqZD90oiHwvUN9vxif0XTZoIK/YEKfsgsz
      XT/G6/yaNciTP2TKUnrhtoE/MF2S2Md8hT+MnPlqbJKbv7TG5l+5D6S/yPtCsfCynL+sjY5OyCOW
      PwjcIrla67U/dFhj5cS7LD+QcauMiOw9P3T0KkJzVya/fM9VQO8MWL/g3Er6CR0HP8TCbr534mI/
      LQt2vxTmEL/7eWc7W5H5PrOdhRjGJwo/mST+RMIqET/LDM6b4ssAP93bUjUqhv6+0Az9p4UmhT8Q
      E1XgeKijv9C+nnepPpU/SCMN+zDCrz/ARWwzRL2FvwCwrCbusQm/LUlT/6BsqD9p3HvOdsujP/rB
      6sXiRq2/+qGbT160yL+of9mjdHCyP+Dy6V/tJtA/GEdGLshFnb8ILaIVNGueP0SFEaXBFag/GQB3
      MeEdsj+6NkWVpY6gP8VYpOVlrsa/lEV2s2GZiL9Maf3rmNuSv1Ss2Spsw5C/nAipC0xloT92gTY9
      ftG2PwBH3+HnP4U/ytXByHgfsT+7bS1cMinAvwp/xSaiqMO/8pleCfMypr+AcT3WyFW0P/noogyZ
      MsE/NsSfboOGTD/Yim37MSVePww/9hO7WjS/lsXTBsqgdr8nUc66u29Rv8wcKB3JOYA/mGf1J9J2
      Lr+K7ElLXeoWP0xL7KbErCc/UPjV5wZALj9t2iMPfBAgP1WgmRK72xu/AECQ7r8mRT8AmKpRa796
      PwCewehQtWS/AGXwqvTpjb8AsL9IgU8xvwAAIER1Sns+QBzcJ9xadL+gMMB43U10vxhf1tdSE3k/
      EF1xAiNolz8g8oDADkJ5vxhHRi7IRZ2/f70tj+Qyej8Ap+kgf3xhPwDqjNjHu3Y/gJiNPVOibL8g
      4z9iljCivwgCUr6IJIu/oCLMMbg3fz8AaFH3TCMePwBDkfIL/Wa/oIuhyy0sib8w4YXbdiGRvyBu
      52USznM/gMEWR0kzkb+wS1qcw72YPyAyEz3DHpc/QGiRhT/Dh7/gVSIbSvmEv8CurCtxvqE/QDuH
      XjwsIb8gZ088j50yv8AFj+3gvAq/fEtMaYOUSD+eCuLPuhVAP/zkC3XdTUy/4MOMSxkW/j6o/3Fk
      /FLmvkhrKWtHnfe+QJUgog48/L4sCK1U+QnyvlC1/JzKUuw+AHr2BWUneD8AID4uRcRQPwDIJapt
      iWA/QLaiCOG7iL8AQbN2l590vwDgIPnu0PS+vJq7Yjviez9gi/rJIaFpP8h42Ahsr3+/EA+xzSr2
      lL8ABuY0MxaMPwgtohU0a54/AKfpIH98YT8w6BwE0h+TPxBAhkW3L6E/MGq6Xt2KlD8Uqzf1G/mz
      vyiYl8GyVbu/8Iv4aYADjj9g4VK2Dr99vxB8xIjvhoy/hGO2HGUQkr/ghwsKUD96v3hcf+5NFZE/
      wPDszhAXkL+AnBh38giFP8C58L8Th3S/2G8S8ipgqL/AbZnTYrx5PxTuJgzldMI/QPcQTNyW9T6A
      MJ5K82j6PmikGfkL8TC/8CLayB9CNr/MhK/7SwVLP3Y+4sTV51A/IKvoBgW19r6QwQphp97hPtDy
      kfEsDPE+cHTxtjzD+j4QXjhBYo3ZPuA2/fCQruK+QGJ9SgPlhj8AiLEMzTRvPwByV7Jmymg/wDtz
      9wpom7+AdWZNgWCDvwDALcAtYgO/5JdI7GwFhz+ABDVYi/hxP8iqlSNg4Im/QD/WwDggoL94cYy+
      4lWYP0SFEaXBFag/AOqM2Me7dj8QQIZFty+hP1CRB+urr7A/5J8La2qfoj8SG2bVFvDDv2Q2fR3N
      98m/sPTVk1c+nj8QTi5uFqeLv+i5bGIHbJu/3K8C5c6qor98vgU0PjiRv6R/iSIrpKA/kNGRr+V/
      ob8gWFGrHc+aPwA+kTUupma/QNCf1dOUt78grZ6hA+CBPwLcpSOd2NE/AEDpUo3XjD6AWucXZcMC
      v5wzx69kRkC/GJSEtuwqO7/YTZDiC4ZbP2SjoTY0Y1s/HHqhEKLHAL/YsCxc6M3qPqi6x3to5fg+
      uO0BpzTUBD+AHAuJB5zaPmhH15Abkuq+4Om6syK6ez+A7m/dGHd5v0DSWYp3dXY/AOFdo9qGVz+A
      LGyjOQd5vwCg0uiApPq+Klidn717jT/IYQOX69qDP7ZVmYnHT5G/9KbpJ9XUqr9cbTyA6CmZPxkA
      dzHhHbI/gJiNPVOibL8warpe3YqUP+SfC2tqn6I/mMjUJj5Rnz+i2vLlOPGtvw4dZJXA6r6/TKQ7
      08FChD8oYnYvODiDvxQ98xiAuY2/PO05DzQJgb9wBHK9Sb2GP+jy2sTLD5A/ADhztZINRr/wJaYT
      yTCOv4hVYsMylaC/9CSh6nY2qL8wAUrLUEaUP7z95g6kZ8I/3D8V7E43Jz+oF4HE2Io3PwAUrMf/
      uzG/4CWZ+mc+Vb8Yd8Bbgcw/PwcXP+oa62I/lV9WXynKD7+Wm/5HCj34PjqELTcqdQg/N5Np00On
      ED/YKGP89un8PvrhrjbgNfy+mHOMtHBOmr8QRpX+NvqivwCFw9UlLnU/mLoUQh6/vj+AD9Fk3feU
      PwA8XI1NpBM/oNiMxm90RL+4vniQ+DmLP4AQTgnY6Vu/aEMT3ZCgo7+kVH2dHkqVv7o2RZWljqA/
      IOM/YpYwor8Uqzf1G/mzvxIbZtUW8MO/otry5Tjxrb+6aOByd5fePyMT7w2cR94/g4OJEpUruL/S
      cpoT4KmbPw1k+1WMM7E/2TtuYfySwD9OXBEx+f27Py/expPohLa/DypDRA2Rwj+k8HHnTrXEv642
      AWo7fbi/0N4IM060zj8g0Iinh9OcP76o1zpqK+e/+qC/RUo/Qz+pi06xRhNWPxgQZpRLV1Q/YHmK
      fESlZL93iF6J/gx3v4VpkXmUmj4/si3HDo+jEL/EAfdVkMD2Pt5mBZyFlws/GDe13CfeBD8u2flF
      ktcQP4A+ljZgOQK/WuRk/2o8or8Am4IobSd7vyCHG7m7k4i/7AbzD1jpsj/YG9a92R6fPwCdD53y
      Yx8/ykJHSfzYpL9iVs2rjfiSv6lahetArKc/iI756+szvz9QoqVkcRG1v8VYpOVlrsa/CAJSvogk
      i78omJfBslW7v2Q2fR3N98m/Dh1klcDqvr8jE+8NnEfePztnDpVMrOQ/GJXbnYnEtr8WR6cs+2ym
      P5CUD8+Hj7U/bE8r7TN2uz/owoKiy2OkP370Vxxn2bm/UzqLRMKQuD/0kEWvEUuwv7C2v72NV50/
      uiuE15hu0j9WR+0oHAqjv9Oi27NS6eu/6tN6y6koHr9E3FRIJ1Ahvzn7f42Hm1k/8NU2CLJaYD8Z
      p2vr2oN0vxjJyDdrP3m/gWrdt/jbID8L3ecAGo8Kv+TNhozqSxm/X6U1J/fuI78X1Jf1IqMCvw7Z
      IVfTrQs/oKm3NA23cz+Ad87EC66AP4AZWw0XS1i/aLO8vP2Vmb8AHX75Pv1uvwAAsTN/jOy+UMC9
      ykMtT7+oC/4jaIVsv2hXhu9qk1o/JPv0X8xRiD8Qvb43typkP5RFdrNhmYi/oCLMMbg3fz/wi/hp
      gAOOP7D01ZNXPp4/TKQ708FChD+Dg4kSlSu4vxiV252JxLa/1yf1nURKlD9k6wABDgl0v5TAGRz+
      RYq/EnzzA3rTmr/Wh54W+wuYvzIKx9Prc5E/aD9K2S23nr9iM+/wh7mhP9ySv5rax5Y/qZ1ym3Gf
      p7+wXhWaAPl9v9huOOrZ0ME/QPA49MCwIb/qa7r85A40v5L1OFODCy+/gJ7pS7pLRD/o0t2Bk4BS
      Pw+BNlaBszG/4q9xQTaP8j64Ar8HUiHavnYw9ym7NO6+TEM7B7pK676+AJM4GCDwvngiOSfiVeM+
      YDyv/urzY78ALV175b9KPwAiPOjVWla/gKhyuvXaYz9AlTp+gX1hPwBwvfzSHeI+W3w2nB8JcL8o
      dBH7ffdivyWYvtDwmHI/oCWK8SY9iz90oiHwvUN9v0xp/euY25K/AGhR90wjHj9g4VK2Dr99vxBO
      Lm4Wp4u/KGJ2Lzg4g7/ScpoT4KmbPxZHpyz7bKY/ZOsAAQ4JdL+PMfXJDBpxP2hQDtNUjXY/bIPx
      UfamdT/ALrSCyFE9v4he4b8z2Hm/gBFbOohSbT8AuY0DKd4qPzCePXH8w3o/9IWlMV3fkj/AgmTP
      gkVzv8P8V4qnoKy/+KRPYITyAb8oYh3Nwj0RvxgaLFdO1xo/WZwM9nAnMz/HBP08rkAxvzzd7O7L
      JES/fL8xWmBV7z7wnoM/2SLYvsi366Gb6+e+zs6XTe8R8b7Cr01ZAAbZvkBy3jlaKNs+oPEt9Wf5
      cr8Az9XvfRZivwAZ2sfwIFC/wMZNUbphiT8AUce0KeNvPwAg4JEyqe8+/PsIKJbIcL9AffjFkUVV
      v5YnFgJopXI/yK6bDBiwhT8Yn9F02aCCv1Ss2Spsw5C/AEOR8gv9Zr8QfMSI74aMv+i5bGIHbJu/
      FD3zGIC5jb8NZPtVjDOxP5CUD8+Hj7U/lMAZHP5Fir9oUA7TVI12PzBxttEjCIk/SLGuCN+CkD/K
      gp3ZiH2BP6jnQhAWMIy/qJnW8GkEkD/AnmVedtiKv4CB0v33Y1K/THI89kbdoz8gRNBbE9lkv6AR
      H/LrDb6/QKU1O1856z7QZFKfwoUGP9jnAWCiRCs/oMEWz0HKGD8Jpku9GhlIv34kdGIXj0O/6J7p
      SpVs5T6w8i0otXPRvhgvxGwtRd++GDGcCG1p7L6AmUu/lmetvnCgdxVwENA+0P/xF9yQd78Aw3CH
      kwmMvwBJFzwcZWw/fD+zOpx7oz+AFrc29ctxPwDQcKWDL+8+pvMcbukUcz8EF/P/82t+P+QH7HnA
      h3m/hv8vQDRfnr9gQp+yCzNdP5wIqQtMZaE/oIuhyy0sib+EY7YcZRCSv9yvAuXOqqK/PO05DzQJ
      gb/ZO25h/JLAP2xPK+0zdrs/EnzzA3rTmr9sg/FR9qZ1P0ixrgjfgpA/2919eUPQoz88hipnsm2j
      P/q1Q2Kswpa/xHa0fEAdpz9WfTbUb3Ssv7CSEx1Y6aS/PB3ekd9Arj/44AKEl7SPPyUquFnCyMa/
      7B7o397oLz+69AQyccdBPzj8jqKdeDM/Ti0m4RUUVL+cfKkvHylav1ebSHQCTU4/NWAoZKogBb9a
      mNkPEZTuPhB1DkaA4AA/wsctIdzBAT82Pm8QS9L+PjxzCNya6fS+gDDan9iiX79ApEIiKsCUvwCp
      lXx4IIA/jiPxnAAlpz8A3GqicNJIPwAABtZD4qK+RPYvzZTGjz9i0NvOZZqPPztfQFZskJO/xOpj
      wUM8sr/G6/yaNciTP3aBNj1+0bY/MOGF23Yhkb/ghwsKUD96v3y+BTQ+OJG/cARyvUm9hj9OXBEx
      +f27P+jCgqLLY6Q/1oeeFvsLmL/ALrSCyFE9v8qCndmIfYE/PIYqZ7Jtoz++6vLPTBGrP3DJon+0
      Uo6/QOxTi7eaqj/8BMjQYiyzv8eoQyGy9rG/AHR8V58koj+c/yh0UFKgP/64Bf3GFru/3u23m7St
      Oj+3/iKIbulMP0h8boOQVSQ/Lw+UnZsdY7+SKCWa9c1Yv1beBzm+E2Y/25sK0g9tF781tzHLp2IB
      P9q8oV1mYhI/Ik95300AFj9Ic/o32AsMP66Mg96DCwa/ADk+6peldj8ANQ2WUlxyPwBcwLpqJzk/
      0FXPCPsPk7/A5xPt/LByvwCgtrJFNfK+qEl98TaXaj8AkE8Kao75PqTWhnqBFGy/YMRI6eUudr9k
      ylJ64baBPwBH3+HnP4U/IG7nZRLOcz94XH/uTRWRP6R/iSIrpKA/6PLaxMsPkD8v3saT6IS2v370
      Vxxn2bm/MgrH0+tzkT+IXuG/M9h5v6jnQhAWMIy/+rVDYqzClr9wyaJ/tFKOvxzqDs+Tu5I/oLRC
      Rp6Pl78oLiU2bs+WPzAc2wwhYIA/yv1oEK+mqL8AaKOxvEocvzYnTQWOocI/ILjUe8A7DL9QlOhv
      NYohv0iLeBWDszC/wGZnmcXPHT+0XPtnMEVQP7JnV05GRDw/ANnr67hJy74AcEg/Tmq7PsB4CBSO
      9L8+QCOws+/x3z7cJRv+YS/RvoBSDdx1Fpu+AM0h5hiudL/Au5q1V/STvwDTpieVkXk/QChkLD8E
      qT8AxMFvSn9sPwAAtJT0z+U+3HgSE+r/hT9Q8xxnSfyJP2i2ClzR0Yu/iFbyfgJKrL8wXZLYx3yF
      P8rVwch4H7E/gMEWR0kzkb/A8OzOEBeQv5DRka/lf6G/ADhztZINRr8PKkNEDZHCP1M6i0TCkLg/
      aD9K2S23nr+AEVs6iFJtP6iZ1vBpBJA/xHa0fEAdpz9A7FOLt5qqP6C0Qkaej5e/0PruRrvIrT9A
      ASJWHFqzv/BxvoWmEbC/cAqnQ+lbrj8g6asDJ/GaP6x1EVWPzsa/QHfhfrIrOD/IRxlxbotKP6D1
      jAew0TI/5lVcAMtRYL83Kw+KdplevxnZi92M7V8/jnWCU2XAEr+kjp2QaY37PqhL1Iv7pA0/XI6p
      vuncED+La9fkvm4IPw5OXjkIBAK/gI2kmKeiaT/AntfPet+dP4C3Ck4P64a/QBXqao3PsL8AgHUu
      JM1WvwAAuB8fCpq+QxY4rWZnlr+eINiWyoGWv+TPyBq+oJs/i/Y3+nHhuT+MnPlqbJKbv7ttLVwy
      KcC/sEtanMO9mD+AnBh38giFPyBYUasdz5o/8CWmE8kwjr+k8HHnTrXEv/SQRa8RS7C/YjPv8Ie5
      oT8AuY0DKd4qP8CeZV522Iq/Vn021G90rL/8BMjQYiyzvyguJTZuz5Y/QAEiVhxas7/mGb8AXPW7
      P6igvsCQurk//NTfFHGIq79wEHzn0ECnv0kgAp/ukcQ/DpmgUUYfQ78vwh0F+71Uv7DqW9L4QC+/
      Inj9MBhLaz/2+YxwUTliP9GXz723NG+/6siCHNCnID+MuO6YwrQIvznD3LpTJxq/P/nfN/szH79e
      u5MdiwwUv8+PX85BYw8/gOy4jLcoYL/A22fxTk2dP4B0k8tRyIq/4ID1zX2erL8ABJBKp2doPwBg
      dBl1ufE+KmlvQdq7nL+QB+E6TY6Zv1CPWgs9bKE/bR8EZhy+vj+0xuZfuQ+kvwp/xSaiqMO/IDIT
      PcMelz/AufC/E4d0vwA+kTUupma/iFViwzKVoL+uNgFqO324v7C2v72NV50/3JK/mtrHlj8wnj1x
      /MN6P4CB0v33Y1K/sJITHVjppL/HqEMhsvaxvzAc2wwhYIA/8HG+haYRsL+ooL7AkLq5PySKLfWp
      Zbs/gJ8T169xir/I3mlCe1Kqv9Du0Cm35qI/gjNA7MvtQ79q6h7dz1ZVvwDV6fp8uvC+TkLpjaUH
      bj8Wb4NcIRhZP55UOby9dnO//jq4DrNRIz/rnkcxleEMv15u1jeMKh6//NkeFNuxIr+Ke6iEgKsV
      v290V2t56BE/gEgTebAvkL8AiN4fjpeEvwA1p66yrGK/wAfU8cVSqD+AkW/doPiKPwDwraxgigo/
      +NcUsvYJiL8AqBjHYz5jv8o8vOFHNYo/8NGalc7omj/I+0Kx8LKcv/KZXgnzMqa/QGiRhT/Dh7/Y
      bxLyKmCov0DQn9XTlLe/9CSh6nY2qL/Q3ggzTrTOP7orhNeYbtI/qZ1ym3Gfp7/0haUxXd+SP0xy
      PPZG3aM/PB3ekd9Arj8AdHxXnySiP8r9aBCvpqi/cAqnQ+lbrj/81N8UcYirv4CfE9evcYq/cJtm
      +xdlwT8Akvu/ef1xv1pIOyvaHNq/YHAuGOVUGT9AYTke5/wwP07clWu6jUc/gBFNOAtV7D4KnWZ3
      lNhlvwhGwfv8FVu/OByymOjC9z4YL3Tpjz3kvoyp4RhZq/C+4NYBYDgeAr/ApjozZeTQPlCo+j2+
      9t4+AF32uQhXYj8ADprHvleLv4Dpo1rkPXs/gFPPk+tsmD8AAqzIPbFkvwDAHG1+BOq+Pi2L/M5Y
      jj/YHf6KpaqJP9Tfo0aGSJK/8KLU+Qx9r7+sjY5OyCOWP4BxPdbIVbQ/4FUiG0r5hL/AbZnTYrx5
      PyCtnqED4IE/MAFKy1BGlD8g0Iinh9OcP1ZH7SgcCqO/sF4VmgD5fb/AgmTPgkVzvyBE0FsT2WS/
      +OAChJe0jz+c/yh0UFKgPwBoo7G8Shy/IOmrAyfxmj9wEHzn0ECnv8jeaUJ7Uqq/AJL7v3n9cb94
      ubFudWybP9C6nbA1X40/Wijr7Zw1Mz/4NOhcjm5EPyCFH3TG+Qm/gk8Vfde5Xb8IiFOg0ddBv81E
      bbVoVmQ/1qkvJT+WE7/Uv9S8amH9Pmq3MVpVgg4/pgwV+Og3Ez9gCFeX5UQFP4aP1quMBgK/fKiU
      vNCDqD9AOAsjSZCeP4BmHGI/Wn0/QlmUdQtCwr9AchsiRHCkvwAOZHhzICS/rrckU1l7oj9oihk1
      1TR/P1yqild7L6S/O1e+GuH8tL8I3CK5Wuu1P/noogyZMsE/wK6sK3G+oT8U7iYM5XTCPwLcpSOd
      2NE/vP3mDqRnwj++qNc6aivnv9Oi27NS6eu/2G446tnQwT/D/FeKp6Csv6ARH/LrDb6/JSq4WcLI
      xr/+uAX9xha7vzYnTQWOocI/rHURVY/Oxr9JIAKf7pHEP9Du0Cm35qI/Wkg7K9oc2r/Qup2wNV+N
      P8zkvlYFw/M/PiCVt49aMr8p1sT+M9ZIvwRwm7mi0WG/CHEoBnNSHr9/bfeFLHeAPzDrkbMp5HQ/
      vNGHMlfEEr+o4Jkcyc7/PniZ8QPAdAo/qDoRMCouHD/gHzXrpQbmvvYa8F3D4/i+ANXhGv8I4j4w
      VxbVSKklv0DowH5ofhM/MKlZ6yp3NT8AMMT0dgnvvgAAOSHMone+0qJbxx7DJD+aEV58NqUiP1yU
      bHHVNSm/Bq/rrrZYRr90WGPlxLssPzbEn26Dhkw/QDuHXjwsIb9A9xBM3Jb1PgBA6VKN14w+3D8V
      7E43Jz/6oL9FSj9DP+rTesupKB6/QPA49MCwIb/4pE9ghPIBv0ClNTtfOes+7B7o397oLz/e7beb
      tK06PyC41HvAOwy/QHfhfrIrOD8OmaBRRh9Dv4IzQOzL7UO/YHAuGOVUGT9aKOvtnDUzPz4glbeP
      WjK/eAsWBPRwUD8erJqroGjfPuDxce+5kIw+thEzduj39b71Rr49YE7jvr2pOGT1L/w+RIrjO+oj
      rL6IH6bhUAWVPoKeBJny+qU++wrvW7ooqz5wFRXNKMGfPgyOl1/THpq+AF6QOo1t6T6gGD635Vw3
      v6AoSvCYrCQ/0OeCoOCBRz8AfcCec6v7vgCAzvlDiYa+4DD6OIrXNT9QYlzhh9MzPw+nmigVjzq/
      fm96D0KqV7+QcauMiOw9P9iKbfsxJV4/IGdPPI+dMr+AMJ5K82j6PoBa5xdlwwK/qBeBxNiKNz+p
      i06xRhNWP0TcVEgnUCG/6mu6/OQONL8oYh3Nwj0Rv9BkUp/ChQY/uvQEMnHHQT+3/iKIbulMP1CU
      6G81iiG/yEcZcW6LSj8vwh0F+71Uv2rqHt3PVlW/QGE5Huf8MD/4NOhcjm5EPynWxP4z1ki/Hqya
      q6Bo3z61gC5gu6VQP6AYKDJsuag+Pgl1EKptB7/K823PJbH1vjAmDdMfuQ0/aYZV70rdvb7XRgGW
      AkumPi5ktMjAVrc+PqETM0a9vD5eUt8MB/awPj2VMQIew6u+QKA0jliKFr8ApTEQ9sYEvwDeFRm2
      xPO+ILch4+DILT8ALOOYxfQSPwDAsGSG1pI+/FtrKRFBFL/AHA8hUXH6vrCYNH9EiRY/qMC1dFt1
      Kj909CpCc1cmvww/9hO7WjS/wAWP7eC8Cr9opBn5C/Ewv5wzx69kRkC/ABSsx/+7Mb8YEGaUS1dU
      Pzn7f42Hm1k/kvU4U4MLL78YGixXTtcaP9jnAWCiRCs/OPyOop14Mz9IfG6DkFUkP0iLeBWDszC/
      oPWMB7DRMj+w6lvS+EAvvwDV6fp8uvC+TtyVa7qNRz8ghR90xvkJvwRwm7mi0WG/4PFx77mQjD6g
      GCgybLmoPhsxjv56clA/gJWs/F4ewD55b2/4LXPsvrc1jOPXque+PFHzYq1Uij5MpvONVWN1vnjE
      Vh8ZQ4O+qHL3D/9Lkb7Q+Vzs/INVvpTcR1Bm53M+2D2hFSAyIL/Y1mAQlK1PP+iq6kMygj6/OOB7
      BF5dXb/AKYpt0Z4jPwCw4EKStak+PMlvGa7AUL9OLNGQkuJMv7douxUaPFQ/9AbgANqVcT98z1VA
      7wxYv5bF0wbKoHa/fEtMaYOUSD/wItrIH0I2vxiUhLbsKju/4CWZ+mc+Vb9geYp8RKVkv/DVNgiy
      WmA/gJ7pS7pLRD9ZnAz2cCczP6DBFs9Byhg/Ti0m4RUUVL8vD5Sdmx1jv8BmZ5nFzx0/5lVcAMtR
      YL8ieP0wGEtrP05C6Y2lB24/gBFNOAtV7D6CTxV917ldvwhxKAZzUh6/thEzduj39b4+CXUQqm0H
      v4CVrPxeHsA+OqaBrpN8Uj/EIs0KcEcHPx+Vyppxiya/7YZKqof21T64qKsNd3PAvvIvLrsMH9G+
      P6owFJhv1b4oPQZGsibIvmXA85fARMQ+mCkaEkOyMT8gn7qH/4xBP6Bp22NEpB6/RrKsToiiWb8A
      zSJm11orvwAcMqyOsKi+QKzRF0EuIL+ifW/9Hg8xv7hoc9WeICc/4iN+0QHqTz/g3Er6CR0HPydR
      zrq7b1G/ngriz7oVQD/MhK/7SwVLP9hNkOILhls/GHfAW4HMPz93iF6J/gx3vxmna+vag3S/6NLd
      gZOAUj/HBP08rkAxvwmmS70aGUi/nHypLx8pWr+SKCWa9c1Yv7Rc+2cwRVA/NysPinaZXr/2+Yxw
      UTliPxZvg1whGFk/Cp1md5TYZb8IiFOg0ddBv39t94Usd4A/9Ua+PWBO477K823PJbH1vnlvb/gt
      c+y+xCLNCnBHBz8NSLKPoYBRP8h99M9tcvy+rPBIjqMMtz6FXyErqX2gvk6ugyI6jrK+7WetS+Fc
      sr4zKbZMhyayvpJAKp5LUKc+jG7bIUZmNz/hGnXtKDZTv8z6Qw6wVEU/iDMR+H/iXT+iVSlO4pg3
      vwDo7lOzgbu+UmrBzUDDWD9G928QEc5TPzFXlIC1ol2/LYTdR/LZeL/Ewm6+d+JiP8wcKB3JOYA/
      /OQLdd1NTL92PuLE1edQP2SjoTY0Y1s/Bxc/6hrrYj+FaZF5lJo+PxjJyDdrP3m/D4E2VoGzMb88
      3ezuyyREv34kdGIXj0O/V5tIdAJNTj9W3gc5vhNmP7JnV05GRDw/GdmL3YztXz/Rl8+9tzRvv55U
      Oby9dnO/CEbB+/wVW7/NRG21aFZkPzDrkbMp5HQ/vak4ZPUv/D4wJg3TH7kNP7c1jOPXque+H5XK
      mnGLJr/IffTPbXL8vlZ4L3ZXfFQ/jo0xHXSP3r6M2EavWALHPlSfTqvFu9c+100Sfpx13j4VgY9A
      we3PPsXURT7d48u+oJdsMIUA4L6QPbpW3c4DPwB9QBj6TPS+5CgqSBAfEb/Avn8SjVThPgDgB1A9
      O2U+OuBwg4TfBr9i2duYIg0Dv/PirHU+ggs/GylxEwyEJz8tC3a/FOYQv5hn9SfSdi6/4MOMSxkW
      /j4gq+gGBbX2vhx6oRCixwC/lV9WXynKD7+yLccOj6MQv4Fq3bf42yA/4q9xQTaP8j58vzFaYFXv
      Puie6UqVbOU+NWAoZKogBb/bmwrSD20XvwDZ6+u4Scu+jnWCU2XAEr/qyIIc0KcgP/46uA6zUSM/
      OByymOjC9z7WqS8lP5YTv7zRhzJXxBK/RIrjO+ojrL5phlXvSt29vjxR82KtVIo+7YZKqof21T6s
      8EiOowy3Po6NMR10j96+qJApITdjUD8WYgqrPOV1vo/ZDrb/sYa+Vp71P6q8jL6d8bBK5Vd/vgtS
      bDssx3o+INjhqrAdyT7wACD/a33tvkCR5uIZft4+mMR68pY3+T4Adv9GIerKvgDo3iUfX1C+i5Fn
      Ie888T66vC6GvJTsPunJlDE8uPS+zaGDvy6sEb/7eWc7W5H5PorsSUtd6hY/qP9xZPxS5r6QwQph
      p97hPtiwLFzozeo+lpv+Rwo9+D7EAfdVkMD2Pgvd5wAajwq/uAK/B1Ih2r7wnoM/2SLYvrDyLSi1
      c9G+WpjZDxGU7j41tzHLp2IBPwBwSD9Oars+pI6dkGmN+z6MuO6YwrQIv+ueRzGV4Qy/GC906Y89
      5L7Uv9S8amH9PqjgmRzJzv8+iB+m4VAFlT7XRgGWAkumPkym841VY3W+uKirDXdzwL6FXyErqX2g
      vozYRq9YAsc+FmIKqzzldb5F82G2bmJQPzKeJvQPCXE+fHM5CpOadT4SzjjbB3VnPvn7atY2F2S+
      YILfXqEU2D7g5S2nugX/vqBHQmLslu8+qCNpgosFCz+AwY9a7UvavgCg8qEBMmC+8eKqkjfAAT+i
      8FrAA6z9PuhMytOBWwW/JOmcqpNJIr+znYUYxicKP0xL7KbErCc/SGspa0ed977Q8pHxLAzxPqi6
      x3to5fg+OoQtNyp1CD/eZgWchZcLP+TNhozqSxm/djD3Kbs07r7It+uhm+vnvhgvxGwtRd++EHUO
      RoDgAD/avKFdZmISP8B4CBSO9L8+qEvUi/ukDT85w9y6Uycav15u1jeMKh6/jKnhGFmr8L5qtzFa
      VYIOP3iZ8QPAdAo/gp4EmfL6pT4uZLTIwFa3PnjEVh8ZQ4O+8i8uuwwf0b5OroMiOo6yvlSfTqvF
      u9c+j9kOtv+xhr4ynib0DwlxPqRowCTbYlA/YGFSrJNXhj4QLo/873J4PhI2ybqJ2XS+wHQPmTOs
      4j7w4RRXc9cCvwB8ta55B/Q+KNQ+RF8dDz/AQ3g3WnXjvgAAz1RrOWe+gEoI7PLiBj+8ItRDBLQC
      P3ruilEHdgu/nSkkI35DJ7+ZJP5EwioRP1D41ecGQC4/QJUgog48/L5wdPG2PMP6PrjtAac01AQ/
      N5Np00OnED8YN7XcJ94EP1+lNSf37iO/TEM7B7pK677OzpdN7xHxvhgxnAhtaey+wsctIdzBAT8i
      T3nfTQAWP0AjsLPv8d8+XI6pvuncED8/+d83+zMfv/zZHhTbsSK/4NYBYDgeAr+mDBX46DcTP6g6
      ETAqLhw/+wrvW7ooqz4+oRMzRr28Pqhy9w//S5G+P6owFJhv1b7tZ61L4VyyvtdNEn6cdd4+Vp71
      P6q8jL58czkKk5p1PmBhUqyTV4Y+Rjs9kjFjUD8m7khe4nt+PlERTS7UT3q+ADxgqxEAwz740h5J
      RhX3viCjh8hiwOU+TsPb2R3iBT8AH9UXz6DIvgDQ9xzUtlC+24/OOVip9z4QAeYhBKn0PpeNJ9JJ
      oPy+GCTx5v0HGb/LDM6b4ssAP23aIw98ECA/LAitVPkJ8r4QXjhBYo3ZPoAcC4kHnNo+2Chj/Pbp
      /D4u2flFktcQPxfUl/UiowK/vgCTOBgg8L7Cr01ZAAbZvoCZS7+WZ62+Nj5vEEvS/j5Ic/o32AsM
      P9wlG/5hL9G+i2vX5L5uCD9eu5MdiwwUv4p7qISAqxW/wKY6M2Xk0D5gCFeX5UQFP+AfNeulBua+
      cBUVzSjBnz5eUt8MB/awPtD5XOz8g1W+KD0GRrImyL4zKbZMhyayvhWBj0DB7c8+nfGwSuVXf74S
      zjjbB3VnPhAuj/zvcng+Ju5IXuJ7fj7+OgpTk2JQPyk9Yjlq+my+AOplKRiEyr7AhbOixYXyPjAJ
      PyO+oOK+VPTfh8deAL9AdBWA4XjNPgBoPEhYW1I+CCvAhKDU9L5Exb5HEIfxvhArc6h0Ffk+ziiW
      ghuMFT/d21I1Kob+vlWgmRK72xu/ULX8nMpS7D7gNv3wkK7ivmhH15Abkuq++uGuNuA1/L6APpY2
      YDkCvw7ZIVfTrQs/eCI5J+JV4z5Act45WijbPnCgdxVwENA+PHMI3Jrp9L6ujIPegwsGv4BSDdx1
      Fpu+Dk5eOQgEAr/Pj1/OQWMPP290V2t56BE/UKj6Pb723j6Gj9arjAYCv/Ya8F3D4/i+DI6XX9Me
      mr49lTECHsOrvpTcR1Bm53M+ZcDzl8BExD6SQCqeS1CnPsXURT7d48u+C1JsOyzHej75+2rWNhdk
      vhI2ybqJ2XS+URFNLtRPer4pPWI5avpsvro45BJ/YlA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      R6RiGVjf47+bSzKpnTb9v1rydIXWj/W/x3qIa+E99r+Y+9vEyeP5P6w4QuXJdtG/5m07FHWQrD9z
      W/GLQtPHP1HVs/xif6s//ucBi3WQ179qy4GbGSPNv5Yk0NxaftI/S+mVlYzi6D8Np9cJyY3kv+ze
      eEQj2+q/nroFiO3C0r/51c9iP5nXPwWsFy7ofLw/WV75Yy3AxT8dqqGd3dPAv06u/UReUcy/Z01X
      7cLHxr+rQltN/Mi+PwQ74qg75dI/DZdJLgjG7b8Q0D9W3dXbP5CO1mGh/OQ/akaQ071c4j8UwVGx
      iN/fP+aAQLbLp9Q/p266jI53Xb/CypToDrFxP2Ud7uutgGs/ljX5YNSWZ7+JAYKO3ullv2Bj+pMv
      Yko/VLQ14b+1NL+V4KJndA8gPx5ktPIJdS8/0V0htKsjNz9XrXxTvAgeP321beCEqiG/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
