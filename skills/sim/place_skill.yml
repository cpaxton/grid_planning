action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D8aHjCIkrfKvw1FipURVHi/oTZzE/xseT+6e+QnbcbKP3PpPDqG7dI/gS2dAyN607+l
    9eKP1dTkP6AAryL+8+M/odyQZtx31D/15KHqFHHTP/vkDBB6i/A/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D8aHjCIkrfKvw1FipURVHi/oTZzE/xseT+6e+QnbcbKP3PpPDqG7dI/gS2dAyN607+l
    9eKP1dTkP6AAryL+8+M/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      jaq49ioD8D/YXIwl/VrtP7XrGUmDDM4/f8Vo/vZWxj+rlbiqkmntv+uRLKOgY4m/MgIF56I94D99
      AyxEaXHDPwX3O0KafdM/2FyMJf1a7T+aqrj2KgPwP0VYrLxa38I/rHj+wl+Y1z85oG77EAPwv63Z
      zyRX3cQ/4sPnj2s/2D/ugPjp67GzP0CbDOb+ssA/tesZSYMMzj9FWKy8Wt/CP4uquPYqA/A/rIjL
      HYhX0L9iY+5VMk7Dv5ILAZvNXq8/xSxeXMJLrj8VFGZcPoDOvyMeQme0tME/f8Vo/vZWxj+seP7C
      X5jXP6yIyx2IV9C/g6q49ioD8D/HbugcKT3Xv5p2OCfmxsW/FI2M4NBK1D90aL1SVzPYP8IMWZ5d
      pLA/q5W4qpJp7b85oG77EAPwv2Jj7lUyTsO/x27oHCk917+Sqrj2KgPwPw7PH7I/98S/y6L3QtQ2
      2L+67zifFC+zv9P/6GM0ysC/65Eso6Bjib+t2c8kV93EP5ILAZvNXq8/mnY4J+bGxb8Ozx+yP/fE
      v4SquPYqA/A/ydjIfmq/6L9J8f8NJBrpv9UljFBfnOa/MgIF56I94D/iw+ePaz/YP8UsXlzCS64/
      FI2M4NBK1D/LovdC1DbYv8nYyH5qv+i/kKq49ioD8D9X24TxJpblPx0ktvbSXus/fQMsRGlxwz/u
      gPjp67GzPxUUZlw+gM6/dGi9Ulcz2D+67zifFC+zv0nx/w0kGum/V9uE8SaW5T+Tqrj2KgPwPwpS
      ISd/5tM/Bfc7Qpp90z9Amwzm/rLAPyMeQme0tME/wgxZnl2ksD/T/+hjNMrAv9UljFBfnOa/HSS2
      9tJe6z8KUiEnf+bTP46quPYqA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      IoYrXt5CubwHIoYrXt7SvPMWigX+EuC8ElXPbOsr1zztT5o2WgTxPFgXU+IcUQw9b6FY4C8Bwbza
      aBGM8g0Rvdiy5NJ9Hhs9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    qk7eW1ly0j9lIrG79bauP60ZhELHs3c/QQmtdhyZgD/u9HbU9KSuP9ST5wJSAaU//gFbCuk8sT+t
    9NDUUZaWP4QquxDa85k/k14cT0EXmT9SiKEfuLGUP7yeOifPO7M/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    qk7eW1ly0j9lIrG79bauP60ZhELHs3c/QQmtdhyZgD/u9HbU9KSuP9ST5wJSAaU//gFbCuk8sT+t
    9NDUUZaWP4QquxDa85k/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADWWuDOKRfDvwDAUrWz/lC/QKAYiasufT8C86Bq9B/DP2+9Ud5sjtA/4pE+e5cVzb/h
    rN4CtEnlPz3Qna1tw+Q/GIQDWNlH1D9Y0BfCaUPUP8nfsIomxvA/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADWWuDOKRfDvwDAUrWz/lC/QKAYiasufT8C86Bq9B/DP2+9Ud5sjtA/4pE+e5cVzb/h
    rN4CtEnlPz3Qna1tw+Q/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P+cbwMAAAAAQAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAwAAA
      AAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAQJxvAwAAAABAAAAA
      AAAAAMAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAA
      AAAAwAAAAAAAAADAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAA
      AABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAADAAAAAAAAAAECcbwMAAAAAQAAAAAAAAADAAAAAAAAA
      AEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAAAAAAQAAAAAAAAABAAAAAAAAAAMAAAAAAAAAA
      wJxvAwAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAADA
      AAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8A
      AAAAAAAAwAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAECcbwMAAAAAQAAA
      AAAAAABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAA
      AAAAAEAAAAAAAAAAQJxvAwAAAABA
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALC8AAAAAAAAkLwA
      AAAAAAAAAAAAAAAAAAAA
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAADOeRYfY1PwAAc39C2gw/wJq/5pnddT8AbuBYrFBDP8mdRI82NLE/DKimVUI5uz8A
    36U752KbP4BSBevuvqI/gLqkMF8ykj+AopmM6N6ZPwAA44htu/8+
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAADOeRYfY1PwAAc39C2gw/wJq/5pnddT8AbuBYrFBDP8mdRI82NLE/DKimVUI5uz8A
    36U752KbP4BSBevuvqI/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      jaq49ioD8D/YXIwl/VrtP7XrGUmDDM4/f8Vo/vZWxj+rlbiqkmntv+uRLKOgY4m/MgIF56I94D99
      AyxEaXHDPwX3O0KafdM/aayeYBJZmj9fbdHqf6rFPy0LpA9gVcG/2FyMJf1a7T+aqrj2KgPwP0VY
      rLxa38I/rHj+wl+Y1z85oG77EAPwv63ZzyRX3cQ/4sPnj2s/2D/ugPjp67GzP0CbDOb+ssA/MyUZ
      T+zcyD8riX7yQmfAP/X3doC8yIG/tesZSYMMzj9FWKy8Wt/CP4uquPYqA/A/rIjLHYhX0L9iY+5V
      Mk7Dv5ILAZvNXq8/xSxeXMJLrj8VFGZcPoDOvyMeQme0tME/VIoC+KPPnj/uJsg9mU+Rv0cah2L6
      May/f8Vo/vZWxj+seP7CX5jXP6yIyx2IV9C/g6q49ioD8D/HbugcKT3Xv5p2OCfmxsW/FI2M4NBK
      1D90aL1SVzPYP8IMWZ5dpLA/Asj1QoWSvj8CtGdoVf2zPwDoutDX7aK/q5W4qpJp7b85oG77EAPw
      v2Jj7lUyTsO/x27oHCk917+Sqrj2KgPwPw7PH7I/98S/y6L3QtQ22L+67zifFC+zv9P/6GM0ysC/
      LEH3ewPEyL/sY5QA8F3Av9AUBt3iUoI/65Eso6Bjib+t2c8kV93EP5ILAZvNXq8/mnY4J+bGxb8O
      zx+yP/fEv4SquPYqA/A/ydjIfmq/6L9J8f8NJBrpv9UljFBfnOa/7ce8MJRd2T8wsbk1ixzSv1Oj
      R+13x9g/MgIF56I94D/iw+ePaz/YP8UsXlzCS64/FI2M4NBK1D/LovdC1DbYv8nYyH5qv+i/kKq4
      9ioD8D9X24TxJpblPx0ktvbSXus/eFep1WAt0r9vlo36S9fWP7zQARmnttm/fQMsRGlxwz/ugPjp
      67GzPxUUZlw+gM6/dGi9Ulcz2D+67zifFC+zv0nx/w0kGum/V9uE8SaW5T+Tqrj2KgPwPwpSISd/
      5tM/U2cBrr3tzL/g7fIvqTDQP5iwUaTXytC/Bfc7Qpp90z9Amwzm/rLAPyMeQme0tME/wgxZnl2k
      sD/T/+hjNMrAv9UljFBfnOa/HSS29tJe6z8KUiEnf+bTP46quPYqA/A/k4guwaOu1b/fbb6beY/S
      P3ZoHgI0rti/aayeYBJZmj8zJRlP7NzIP1SKAvijz54/Asj1QoWSvj8sQfd7A8TIv+3HvDCUXdk/
      eFep1WAt0r9TZwGuve3Mv5OILsGjrtW/l6q49ioD8D9rXPXoQ7vgP/5Hg7QUO+0/X23R6n+qxT8r
      iX7yQmfAP+4myD2ZT5G/ArRnaFX9sz/sY5QA8F3AvzCxuTWLHNK/b5aN+kvX1j/g7fIvqTDQP99t
      vpt5j9I/a1z16EO74D+Zqrj2KgPwPw4jafwroOA/LQukD2BVwb/193aAvMiBv0cah2L6May/AOi6
      0Nftor/QFAbd4lKCP1OjR+13x9g/vNABGae22b+YsFGk18rQv3ZoHgI0rti//keDtBQ77T8OI2n8
      K6DgP4+quPYqA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      IoYrXt5CubwHIoYrXt7SvPMWigX+EuC8ElXPbOsr1zztT5o2WgTxPFgXU+IcUQw9b6FY4C8Bwbza
      aBGM8g0Rvdiy5NJ9Hhs9CH0ciBiu6DxBjU3kCaEJPTU2kSeEPgw9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: [link]
name: place
num_gripper_vars: 3
objs: [time, node, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      blXfPzHM/j9iTIuPPEPkv9f4b8+6IwXA2rGOMTuU+j8qxZ/foP3vv9fuEdsQir0/9S8C4TLT/D/v
      vUu/Yhbcv8mKZuBvv9o//2xgEaIc9r9VAWa1Z9cCQBy4ncUHiv2/x8NmcF5s8z9/QDuVO4/FP5LY
      ltboZr+/bSbOtewt4L9KtRdt6ALJP3RIF9yNuoo/JsD3gm+ao79S2I1tlRDRv8YOVnaUdMO/jrLd
      Y1T8AkBfINWeknEGwAtzgueG8fY/sBwStpE6zr85sej5nTG3v9F0LJf2Fdg/I/HRPNjNoD9ZUioq
      CObwv6d/p0nOhPU/9rf3Psi24b9oCX9ohCXjP55LY1OG7fU/t3jLg5vQ/L8eGQ+Iwn3/vwOekwEP
      agxAeL/qFOFoBMCc1Mu/uRfkv09q261YCOg/sPCU1Wq0/7/YzcexGRQIQHhEhB39VwnAj2Hx4AsO
      BUB8Sb+BV+Luv5rkqHqFx/O/NxS86phq+j/wXeT+XrgCQGN68fJwrRDAlBB6qOe+CkA=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +P//////7z8=
