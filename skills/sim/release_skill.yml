action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D9S0uHpKFXDv0LxgC6QNsk+JKgAtkJLYT+XfZz5O1vDP6WB3v7iSM4/wPBPXg9qy7+2
    gBHSwZ7lP6LlFPp3J+U/Pk+zuizN079oyETiF4/Tv4XRA2+aw5c/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D9S0uHpKFXDv0LxgC6QNsk+JKgAtkJLYT+XfZz5O1vDP6WB3v7iSM4/wPBPXg9qy7+2
    gBHSwZ7lP6LlFPp3J+U/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      ht/TR14F8D+2bHa63ZjUvyJk8Pd+cuU/oHYWBZWz4782zL2hpHbTP08XMEAuYtm/6K7cha9qkL9H
      vCzodN+pP0psjvou29M/tmx2ut2Y1L+M39NHXgXwP1IMWsOuis8/AmfveRQO4D/h+35JKejvv94L
      HIE7A8g/dGZQo4q8tL8bGLU/MI3Yv8NZpekoaqI/ImTw935y5T9SDFrDrorPP4vf00deBfA/SGLM
      bh5i2L8Sc5Ca3FjQv6GjyhmznNi/ONiwJwZCnL8RrH7x/0TMv6KjDqLI298/oHYWBZWz478CZ+95
      FA7gP0hizG4eYti/h9/TR14F8D91ZtoBPd/dvwUYqLZq2+Q/ZsRW8IYtv7+tMUlVup7Xvw56Hz64
      idu/Nsy9oaR20z/h+35JKejvvxJzkJrcWNC/dWbaAT3f3b+O39NHXgXwP1x1SBjWEsi/Xiy4RXd+
      uj+Gig22VUHYP9RbPTFlZJO/TxcwQC5i2b/eCxyBOwPIP6GjyhmznNi/BRiotmrb5D9cdUgY1hLI
      v43f00deBfA/Xmtmf6BP6b+sfFIFL/Xnv3JZ0vn5je2/6K7cha9qkL90ZlCjiry0vzjYsCcGQpy/
      ZsRW8IYtv79eLLhFd366P15rZn+gT+m/h9/TR14F8D+aBICap/vrPyq4HqRHnug/R7ws6HTfqT8b
      GLU/MI3YvxGsfvH/RMy/rTFJVbqe17+Gig22VUHYP6x8UgUv9ee/mgSAmqf76z+G39NHXgXwP6dJ
      od2rkOE/SmyO+i7b0z/DWaXpKGqiP6KjDqLI298/DnofPriJ27/UWz0xZWSTv3JZ0vn5je2/Krge
      pEee6D+nSaHdq5DhP4vf00deBfA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      rgKCIdkiwLzGlK/DEk78PPv7vE26y4i83ibdZUx5vLx+3ibdZegjPUs4qr/P2ww90Nuku4yp/jz3
      uAoIhmQoPdageNrjats8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    zEQuIx9n0j/IlVrMCPtdP4LoGWX86nA//cgKLoIAeD9unsT40yxdP2eqLvTunqU/pYpyx6b0qD8N
    MvJCmMCQPwR1ej5tj48/1Ss6o//Y6T8NcEjBO/PpPyCDxMNxhPE/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    zEQuIx9n0j/IlVrMCPtdP4LoGWX86nA//cgKLoIAeD9unsT40yxdP2eqLvTunqU/pYpyx6b0qD8N
    MvJCmMCQPwR1ej5tj48/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADrtIzajm3Dv1XkUXHvKG4/1ULH5ovCYr/HmW7yUHLDP/s3nSxaU8s/IRWrqqRdy79Y
    vsX4NpvlP8P7eh/6auU/VbmwHK+AoL9V02nwOYOgv3XrACXRG6G/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADrtIzajm3Dv1XkUXHvKG4/1ULH5ovCYr/HmW7yUHLDP/s3nSxaU8s/IRWrqqRdy79Y
    vsX4NpvlP8P7eh/6auU/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P863wYAAAD4P+G3U4B/lfc/lp4VRzDX5j8LtAO5zv73v6in
      I36g/tC/gB01xTyYtT/VUBK4PUfmv0C7X2UkxeU/AAAAAAAA+P/ht1OAf5X3PzjfBgAAAPg/AVFl
      zHo83T+kHufZ4n33v7lKGqanG+G/1d8H8vIS1z//X63tJwXcvz2NetTKUu0/AAAAAAAA+P+WnhVH
      MNfmPwFRZcx6PN0/N98GAAAA+D+tDZuU+qrnv/zDwLXrwPI/Byk3zNxu9L8PCtZ6df/3v78WSaMx
      ROu/AAAAAAAA+P8MtAO5zv73v6Qe59niffe/rQ2blPqq57843wYAAAD4PzY+0uB/Qs4/ZdeZ5AQT
      rL/8tgXBkRznP5Kc8zdN7OS/AAAAAAAA+P+opyN+oP7Qv7lKGqanG+G//MPAtevA8j84PtLgf0LO
      PznfBgAAAPg/pVTBsY7S979pU7OKYfPyvzAGhNKO+va/AAAAAAAA+P+AHTXFPJi1P9bfB/LyEtc/
      Byk3zNxu9L9j15nkBBOsv6VUwbGO0ve/Od8GAAAA+D+auBNyLJn0P1dsHYTI9/U/AAAAAAAA+P/V
      UBK4PUfmv/9fre0nBdy/DwrWenX/97/8tgXBkRznP2lTs4ph8/K/mrgTciyZ9D853wYAAAD4P5Fo
      F8fKyes/AAAAAAAA+P9Au19lJMXlPz2NetTKUu0/vxZJozFE67+RnPM3TezkvzAGhNKO+va/V2wd
      hMj39T+QaBfHysnrPzjfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAADyvKuqqqqqqqI8VVVVVVVVlbxVVVVVVVWFPAAAAAAAALC8AAAAAAAAsLyr
      qqqqqqr2vAAAAAAAAPO8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADNAu1TSytjP9QbfIlP7mk/zM8/3hzLbz8fv6R8uMdiPxOvSrTNyKc/kTk1ZTTbpz+G
    W4E7oPKNP9fi/UvUAZI/17gK/5pWpz+bq5lnM1qnP2X8nR7/Mag/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAADNAu1TSytjP9QbfIlP7mk/zM8/3hzLbz8fv6R8uMdiPxOvSrTNyKc/kTk1ZTTbpz+G
    W4E7oPKNP9fi/UvUAZI/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      ht/TR14F8D+2bHa63ZjUvyJk8Pd+cuU/oHYWBZWz4782zL2hpHbTP08XMEAuYtm/6K7cha9qkL9H
      vCzodN+pP0psjvou29M/UNlkRkW83b9bTw+cLfHdvz9J3s1BbuO/tmx2ut2Y1L+M39NHXgXwP1IM
      WsOuis8/AmfveRQO4D/h+35JKejvv94LHIE7A8g/dGZQo4q8tL8bGLU/MI3Yv8NZpekoaqI/EDUk
      pzegxD8MVYy04GbEP938rvs518s/ImTw935y5T9SDFrDrorPP4vf00deBfA/SGLMbh5i2L8Sc5Ca
      3FjQv6GjyhmznNi/ONiwJwZCnL8RrH7x/0TMv6KjDqLI298/7PLhQsfN07/Z81k0iOLTv1T6xYdc
      wdm/oHYWBZWz478CZ+95FA7gP0hizG4eYti/h9/TR14F8D91ZtoBPd/dvwUYqLZq2+Q/ZsRW8IYt
      v7+tMUlVup7Xvw56Hz64idu/tTLTfQudzj8+bTSGlVTOP69xwFi27NQ/Nsy9oaR20z/h+35JKejv
      vxJzkJrcWNC/dWbaAT3f3b+O39NHXgXwP1x1SBjWEsi/Xiy4RXd+uj+Gig22VUHYP9RbPTFlZJO/
      ypv84isnxb+Ipa7W0AjFv3ePUl2d98y/TxcwQC5i2b/eCxyBOwPIP6GjyhmznNi/BRiotmrb5D9c
      dUgY1hLIv43f00deBfA/Xmtmf6BP6b+sfFIFL/Xnv3JZ0vn5je2/JhUFQ9oJ0T9FDSDNPYvQP26D
      D7En9dI/6K7cha9qkL90ZlCjiry0vzjYsCcGQpy/ZsRW8IYtv79eLLhFd366P15rZn+gT+m/h9/T
      R14F8D+aBICap/vrPyq4HqRHnug/JNbKcmgNwb8ML45RZCW/v/e78m6Ol7K/R7ws6HTfqT8bGLU/
      MI3YvxGsfvH/RMy/rTFJVbqe17+Gig22VUHYP6x8UgUv9ee/mgSAmqf76z+G39NHXgXwP6dJod2r
      kOE/S8kxPYD9wb/dRpJP8zfAv5vwsTtKerK/SmyO+i7b0z/DWaXpKGqiP6KjDqLI298/DnofPriJ
      27/UWz0xZWSTv3JZ0vn5je2/KrgepEee6D+nSaHdq5DhP4vf00deBfA/Jn5Eafvcyr/FGPTiaSnK
      v9PFCv3RlM6/UNlkRkW83b8QNSSnN6DEP+zy4ULHzdO/tTLTfQudzj/Km/ziKyfFvyYVBUPaCdE/
      JNbKcmgNwb9LyTE9gP3BvyZ+RGn73Mq/kd/TR14F8D9/2w7QDwTwPxhlUsE3Z+4/W08PnC3x3b8M
      VYy04GbEP9nzWTSI4tO/Pm00hpVUzj+Ipa7W0AjFv0UNIM09i9A/DC+OUWQlv7/dRpJP8zfAv8UY
      9OJpKcq/f9sO0A8E8D+N39NHXgXwP1EYrcS4ie4/P0nezUFu47/d/K77OdfLP1T6xYdcwdm/r3HA
      WLbs1D93j1JdnffMv26DD7En9dI/97vybo6Xsr+b8LE7Snqyv9PFCv3RlM6/GGVSwTdn7j9RGK3E
      uInuP4/f00deBfA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      rgKCIdkiwLzGlK/DEk78PPv7vE26y4i83ibdZUx5vLx+3ibdZegjPUs4qr/P2ww90Nuku4yp/jz3
      uAoIhmQoPdageNrjats81d/nbdJdqjwrIBiSLaKZPP193ibd5ZY8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: [link]
name: release
num_gripper_vars: 3
objs: [time, node, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      g4kuEdLT+j+5vdUWjHnwv0wPEmyarvu/Z4PoIk+1+j/3g78s407ivziD5VFpXfE/VXaVxioh9T9l
      Smxd1WCTP0/lKjc4v16/vELK562WjL+p8Q1ZU9CWvwSdOR5jxKE/NtY75OGUkb9Pu6tbRb5wP/oa
      JvhQDF6/JuAhWoYVSb/BLQJ56wJHP8hZ3y53ZpO/MFbApPOyqj+5DMLkWh+sv6KSofDS/bM/bItJ
      gTwndb+WKP9zT0SFv7TjxjkihpK/fQ7V5iqJgD8sVfRjABJ4P0JFJr8gI7u/pTFd/Pa8xT8fXjXp
      rZvBv91G94dACME/hG+Z+JZYur/dpT7sRy9hvzIwsf1Tyr8/4xFnwZjhyL+P1ymeEim+P1NavRdT
      5sC/Wwhf7Rvt0j99OarzThWmv1abnp8Zl8Q/+IsNO1Tdw78MjVTZa7e/P6Geau9qssm/HEUvvSNc
      0T+kOc00WsSrP7zv4pRExbK/79cGAQDasz8U8y95tM7Cv7foIAyKdsg/GUj6FIE2zb8=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
