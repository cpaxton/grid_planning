action_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id001 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D+4JE8PPXjRv2+WiYt1bKU/9NxyKFpbcz+DxVNUIk7SP/12h/Awn+A/AACMguHk3z+3
    Q6+O+CPfPyRQ9SsW/N4/9X7IviMORL8D+G/kL7pEv9isafdz50G/
action_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D+4JE8PPXjRv2+WiYt1bKU/9NxyKFpbcz+DxVNUIk7SP/12h/Awn+A/AACMguHk3z+3
    Q6+O+CPfPyRQ9SsW/N4/
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      ZEs74cID8D9AsyUOI7nqP1Py4EeqxNG/cvle4CURn7/9DtFjKdjrv+nHrjAJ48w/DYfNuz351r+K
      zduRlqfYP+g8cV2hnKi/QLMlDiO56j9fSzvhwgPwP7ENrakOmou/a2FG3Q2B07/PQU9l2Lrvv5FD
      97KkBMY/8pvwMy94wL/OGFcevMbIP0/ikLEkCr2/U/LgR6rE0b+xDa2pDpqLv1xLO+HCA/A/0Bye
      WMm84L86VY8GWnrAPzQZaI/fItQ/Ztvs2qll1z+MJqTPYXzov+5hSxaA9qA/cvle4CURn79rYUbd
      DYHTv9AcnljJvOC/XUs74cID8D/ZRb7u5iPNP5c3s1wsXdE/xUBDvUmlzr+oyHcmuZ3MPy2XjFj3
      rcm//Q7RYynY67/PQU9l2LrvvzpVjwZaesA/2UW+7uYjzT9ZSzvhwgPwP61gWlv3cMK/lUcpFyZR
      xj9TgdAlX6nSv/7e3uL3wMA/6ceuMAnjzD+RQ/eypATGPzQZaI/fItQ/lzezXCxd0T+tYFpb93DC
      v1dLO+HCA/A/yydPP1H/y7+EC+ZfCn3Sv/8bDAyTHtG/DYfNuz351r/ym/AzL3jAv2bb7NqpZdc/
      xUBDvUmlzr+VRykXJlHGP8snTz9R/8u/ZEs74cID8D+Y94q+pkvkv8KQuQ16buG/is3bkZan2D/O
      GFcevMbIP4wmpM9hfOi/qMh3JrmdzD9TgdAlX6nSv4QL5l8KfdK/mPeKvqZL5L9ZSzvhwgPwPxpg
      /V0EhrA/6DxxXaGcqL9P4pCxJAq9v+5hSxaA9qA/LZeMWPetyb/+3t7i98DAP/8bDAyTHtG/wpC5
      DXpu4b8aYP1dBIawP2BLO+HCA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      8MJB9PgubDwH0eO7cBDyPAaT57NhMKk8AOEBfPgPyDxR87oyFDXePLhZIZl6m6m8pxxjjXOq9Dyq
      1leloGoFPbr0Fy2gy+O8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    fIywHVZo0j89DSQc9ue2P74PPpbHVq0/lHF50lfTqj8im6V60J23P0VdtZUtr6I/alGfyyTorj8u
    gDjk4hqtP8VIY5Molak/cZgwHI5rRT+Uhn7iB1pFP1dMjp2pUkM/
action_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    fIywHVZo0j89DSQc9ue2P74PPpbHVq0/lHF50lfTqj8im6V60J23P0VdtZUtr6I/alGfyyTorj8u
    gDjk4hqtP8VIY5Molak/
goal_mean: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAM6Qy9RKvJvxTAeS0GN5U/wNBsku1scD+8huRrDULKP4dGwqT8iuA/FhfigrSt3j9g
    gAgZ6nLgP8AOKEFn8N4/AMCND15yNL8A4B8ot6A2vwBA7hbnnVa/
goal_mean_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAM6Qy9RKvJvxTAeS0GN5U/wNBsku1scD+8huRrDULKP4dGwqT8iuA/FhfigrSt3j9g
    gAgZ6nLgP8AOKEFn8N4/
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P+PNFxVVVX1P6/ret7PnOY/GeDaExLE7L8JC4uWMb7zv2tb
      fwL2mbm/gRtI2NXI6z+jvKlQy17xv92RcTUUbdk/AAAAAAAA+P+v63rez5zmP400XFVVVfU/Zj2p
      lcqM9L9foq55CRXQvzNZoruiKvE/HVPLZ6WSwL/BVU0QfgmsPxAAyKpTGNi/AAAAAAAA+P8Z4NoT
      EsTsv2Y9qZXKjPS/jTRcVVVV9T8xEaikyXfdPwByWFiFn+y/EKazLAztqD8/x5fLFefOP8WtqVJ3
      IZw/AAAAAAAA+P8KC4uWMb7zv1+irnkJFdC/MBGopMl33T+NNFxVVVX1P1g9HntXYuI/ezfOv8hW
      8r91ryEDddzzP1wQBeJLed6/AAAAAAAA+P9rW38C9pm5vzNZoruiKvE/AHJYWIWf7L9YPR57V2Li
      P480XFVVVfU/MELMRr976b/nAYYox+rpP6HnsZXVNOW/AAAAAAAA+P+BG0jY1cjrPx1Ty2elksC/
      EaazLAztqD97N86/yFbyvzBCzEa/e+m/jDRcVVVV9T8T/dKCuzLvv+BtiYqSlp8/AAAAAAAA+P+j
      vKlQy17xv8FVTRB+Caw/P8eXyxXnzj91ryEDddzzP+cBhijH6uk/E/3Sgrsy77+NNFxVVVX1P7Pc
      PaUNQey/AAAAAAAA+P/dkXE1FG3ZPxAAyKpTGNi/wa2pUnchnD9dEAXiS3nev6HnsZXVNOW/4G2J
      ipKWnz+z3D2lDUHsv480XFVVVfU/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAANDPPAAAAAAAAIQ8AAAAAAAAAAAAAAAAAADUPAAAAAAAINy8AAAAAAAAgDwA
      AAAAAAC3PAAAAAAAAJC8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [12]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAASwHfiGjOQP9GApSUBWp4/KYe0aCD0lT+QcHwXH3eKP4O2lE3ZQ5I/GmRsWdrRpT8F
    pCOhlLGkPzl7IVKHTKI/Fh0Y4lmvNz/6ZyDyD9I3P3KR5zAslVk/
goal_std_ng: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAASwHfiGjOQP9GApSUBWp4/KYe0aCD0lT+QcHwXH3eKP4O2lE3ZQ5I/GmRsWdrRpT8F
    pCOhlLGkPzl7IVKHTKI/
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      ZEs74cID8D9AsyUOI7nqP1Py4EeqxNG/cvle4CURn7/9DtFjKdjrv+nHrjAJ48w/DYfNuz351r+K
      zduRlqfYP+g8cV2hnKi/ou/pAEbyxr/NZfY9KxXIvzuxWebQ55a/QLMlDiO56j9fSzvhwgPwP7EN
      rakOmou/a2FG3Q2B07/PQU9l2Lrvv5FD97KkBMY/8pvwMy94wL/OGFcevMbIP0/ikLEkCr2/58OX
      ARuQvr/Ln/wy6TG/vxbceHj4C5y/U/LgR6rE0b+xDa2pDpqLv1xLO+HCA/A/0ByeWMm84L86VY8G
      WnrAPzQZaI/fItQ/Ztvs2qll1z+MJqTPYXzov+5hSxaA9qA/l3wYnzpDwL+GeNp2Iqa7vyJhgtYT
      /dG/cvle4CURn79rYUbdDYHTv9AcnljJvOC/XUs74cID8D/ZRb7u5iPNP5c3s1wsXdE/xUBDvUml
      zr+oyHcmuZ3MPy2XjFj3rcm/JiVkX3cqw79Kl3Jy437EvysANUfoGqM//Q7RYynY67/PQU9l2Lrv
      vzpVjwZaesA/2UW+7uYjzT9ZSzvhwgPwP61gWlv3cMK/lUcpFyZRxj9TgdAlX6nSv/7e3uL3wMA/
      9c4yqYmuuz+xbYs5N4y8P1sON3IEfoq/6ceuMAnjzD+RQ/eypATGPzQZaI/fItQ/lzezXCxd0T+t
      YFpb93DCv1dLO+HCA/A/yydPP1H/y7+EC+ZfCn3Sv/8bDAyTHtG/56nLCl562r+VvOsldLnavzCs
      P9l8M8+/DYfNuz351r/ym/AzL3jAv2bb7NqpZdc/xUBDvUmlzr+VRykXJlHGP8snTz9R/8u/ZEs7
      4cID8D+Y94q+pkvkv8KQuQ16buG/bbaIvEWt4D8m1QbRVCXiP6mLqxVFm9E/is3bkZan2D/OGFce
      vMbIP4wmpM9hfOi/qMh3JrmdzD9TgdAlX6nSv4QL5l8KfdK/mPeKvqZL5L9ZSzvhwgPwPxpg/V0E
      hrA/+ZM03DLum7+v5lAM2rOpvxGpDRkZjM4/6DxxXaGcqL9P4pCxJAq9v+5hSxaA9qA/LZeMWPet
      yb/+3t7i98DAP/8bDAyTHtG/wpC5DXpu4b8aYP1dBIawP2BLO+HCA/A/uX3YN/9J1b/pSBv1krvX
      v5I3nOPBI9u/ou/pAEbyxr/nw5cBG5C+v5d8GJ86Q8C/JiVkX3cqw7/1zjKpia67P+epywpeetq/
      bbaIvEWt4D/5kzTcMu6bv7l92Df/SdW/YEs74cID8D/7xUzTSJPvPwswrxamucs/zWX2PSsVyL/L
      n/wy6TG/v4Z42nYipru/SpdycuN+xL+xbYs5N4y8P5W86yV0udq/JtUG0VQl4j+v5lAM2rOpv+lI
      G/WSu9e/+8VM00iT7z9ZSzvhwgPwPxjwgpeWldA/O7FZ5tDnlr8W3Hh4+AucvyJhgtYT/dG/KwA1
      R+gaoz9bDjdyBH6KvzCsP9l8M8+/qYurFUWb0T8RqQ0ZGYzOP5I3nOPBI9u/CzCvFqa5yz8Y8IKX
      lpXQP1tLO+HCA/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 12]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      8MJB9PgubDwH0eO7cBDyPAaT57NhMKk8AOEBfPgPyDxR87oyFDXePLhZIZl6m6m8pxxjjXOq9Dyq
      1leloGoFPbr0Fy2gy+O88R88gA//kbxcnZGKudVZPLBKQdX6qjQ8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: approach
num_gripper_vars: 3
objs: [time, link, gripper]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 49]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      tW/BZxN28j96oSk2TIT5v4J1gKjzF+q/36pQA8Q5AEBwvHZILN71v01A70MQYuc/9C9EQU5X/D8y
      hvTJ/TvhPxueY38Xu9k/0K7VT8fo5b9c6M0Q6vnBP52mOcs+/7I/OpRix49Ywb8BGAHPQCjTv1ss
      rPKFtNi/6CU96ovL0T+Ec8ikSJrSv2BFygefWMI/4ABVBg6D0z/FHYtyVLfBP1c3VIxkyes/ogPy
      TT5i779dLKnm7/mJP5zRZvGvbJ6/2ptv45nDzr9pCVCibarAP1TfoU1ij9E/tVbOxIQX6b+GNMr9
      c2rxP4Ue9JQINrs/5abVthDQ879Iaj2NMiG6v0oNi+tVJ92/vdYyVpFVAECpF7qhR1UBwDRAt8yW
      5NC/N72GJOVOAkA2GOgWJmHxP4lcdYvuprU/3e1GYEQz4b8kBWC/pirrv3r7tmebDv8/t2Y7IzkA
      AcDX3ysHQcjXPzYYkN2aj8C/bhs2ND5Y9L/joA/n3MboP4yn1o9DFPI/jLKbhWkdAsA=
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: null
  tol: 0.001
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      /v//////7z8=
