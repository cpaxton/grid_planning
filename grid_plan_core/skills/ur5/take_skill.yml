action_mean: &id001 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id002 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D9RW40opo7Rvy/8uIJ52qU/E5UUla9npj9fckY4WjzSP//SY/ZRZM+/4Nqirn+yk7/i
    P+ZgR6iDPzKigrnpXpQ/
action_mean_ng: *id001
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      wVUWW98G8D/Sf1Dlt8rsP9mPNWLV59U/7cNdEqXV579RRAw8j8XsvzbCC8sI7tS/OzzEmWHL0r8m
      XXDCgw20Py0fIrggE8w/0n9Q5bfK7D/JVRZb3wbwPzTpAvSyP9k/KAM7Xn656L/8iELDnQXwvwlH
      mrNdHeC/fdmeIHkN3b+MyUlMzg7CPwVqzaCic8o/2Y81YtXn1T806QL0sj/ZP7lVFlvfBvA/BaeK
      48ip3b/laaPktDXYv3Gpf9y+g9A/7qlX+1z8xD8y7UNqiVrkv7TVhl4l7tK/7cNdEqXV578oAzte
      frnovwWniuPIqd2/yFUWW98G8D/szRtHu7/oP5+WLjzu78A/2O5LA48EjT/TAK5T68/IP9ITQBcN
      N6Y/UUQMPI/F7L/8iELDnQXwv+Vpo+S0Ndi/7M0bR7u/6D/HVRZb3wbwP7qlrIztZ+A/T5lmfFpv
      3T/7lzFmCDDDvzTM0g6qNcu/NsILywju1L8JR5qzXR3gv3Gpf9y+g9A/n5YuPO7vwD+6payM7Wfg
      P89VFlvfBvA/ehTMFwC17T+pVK8rparovzaaGx28jMK/OzzEmWHL0r992Z4geQ3dv+6pV/tc/MQ/
      2O5LA48EjT9PmWZ8Wm/dP3oUzBcAte0/1VUWW98G8D8VsxsGfiXnv9EEJVO1aYs/Jl1wwoMNtD+M
      yUlMzg7CPzLtQ2qJWuS/0wCuU+vPyD/7lzFmCDDDv6lUryulqui/FbMbBn4l57+/VRZb3wbwP4hq
      ONkkss4/LR8iuCATzD8Fas2gonPKP7TVhl4l7tK/0hNAFw03pj80zNIOqjXLvzaaGx28jMK/0QQl
      U7Vpiz+IajjZJLLOP8xVFlvfBvA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      QcVkwUkEfjzLi9LBTBn0PPrV2fSx3fE8rr89sNG7wrymhq7FZ9bqPHxmzZ1QNM48Jgg5j+pp0bzL
      i9LBTBnBvBzGautvD9C8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: &id003 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    YXV8nfJh0j8Hkw5/kkzEP/xPamkSdJs/OJfwQC5MlD+jFKu6q9vDP55mSQVX8+4/3jXDNWGVpz+V
    nuCKyFKhP9aAvoSb+48/
action_std_ng: *id003
goal_mean: &id004 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAACDycIpCCPAv72LANczmKo/iwwug+5Jmz+HxEtSlfLBPwOyi5J5PNW/KdrvlVRtnr9L
    JNiX4paDPwyKm08mepQ/
goal_mean_ng: *id004
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P843wYAAAD4PyISKvTYCti/pXjxEK9w6b+kZG5nuh3zvzYx
      ESwIyd2/owoffMgY27+2Ir8RgV7kv2Z+OxrH0e2/AAAAAAAA+P8iEir02ArYvznfBgAAAPg/JmQv
      XIaE8L/H3ywaENbyPyZn90sR9Pc/xHsAEaf89z9Ir2v+GX3yv1B3JvN28uy/AAAAAAAA+P+lePEQ
      r3DpvyZkL1yGhPC/N98GAAAA+D9cYn2s52PBv+0ScMNKze6/PHKrAzXe778/OKl3jtP3P9vIP++y
      2fc/AAAAAAAA+P+kZG5nuh3zv8ffLBoQ1vI/XGJ9rOdjwb853wYAAAD4PzSpZR7gufM/0hoKzhlR
      8z/wRX+sXxzUvzDVnUooJKA/AAAAAAAA+P82MREsCMndvyZn90sR9Pc/7RJww0rN7r80qWUe4Lnz
      PzjfBgAAAPg/PJD83Fv99z9O7mt74H/xv2Jp0A54geq/AAAAAAAA+P+jCh98yBjbv8R7ABGn/Pc/
      PHKrAzXe77/SGgrOGVHzPzyQ/Nxb/fc/ON8GAAAA+D84a/rSOfnxv0fghW3oquu/AAAAAAAA+P+2
      Ir8RgV7kv0iva/4ZffK/Pzipd47T9z/wRX+sXxzUv07ua3vgf/G/OGv60jn58b853wYAAAD4P/jb
      oUxLW/c/AAAAAAAA+P9mfjsax9Htv1B3JvN28uy/28g/77LZ9z8w1Z1KKCSgP2Jp0A54geq/R+CF
      beiq67/426FMS1v3PzjfBgAAAPg/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAADAbPQAAAAAAALA8VVVVVVVVlbwAAAAAAADiPFVVVVVVVZW8VVVVVVVVlTxV
      VVVVVVWVvFVVVVVVVYU8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABx3Rk4Zg85P4j1CARr5os/JliiSR2PjD93NvRue/NyP8oShjbOIO4/v1yqHrU/oj/W
    chqJ5CqXPyykn3pzDJI/
goal_std_ng: *id005
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  init_params: wmc
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: take
num_gripper_vars: 3
objs: [time, tool]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      KusK4E9J3b8NmBpytBYHwPDpyCi0cvm/2Hi6TsVMs7/TJrII/RP5P1r+Wfd0Oci/Itv4m5z7jj8b
      3qNeWJOTv9gytyN3+Jq/ouaJzPL2cL9BOn1na4KiP0DyJ/oFRIw/AIq6/0ue47+xxaAE1hDkPx6z
      fS5PF+w/ThPSkJZZ2D+TCnWlka7jv5s/qj3Tu+e/ePJP6C2x0j/1WJni4B7av1p0KA4SqeC/gA1f
      tskUr7+GdzFRCTDkP+E3URxOe9c/VoZOsMkZ0j9ckXmjLH3JvwRX8aYrb9G/H5fdOMrwzr/y45qf
      LczGvxBjnRh4zck/mWzy09aGUD9RKNQYvOYzv7ZcX9IyU1c/VsmQzZrqV7+VH6FVOeaJv2KCm2jz
      uns/Gk0Aw45QsD8mZ7cQ3e6lv90oKGzQTcO/8OkH0zVzvr/s6MWGR23SPz0cD3vJgss/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +///////7z8=
