#!/usr/bin/env python

import grid
import PyKDL

" ROS "
import rospy
import sensor_msgs
from geometry_msgs.msg import PoseArray
from std_srvs.srv import Empty

" math "
import numpy as np
import tf_conversions.posemath as pm

" control "
from trajectory_msgs.msg import JointTrajectory
from trajectory_msgs.msg import JointTrajectoryPoint

rospy.init_node('trajectory_result_training5_node')

robot = grid.RobotFeatures()
obj1='/gbeam_link_1/gbeam_link'
obj2='/gbeam_node_1/gbeam_node'
robot.AddObject("link",obj1);
robot.AddObject("node",obj2);
base_link = 'wam/base_link'
end_link = 'wam/wrist_palm_link'

traj = [([0.8166904750672667, -1.570158216387199, -0.46556754337339323, 1.6628719245135342, -0.816226373698244, 1.3545299526790735, 1.1594103835724967], [1.3527913042528803, -0.7686849995888236, 0.741638626410171, 1.551151668562869, -1.4804462289646478, 0.2380642306671665, 1.3831440941662132]), ([0.9614205357086545, -1.6481422643774042, -0.3912655340898651, 1.8236180390202452, -0.9845691549173784, 1.3576499251986638, 1.3145647034978873], [1.463506792488309, -0.724599759854016, 0.6501085691613406, 1.5638086731766412, -1.878266792397067, -0.26606288461158645, 1.7299032476149807]), ([1.0933200187855512, -1.7069136277259667, -0.33773512140678236, 1.9544904486020536, -1.1656341078353982, 1.2952033586170555, 1.4753473107172446], [1.0980714039642514, -0.39656533806170874, 0.339383289030813, 0.9703553923488601, -1.7128715663052405, -1.0132805028377854, 1.481599694243599]), ([1.1835765884909848, -1.7313008726364119, -0.3174737184146102, 2.021627815507228, -1.3205890014983512, 1.1655578737910353, 1.6045807179410083], [0.6548767265308852, -0.06134112847592369, 0.00883365246112839, 0.33251310026115466, -1.3628464361552366, -1.5469616122391758, 1.111839707399208]), ([1.2332008006004673, -1.7265307239747931, -0.32993398449340966, 2.034060472790926, -1.4415965030936355, 1.002482445976877, 1.7045387105980634], [0.31103409619597355, 0.16456115769892202, -0.2886564906875402, -0.08473640788541073, -1.047851023735296, -1.6441633691405453, 0.9070893342024734]), ([1.2548401575575134, -1.704841401766574, -0.370566969118667, 2.0172745261653415, -1.536718245868255, 0.8498867604690866, 1.7956855444810147], [0.1132396051207813, 0.2630543033994864, -0.5292010857407075, -0.23033443553861088, -0.8544416562604656, -1.3346001493230928, 0.9308667070676896]), ([1.2624694088210253, -1.6777575730532523, -0.43221360840936607, 1.9957462487844073, -1.6184313761443558, 0.7403189783639132, 1.8971610650295871], [0.039644085140203594, 0.2665528892391239, -0.6872545888659783, -0.17588376712783932, -0.7806336823216479, -0.808471135174651, 1.0939236895316118]), ([1.2664757070697197, -1.6527075060108107, -0.5053071588027882, 1.9844495042768988, -1.6967790435589558, 0.684719049150854, 2.0161873820765255], [0.042378276434956466, 0.22196753538191868, -0.7429840822275101, -0.03349131621124257, -0.7810878677060757, -0.2916165844215943, 1.2562631841094196]), ([1.2723290370835514, -1.632680162513456, -0.5791700472963176, 1.987594123025812, -1.776678777487935, 0.6737193193123399, 2.147013811073317], [0.07424348403416993, 0.16810184546906062, -0.6957366891919424, 0.10145430933763779, -0.8022205126595177, 0.05175267143310245, 1.308779937339801]), ([1.2813330620702608, -1.6175465998189098, -0.6442422423175198, 2.0017225902000044, -1.8581446874075587, 0.6862302746096889, 2.276104818870402], [0.10207640351439849, 0.12625644892807705, -0.5683516829273619, 0.1768500303611413, -0.80322875684071, 0.16153920581424527, 1.2115614121138225]), ([1.2922433570735135, -1.6058311657524147, -0.6941711022953599, 2.020224409608693, -1.938015838729589, 0.6997808845794424, 2.3891787547209904], [0.11000269496654284, 0.10104725735178995, -0.4000987380787973, 0.1843876527961911, -0.7639831818923599, 0.07251947167975134, 0.9908990173873762]), ([1.3029010008317334, -1.596112275399001, -0.7268424200122128, 2.0371105804464564, -2.0120222115557107, 0.6983163527053594, 2.4766540841686804], [0.0963826349266746, 0.08678754606621994, -0.2333527358382018, 0.1446110559692912, -0.6835177930374311, -0.12573741194509294, 0.7113898046715426]), ([1.3114133459344004, -1.5877084072369083, -0.7440557143192578, 2.049027353946871, -2.0764441122565565, 0.6755157444645629, 2.535911510074438], [0.06807230827983439, 0.0749022142664672, -0.10088634738811239, 0.08785888509903209, -0.5736122365429439, -0.33516569952416614, 0.44246678943248097]), ([1.3167439076338716, -1.5807003648884332, -0.7501589117505038, 2.055504241069944, -2.129052338537533, 0.6339192832367231, 2.5705269305173526], [0.03474536998214129, 0.05929529288566182, -0.018654016758233263, 0.03931368998524761, -0.4513023093625389, -0.4834901132992021, 0.23362909080292896]), ([1.318796675384971, -1.5755620054862265, -0.7502863190679055, 2.058047018346065, -2.169344342528046, 0.5815054591595934, 2.5876861731567438], [0.0048278578627421334, 0.03850556147650082, 0.014514675838798842, 0.011760717796984862, -0.3327991160853395, -0.538823904189719, 0.10436529424007139]), ([1.3181845229977172, -1.5727108004627444, -0.7488378413051058, 2.0588522398009648, -2.198275805432793, 0.5276697704400743, 2.59523574756197], [-0.016507437062323813, 0.015076730734199963, 0.011876431477801156, 0.005604966981129777, -0.22987173433999433, -0.5063612474725422, 0.04738663327063823]), ([1.31587870194345, -1.572201677735385, -0.7485979331391552, 2.0597525047015623, -2.2177404381751806, 0.4800914505043616, 2.599464051550267], [-0.02760460743945525, -0.006581176458577172, -0.00854715822969613, 0.013347227512401302, -0.1486513797733413, -0.41441743046984764, 0.03957323648883088]), ([1.3128856378247693, -1.5736506817612013, -0.7505782693864281, 2.0616862835673087, -2.2300151038618936, 0.4431693715172789, 2.604089190070639], [-0.029515329285379303, -0.02247656070774333, -0.03058206945058728, 0.025231030918476047, -0.09019740770734763, -0.29809651172823065, 0.05430652087225614]), ([1.310027437515697, -1.5763556802851548, -0.7544143225953992, 2.0646879224653136, -2.2373100640462478, 0.41796005051944, 2.610362214376127], [-0.024796965437205245, -0.030535246883990053, -0.04392400688339179, 0.03360872350654475, -0.05198705889515532, -0.18670552489724138, 0.07060015144953323]), ([1.3078416843106109, -1.579515967533775, -0.7590234065167313, 2.0682096098335476, -2.2414834982738836, 0.4030925948695861, 2.617857317598538], [-0.016410522411175823, -0.030992239490636675, -0.045108657490384306, 0.03494906707892803, -0.029609622856045452, -0.0975854412298173, 0.07714836832120193])]


cmd = JointTrajectory()
msg = PoseArray()
msg.header.frame_id = base_link
pts = []
vels = []
for (pt,vel) in traj:
    cmd_pt = JointTrajectoryPoint()
    cmd_pt.positions = pt
    cmd_pt.velocities = np.array(vel)*0.1
    pts.append(pt)
    vels.append(vel)
    cmd.points.append(cmd_pt)
    f = robot.GetForward(pt[:7])
    msg.poses.append(pm.toMsg(f * PyKDL.Frame(PyKDL.Rotation.RotY(-1*np.pi/2))))

if len(cmd.points) > 0:
    cmd.points[-1].velocities = [0]*7

pub = rospy.Publisher('/gazebo/traj_rml/joint_traj_cmd',JointTrajectory)
pa_ee_pub = rospy.Publisher('/dbg_ee',PoseArray)

rospy.sleep(rospy.Duration(0.5))
pub.publish(cmd)
pa_ee_pub.publish(msg)

try:
    rate = rospy.Rate(10)
    while not rospy.is_shutdown():
        pa_ee_pub.publish(msg)
        rate.sleep()
except rospy.ROSInterruptException, ex:
    pass

