action_mean: &id001 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id002 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AQAAAAAA4D+IMBtLCSjNvxLzjuGDVNI/uSRdIgJP4b/iUWGnB+vlP+WDGNJZ+OM/g6YnlCkS1L9C
    iMxysv7kP0JoaLzSU9E/
action_mean_ng: *id001
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      Pgu3wAIL8D/5/Ku2WGHZP8g7pfIbr5s/Dv/edWaG7b/v5BFlzi/tP6wvozRts9o/wSmjk0ZLwb/O
      tl2k5wXcv9MnzaxB28W/+fyrtlhh2T8/C7fAAgvwP9FK4l2/RN6/HRaRDRfr2L9ZivUPpQHPP+yr
      L840YdI/r553eFF6wT8Fn+6Q7CXUv+13tkRi6MK/yDul8huvmz/RSuJdv0TevzkLt8ACC/A/3ivS
      kzwOtD9DvnC8aZy7P+cNuJRe1qQ/bemb2pVh4z+dxQh4fnjLP45Cum9Ad+a/Dv/edWaG7b8dFpEN
      F+vYv94r0pM8DrQ/PAu3wAIL8D/I26iT9Vbvvz/6bVF77dm/oLa0y5bO0z9iulUnF9PdP97PSmsR
      8KA/7+QRZc4v7T9ZivUPpQHPP0O+cLxpnLs/yNuok/VW778/C7fAAgvwP1/JF3dYn90/JhDxO5YH
      0b86ocNkptzevyNd/O75W8S/rC+jNG2z2j/sqy/ONGHSP+cNuJRe1qQ/P/ptUXvt2b9fyRd3WJ/d
      P08Lt8ACC/A/msu6VY2M0r9/kZhtnaXuvxyVWd1u3uG/wSmjk0ZLwb+vnnd4UXrBP23pm9qVYeM/
      oLa0y5bO0z8mEPE7lgfRv5rLulWNjNK/Qgu3wAIL8D+2VdXu8tLgPwxI1w+zEeO/zrZdpOcF3L8F
      n+6Q7CXUv53FCHh+eMs/YrpVJxfT3T86ocNkptzev3+RmG2dpe6/tlXV7vLS4D9NC7fAAgvwP5dl
      bk2OOtM/0yfNrEHbxb/td7ZEYujCv45Cum9Ad+a/3s9KaxHwoD8jXfzu+VvEvxyVWd1u3uG/DEjX
      D7MR47+XZW5NjjrTPzsLt8ACC/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      okSsUUXPwryaoP65Dbz8vKYWgx3h2Mm882aC+uc26LzZNIfvt6TwvEH9cxt47fA8j5NlPAgUFb1X
      XZhaDHbEPPIgkLZeXh69
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: &id003 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    ED2BiVxg0j9Y4aihINWnP/Y1w5qfIas/vABcuuHc0T/dVCpyJ6vJP5S2k4poG7A/tb/BCeUAlz/7
    a6TudaiuPwuUKRpvHpQ/
action_std_ng: *id003
goal_mean: &id004 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAiVZKMcHrLv9b5rhqzS9Q/xAjf1aKk6b+O0Ob+7HbsP8aRhIJAJuU/svzDZN6g079+
    4pdPlCTkPzQv0RKWdtA/
goal_mean_ng: *id004
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P+cbwMAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAwAAA
      AAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwJxvAwAAAABAAAAA
      AAAAAMAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAA
      AAAAQAAAAAAAAADAnG8DAAAAAEAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAA
      AADAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAMCcbwMAAAAAQAAAAAAAAADAAAAAAAAA
      AEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAA
      wJxvAwAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABA
      AAAAAAAAAMAAAAAAAAAAQAAAAAAAAADAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8A
      AAAAAAAAwAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAECcbwMAAAAAQAAA
      AAAAAABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAQAAAAAAAAADAAAAA
      AAAAAEAAAAAAAAAAQJxvAwAAAABA
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAAAAAAAAAAAAAAAAAAAAACA6rwAAAAAAAAAAAAAAAAAANG8AAAAAABwFD0A
      AAAAAADRvAAAAAAAAOA8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAACof+bWx6upPzB00YO2l6I/EBLs3kH7kj8ww5xKsl+lPwjdEHsFdK0/gP4UH1IWWT+o
    1SDlWKStP9gBPQ79S4A/
goal_std_ng: *id005
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  init_params: wmc
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: lift
num_gripper_vars: 3
objs: [time, vise]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      9thwo0Xg4r99nv5Kb0X9v61j5olaVPW/VuEGZ5j29r/C0FG/PXX5P+PLgPSOeNG/fJxbJlOKuT/1
      RCgeqOTKP1g10i9BHWk/AV+eEK1e4L/mTDYaG33Cv4BiTHVpZd8/BI0QTm8D6T9RCJbOgZPhv6fV
      KYHKROW/Q+o87cbwxr95Dc0AlrB1v7cS3zTx0dy/gTIfg6eSzj9rymNFS+bFv83V264wwNK/D3DM
      EmJr0L8FX+hP++O7P11d8cAqQ9g/OjgDiBbA778yLTnV4DvdPxLfnSqOGeM/7p2q8Qw21T+xWBIk
      Y33hP/RapZHP6/A/xiQ7X+CdWL/ZIV/2OONzP7kcuEwRlWA/PSCvNzusd7+gYu66pUhSPzTTiCa8
      PH8/eo7Q0Z8QP7/dUHSbLhcoPxRLB3bHlzc/WwYZx8BaQT//gZ0+jYYmPzmQpFDHfyq/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +P//////7z8=
