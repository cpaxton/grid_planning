action_mean: &id001 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id002 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAA4D/ZscfIoqq/v+RqvrlazrA/mV+Po7ZGiz+BQT9tYAPCPzL3Kz1Tc+M/Q6aOtcm4cr89
    589M8Jxyv1hM8CtFKY8/
action_mean_ng: *id001
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      Yw6aWhAK8D/Yu2wkIj2wvxO5KJc977M/xzyb/tLHND++4OBYVZKwP1E+YLcgVd6/m0ToMXI+2z9q
      jwWi+Q/iP7pqAG/5H9g/2LtsJCI9sL9xDppaEArwPwQ79VZ5R+6/TVYj4joV7r9nsE9E4vLuvxf0
      HqD2yN4/wDEiwRjt5L/dGGZ/Q3euv7ocxL2RQNM/E7kolz3vsz8EO/VWeUfuv0UOmloQCvA/Aa4/
      AKXm7z+a68Hrwv7vP5+2jFTZbeK/Ce9QLhLI5z/YFo2M7nbCP7NXGFD8jsi/xzyb/tLHND9NViPi
      OhXuvwGuPwCl5u8/dw6aWhAK8D9AEULLD9zvP0//f1FNq+G/bcEqLGUa5z/XXInBBee8P094/soq
      NMi/vuDgWFWSsD9nsE9E4vLuv5rrwevC/u8/QBFCyw/c7z9WDppaEArwP7cyLmtL4OG/aBA2bslT
      5z/h+75QN7G/P4cUhj6i0cu/UT5gtyBV3r8X9B6g9sjeP5+2jFTZbeK/T/9/UU2r4b+3Mi5rS+Dh
      v2kOmloQCvA/BAcLdbo377+8Oy3BRZfsv9Xf87TkM96/m0ToMXI+2z/AMSLBGO3kvwnvUC4SyOc/
      bcEqLGUa5z9oEDZuyVPnPwQHC3W6N++/PA6aWhAK8D8GckuZdJ7oP4ignmdGNNc/ao8FovkP4j/d
      GGZ/Q3euv9gWjYzudsI/11yJwQXnvD/h+75QN7G/P7w7LcFFl+y/BnJLmXSe6D9XDppaEArwP/0w
      oTB4UOU/umoAb/kf2D+6HMS9kUDTP7NXGFD8jsi/T3j+yio0yL+HFIY+otHLv9Xf87TkM96/iKCe
      Z0Y01z/9MKEweFDlP4IOmloQCvA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +/r6+vr6irySkZGRsbdwvSMjIyMjLys9VVVVVVUV6LyDgoKCgjIKvcTDw8PDw3M8g4KCgoJC5bwe
      Hh4eHr7LvGRkZGRktPI8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: &id003 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    O2+O74Zi0j87SvTgAA1FP4hdMKL8U20/QjGKoUrtaD97lAZYiY9kP3NH0VCEZek/wE378jxpdD/v
    JjeNSm6OP1aE0zK2zok/
action_std_ng: *id003
goal_mean: &id004 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAABQS6aBWcG/v5zn5T5m/7A/YBdjveOpiz8gAWtX+RjCPwCIm9SnHyM/gH3bAbttUb98
    xTnV9xKBP1TQmi636ZI/
goal_mean_ng: *id004
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P+cbwMAAAAAQAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAA
      AAAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwJxvAwAAAABAAAAA
      AAAAAEAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAA
      AAAAwAAAAAAAAABAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAA
      AABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAECcbwMAAAAAQAAAAAAAAADAAAAAAAAA
      AEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAAAAAAQAAAAAAAAADAAAAAAAAAAMAAAAAAAAAA
      wJxvAwAAAABAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABA
      AAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8A
      AAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAECcbwMAAAAAQAAA
      AAAAAABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAAAAA
      AAAAAEAAAAAAAAAAQJxvAwAAAABA
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6PAAAAAAAAAAAAAAAAAAAAAAA
      AAAAAACgPAAAAAAAANQ8
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAACIYPE1FIP4DfrG8Py2k/gDWDW5ikZj9gdPpSCJxjPwBHmiBC/e8/M2chWdZMeT+H
    mFjbSyaOPyiIHo2iVlo/
goal_std_ng: *id005
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  init_params: wmc
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: close
num_gripper_vars: 3
objs: [time, tool]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      t4AmglES4b8scFsVN+0GwNd7JJtz8vm/rp4I5LtfuL+aUJ3p9lT5P7o7Y5OB3bY/reMR5/qDQr9n
      ORbXR99UP1UMR1WgaWU/BL9TDj76cr90zoa8G/RWv/6pUG5rrH8/bWpsY4UkVb9XaeL8mo9gv8uK
      q+RLJ3g/GqXx8axQW79O8ArKD8x9v/TMKtI4Yo0/L730jmCWGL9IDDOVJvQ+vzw+73vdnjo/UEJ6
      txDzVT/6tI30gZtjv5rJaJnH+0E/oavfXVdQT78fkL0S8xldvzHFv11cu3A/OKRDsjmcKD/2DvxS
      G9d1v9Zn71vcPH0/sOPX6aWeGj+zJy+MINdoP8hdhFWy9Qq/j0t0+5X1dr80hGGxqV9RP18Qehtt
      sXU/UORGI7yIoT+79zY7e8BTP2unGJPDfsW/9h5LYPuXpD+pBDHvFk7cP//ZhQ2laOG/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +P//////7z8=
