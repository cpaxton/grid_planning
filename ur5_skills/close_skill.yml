action_mean: &id001 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - &id002 !!python/name:numpy.ndarray ''
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    +f//////3z/HZWotOR28v5MPW39h3qe/FH+l9wxJw79+60pEBZ/IP8u6RGKTD4S//nPYN9AgpL+c
    UeNqlQOFPz5WQqQp9e8/
action_mean_ng: *id001
action_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      yTCMpFgL8D/2TdqKbxiqvx55epgcp2s/sPpHK5o3oD/ja7vGix2Tv+XoOEtnLXK/lTFOjvdolb8w
      nuHz1p3BP2F1qLllCoO/9k3aim8Yqr/OMIykWAvwP340y6cYAPC/pu4ETqwJ8L+xXFE+mAbwPxPX
      0JF/+e+/1KmfI5Dl77/QTywyTp7vv7lpv3KL9O+/Hnl6mBynaz9+NMunGADwv8QwjKRYC/A/hsq5
      JbsG8D/zjA+/bAnwv0kbL+HaCfA/fyirbgYH8D/3SXSxDEXvP7WtsCk+CfA/sPpHK5o3oD+m7gRO
      rAnwv4bKuSW7BvA/xDCMpFgL8D8JA4Qfjwrwv7HqARPxBPA/p/9BI8z77z+d+3YQx3nvP4W1oUNE
      A/A/42u7xosdk7+xXFE+mAbwP/OMD79sCfC/CQOEH48K8L/XMIykWAvwPywwvgigCPC/hU3XzpUD
      8L+irfmCfV3vv9iHRB1+B/C/5eg4S2ctcr8T19CRf/nvv0kbL+HaCfA/seoBE/EE8D8sML4IoAjw
      v6EwjKRYC/A/LGkCEA0K8D8aCH2tMR3vPyhwHcM9C/A/lTFOjvdolb/UqZ8jkOXvv38oq24GB/A/
      p/9BI8z77z+FTdfOlQPwvyxpAhANCvA/zzCMpFgL8D+2p+m8JuvuP5HdcEmoCvA/MJ7h89adwT/Q
      TywyTp7vv/dJdLEMRe8/nft2EMd57z+irfmCfV3vvxoIfa0xHe8/tqfpvCbr7j/AMIykWAvwP+nE
      P2hfD+8/YXWouWUKg7+5ab9yi/Tvv7WtsCk+CfA/hbWhQ0QD8D/Yh0QdfgfwvyhwHcM9C/A/kd1w
      SagK8D/pxD9oXw/vP8wwjKRYC/A/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      Yq/052zH1Tx8CFJuKhogvYxJHLxv5UM9eN8aWV2GHj1F84RawAhJvdfI6jLslcY8LP052/Eh87zT
      n7MdH4IePXpCLWBMOmS9
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
action_std: &id003 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    bJzABplf0j90RDcOtFlvPzhHtH8dL1A/SFlqdGlrgT9qUl3eZ4dzP7RBvPg6d4I/JYCvx6csnT+5
    cpt9n0haP2Re4bMgxFU/
action_std_ng: *id003
goal_mean: &id004 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAw70BzyAm8vwjjN/mg8Ke/RK40hGdmw782TNqfWrLIPyr4XV/U9Ia/9MYVy6bBpr+g
    GCCipEOFP6XKWUZh8+8/
goal_mean_ng: *id004
goal_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8AAAAAAAD4/wAAAAAAAPj/AAAAAAAA+P8A
      AAAAAAD4/wAAAAAAAPj/AAAAAAAA+P+cbwMAAAAAQAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAA
      AAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwJxvAwAAAABAAAAA
      AAAAAEAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAA
      AAAAwAAAAAAAAABAnG8DAAAAAEAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAA
      AABAAAAAAAAA+P8AAAAAAAAAQAAAAAAAAADAAAAAAAAAAMCcbwMAAAAAQAAAAAAAAADAAAAAAAAA
      AMAAAAAAAAAAwAAAAAAAAADAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAA
      wJxvAwAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABA
      AAAAAAAAAEAAAAAAAAAAwAAAAAAAAABAnG8DAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAA+P8A
      AAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAECcbwMAAAAAQAAA
      AAAAAABAAAAAAAAA+P8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAwAAAAAAAAABAAAAA
      AAAAAEAAAAAAAAAAQJxvAwAAAABA
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 9]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA+P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDpPAAAAAAAAKC8AAAAAAAAqLwA
      AAAAAADAvAAAAAAAAAAA
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
goal_std: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id002
  - !!python/tuple [0]
  - b
  state: !!python/tuple
  - 1
  - !!python/tuple [9]
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - false
  - !!binary |
    AAAAAAAAAAAA5IrpUt5wPwCrvEVFnFA/QFnvtiFegj/wxTxOqUl0PxOXMqqAjYI/20G/3HOjnD8U
    KfpB7NlfPwAMN9B+u1U/
goal_std_ng: *id005
gripper_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: false
  covariance_type: full
  init_params: wmc
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAA8D8=
manip_objs: []
name: close
num_gripper_vars: 3
objs: [time, tool]
trajectory_model: !!python/object:sklearn.mixture.gmm.GMM
  converged_: true
  covariance_type: full
  covars_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      4H0u2mwjiT8AcMPsf/A2v4CL/Onjw4E/IHBCS3GQiL8AEkMmtV5pv1inQTwA/pA/IJlLbNbDYj6A
      Mm1R24uGPgCXNSM7mXo+4JEYtqHkuL4I/lEnQ2iwPogYlTRJyco+xCAs1/U2wD5of4TCUm3+vt+d
      KXaoHfG+lK9CGXvIED8ejsZJj7MAP9ICC5YzTiC/7jRMhZF3yb7AWo0WlXUtv9Rf5oG0wwG/6DU/
      WOpFPT/4Yq548MoHP/hdLHfj4ES/UFmQlwc84r6km5S07c0xvwDYhY2yda2+cCIhfgRkPD+g/Eaa
      RmITPyAfQkQWGz6/BAWlYTBt+L5gSEbETLU8v4ABMDzVxNg+4EV+bImZTj8UXacpTUsqv7woh7w2
      VFO/iGFO1pdRuz6gvvYzvunHPkjdjl0Qts2+gADiVEa/x75gKsed6O7iPhiVapyh3+G+AHDD7H/w
      Nr/8CbQN4o9QPwCActsppjG/AGhavlZnOD8AAM1zQTQZPwAAXU+R4UC/AKDpFXCkEr4A4M0tIWY2
      vgBgvyS5bCq+ADAwSfq6aD4A4MfJzkxgvgBg4cx2nHq+AB4T+dMbcL4AeA/DaDquPqAVV5AEAaE+
      AICyumWswL4AniztnJewvgB4JNTqMtA+ANJCOfRMeT4A1JSjSUTdPgA4scL6pbE+ANRRqO4U7b4A
      xP9nIKO3vgCUasfzvfQ+AOgQgYQdkj4AVvnZIrDhPgAAWOlmRF0+ABDPzYI07L4AMOcl10HDvgCI
      ReC16O0+AFRE0lBEqD4AwCMRQ4XsPgD23QRjm4i+ABhWcVVm/r4AOM6RTR/aPgCs3c/eMwM/wGfd
      WOEja74AHPaXusF3vgCosgRZhH0+AFj0yImXdz4AtBY1Os+SvgD+fyK5wZE+gIv86ePDgT8AgHLb
      KaYxv3+AAfynbn8/4OPjHy7mgr8A6BQs4IRjv8CDuMqTJYo/ALqufevfXD7AXlcsu1iBPgAiwdLc
      dnQ+SPuADPQms77AC+ykKj+pPhT2477Vm8Q+wMpSj03zuD5g2hwv7Gj3vli35DFKVuq+IPMlIDnT
      CT/I5A7bB7P5PhDsy78QFxm/AAEmxQCYw76AGKUJUaomvwA91JTLVfu+gI5/iKSFNj8ANFjQOU4C
      P9AGdFo7EEC/gPI17PEO3L5Ab4TNhmUrvwBgB7Vnqqa+wO0LmtfXNT8AzZ2Xt9MNP4CxwOOmKTe/
      8BCOkQ7L8r7gwOX/YBY2v7j1GfV8DtM+gDihf/CKRz/QEdnH5zokv4A8e0kUvk2/ihFQ27QEtT5g
      0iTp7GXCPiCmgFnt28a+gKMQWUBFwr5AAXAUMiLdPiAMWUnEgNu+IHBCS3GQiL8AaFq+Vmc4P+Dj
      4x8u5oK/tCYygB4ujD8ARV8TQ/1qPzLwQtyoE5K/aEo/6Hb2Y76cb82XRfyHvkCtC37cS3y+d+8j
      32R7uj7k1ZT+XHSxvoTCwsv7fsy+OaeBEeo/wb6S3LOXQS8APxMeOWBWNfI+fu2eL7naEb+R1TWE
      d8QBv6AObJWjWCE/MeqWrrUXyz58rNlV9VYvPwCWKbH75QI/kKkzsj8kP7/CC7KsuE8JvxzHJOwM
      NkY/uDuh7Pxl4z4JmdPx2/AyPwBOSa4UV68+gA7mlu4zPr8Qd5MGBJ8UvxC+znWDA0A/kDHNzVP8
      +T4aQ/ELZ4o+P6171sqQWdq+9QZFKMZGUL9EhYQe9fgrPww1rmEOkFQ/5JuuvP0Pvb66KsC/fXDJ
      vq6/4EOOm88+wFZE7k9DyT5GKc/lSCTkviNnrR6xA+M+ABJDJrVeab8AAM1zQTQZPwDoFCzghGO/
      AEVfE0P9aj/86VXKP1JePwATZixzq3K/AHZRUReeRL6AZX9DrcVovgC4Gvh2OV2+QMI2O8NZmz6A
      o3Wz7QaSvlB+f4tDbq2+wAToXMLQob6AoLBiKLfgPkDG9Ho7ztI+AKtGaKVw8r4wXLbZqFnivkBd
      kH1L6gE/gHCRnjT7qz6Akc3uDi8QP0CH3xWshOM+oPPENd8UIL9A7kKxQiTqvkBFr4KO8CY/gDeP
      K+AIxD6AudGp548TPwAAnx4fL5A+gEZtYYsxH78AEHLBK0z1vgBmbfL6iSA/QIJPMIfW2j4ACZzt
      2YofPwALfxjTNru+gCrAbXLPML9ASJN01+MMP4DsJX+4PDU/nKQyHAcEnr5AwxzvGkaqvgAkG2d7
      UrA+AGrQv3EXqj5AXj4Pas3EvgBt7flao8M+WKdBPAD+kD8AAF1PkeFAv8CDuMqTJYo/MvBC3KgT
      kr8AE2Ysc6tyv+DQYNN3CJo/IMb/tUeeaz6QfE4ogZeQPiAdH0vokoM+GOspRJ1Rwr6ABGhl8CW4
      PoJs+F9FttM+ANVgXmDdxz5AGhwPKGQGv+qtjL/qMPm+aNTRpo2zGD8yJ476wpQIP5r4ujGV/ye/
      Lh56tb690r7Oe5ga2K01v3BO2QROJQq/UDSBHcSKRT9Mi4IxUYIRPxobdhaZuk6/sASD8mXW6r6q
      F6wBWjQ6vwAydsntrbW+lA3yLIfkRD+oS4kdeIccPyDRAYyjJ0a/vxxPb7f5Ab8abIz3VyBFv94R
      V7I2OuI+LupQdLGEVj9D96gfj1kzv74PnNbFcly/4g4fTpQaxD607fFL/JjRPkDApMtL3dW+BFES
      srt50b40rjMLrN3rPkgUwA5oTuq+IJlLbNbDYj4AoOkVcKQSvgC6rn3r31w+aEo/6Hb2Y74AdlFR
      F55EviDG/7VHnms+90n50k1iUD9QSszQpVJiPUAjj1SynVU9HEV8COI6lL2gU4P75qqKPXhxBuy/
      xKU9UDna6cRamj1g07WbMbrYvQY7KO270cu9sKmRjEpH6z3qK5h5SSXbPfhzQleLgPq9bF/OfEuy
      pL1Qq0Nb3PAHvuD4RnCe39y94DPCex/KFz44rela9VXjPeBD8zqp9yC+oBqLRjCjvb0g6BNOPPAM
      vgAoQU308Ie9+O9VkYoSFz5gXGkjcYHvPbB/LcJcdxi+ePl9lNDZ071oWErymFQXvjgjRncKIbQ9
      mJzuAiDeKD6ApHB4XV4FvlAUOReWai++h+n+8IUzlj0QRMjl/W6jPfhbdWtDJai9WFyCl3pMo71I
      6jQI7sW+PdDwgD4CDb29gDJtUduLhj4A4M0tIWY2vsBeVyy7WIE+nG/Nl0X8h76AZX9DrcVovpB8
      TiiBl5A+UErM0KVSYj3ZyKHTTWJQPwCgTQ7K+Hk93QIXL3pOuL1cKGVLSwWwPXzB9kG2J8o9ul5G
      vU6qvz0wl1LKybX9vSAPwm1qtvC9Ik8q2j5jED6EqcU80U4APqJtotmx1x++/zvVrPPdyL2aQQV8
      4sMsvjK7NeKMWAG+zCtORFeVPD50Yp8abDsHPmL1MUHzYkS+4DCSLArO4b2McwdqiGIxvgD6QkH/
      w6y9iKAoBsS4Oz6gafdMWu0SPhivFVh9ZT2+mAIyVNnZ973kzGcBIgg8vl6KS4RtL9g9xAVzwvXg
      TT5gG2kmsqwpvqAlgUGf31K+DPJKsM6suj0kW2cHgFnHPWoWnc/YAs29dNEhUwgwx72nMJs0tHzi
      PSwTi4nRc+G9AJc1IzuZej4AYL8kuWwqvgAiwdLcdnQ+QK0LftxLfL4AuBr4djldviAdH0vokoM+
      QCOPVLKdVT0AoE0Oyvh5PYnxLtNNYlA/lEcSbNesrL1gw8kra+aiPZjITWgh2749uOw6RaCtsj0A
      5C0lY4bxvXVHntBft+O9MMVHgkFVAz5Y4A76Jz3zPVC6xvllyBK+eBCQSxpWvb0YYy9nsvcgvlBK
      zTamdvS9uA/nCD7cMD4wB4vWWWj7PfC8jWXzDDi+ILW/SUEB1b04sagMbYIkvgBwrl/D96C94A/1
      /SFaMD5gtEfrNFQGPoCuqJ4FVzG+QPsAZ0Aj7L0YjwDb8ogwvthwoyQ2iMw9KJJJUNqfQT7Q90Y7
      AUoevmAmwB0CREa+TXDhqiV4rz3QMiGr1Yu7PdieognWHMG9oLKtAepau72gz7fCT8/VPbg1r3/R
      ltS94JEYtqHkuL4AMDBJ+rpoPkj7gAz0JrO+d+8j32R7uj5AwjY7w1mbPhjrKUSdUcK+HEV8COI6
      lL3dAhcvek64vZRHEmzXrKy92PmdCE5iUD8v0mZxL7DhvZxF+++l4Py9Pjkkwgh78b36Sr7MuWYw
      PsGbsjS+cyI+xM85dOoXQr7NZSiBXAEyvlhKPgMXlFE+aBFfe5B0+z3KJBt4XsJfPuao7fDAJjM+
      QBRoCPuOb75AkLupeKY5vjS2+8EsgnY+5p2V4nioEz4pChR4xjFjPoDx+Dt+wt89Y/RwSXKbbr7m
      wQzUsOVEvmfTa79lOnA+sLqnXWNVKj76K+YaE/NuPgA2Benfswq+09yg945+gL54Pozp01hcPkSw
      yumH1oQ+qyUo3Zhz7b0yq7YMrsf5vYtPaEDxAwA+2G+hY+WZ+T0WolAQUWkUvvx0kjDcRBM+CP5R
      J0NosD4A4MfJzkxgvsAL7KQqP6k+5NWU/lx0sb6Ao3Wz7QaSvoAEaGXwJbg+oFOD++aqij1cKGVL
      SwWwPWDDyStr5qI9L9JmcS+w4b3kzULqTWJQP/epEJ+QCPM96KsBURML5z1o9hMl154lvnoDtpjt
      Uhi++EvLOuHZNz42BDrmJbwnPjjmc7UaLEe+Q2NIBJgY8r0S0zTDze5UvqBA50XnPim+yDCU4+7M
      ZD6SskMdBugwPryu0wvPq22++IlCnubpCb7aBz2qbk1ZvgBK/7Li7tS9WM9R32osZD5ILlh6EIw7
      PrCMGu1nZGW+hoc0L1BbIb5GcoeOLGZkvqhDrhWXmQE+qsn60UG+dT50Sr5dC69Svuw55pQUeHu+
      rSxTnWtp4z0ai5Z16f3wPQorW0yfHPW9OjqeQrzf8L0qM2OxHOgKPtqUfB2XZgm+iBiVNEnJyj4A
      YOHMdpx6vhT2477Vm8Q+hMLCy/t+zL5Qfn+LQ26tvoJs+F9FttM+eHEG7L/EpT18wfZBtifKPZjI
      TWgh2749nEX776Xg/L33qRCfkAjzPYquiMtOYlA/BxtwHV/PAj44UdqWDKZBvu+TuMf+2jO+8BbE
      NC94Uz4mMjQi6l9DPoAEZzBV6mK+2dhHnBqLDb6hgkoNWhZxvhHoRsCem0S+i+IHFbT6gD4UAbUa
      3plLPoLrkAFnOIi+veGbPTQnJb40QPbceqd0voDLciRrFvG9lHRG+ax3gD4TOkg/jHxWPgGtcn1Z
      doG+iMdcVhZWPL639hJr0qaAvk402nrCuxw+ctr6w7G/kT7PUN0yuoBuvsXK0y08bJa+d1j1gQCx
      /z0u09IKmr0LPsKN8sjAOxG+4EUv/1WMC76hmor9tvYlPgaapCcEvCS+xCAs1/U2wD4AHhP50xtw
      vsDKUo9N87g+OaeBEeo/wb7ABOhcwtChvgDVYF5g3cc+UDna6cRamj26Xka9Tqq/PbjsOkWgrbI9
      Pjkkwgh78b3oqwFREwvnPQcbcB1fzwI+CP8ILk5iUD9MQFmT3101vo91zGHWCSi+shxrwDWSRz7y
      mAnD03Q3PncPCmh55la+irCumDfiAb4rOtop569kvipUv/oK8zi+EBE4EW6OdD5eWmbkOLVAPoNF
      C4CmUn2+GO8kfwicGb5+ALu2ZgFpvgANu9r7r+S9vSHSYczvcz6g5ILSSTlLPjBPIvIfJHW+3CTm
      hygnMb5msLiD4Ch0vvRHw0u0ZBE+Ka7r2Ot8hT4LDeDb5nZivnt0wfmJJYu+nFyMERcv8z1kO053
      2soAPngHEwUv3QS+u1ev8QetAL6mEwWyQpcaPtCPJ5FDGhm+aH+EwlJt/r4AeA/DaDquPmDaHC/s
      aPe+ktyzl0EvAD+AoLBiKLfgPkAaHA8oZAa/YNO1mzG62L0wl1LKybX9vQDkLSVjhvG9+kq+zLlm
      MD5o9hMl154lvjhR2pYMpkG+TEBZk99dNb6yI4ADnmJQP6BY5UvfjWY+TBH/kKEdhr7QfoAEEAJ2
      vsYDScZ/fJU+BWUyq4nHQD5TTgQV6WijPuC+8bataHc+AXNvFIFJs74Ig5FTQVp/vsShoRMog7s+
      RA76EjwHWD56aCl+JnanPgCw1378aCM+Lt8F0aq0sr4ASFVA+YqJvlCCv8v01bM+oZDZXAcYcD4A
      gSy7OOqyPlq+DEzGUVC+MDsOIUUpxL4YNZ+8ClOhPkALMZNxeMk+b6Fpj9v/Mb4Hhz2l2II/vk+3
      tDRlk0M+OMVEYeJKPz4OE7k68/JYvmxIEFp6jVc+350pdqgd8b6gFVeQBAGhPli35DFKVuq+Ex45
      YFY18j5AxvR6O87SPuqtjL/qMPm+Bjso7bvRy70gD8JtarbwvXVHntBft+O9wZuyNL5zIj56A7aY
      7VIYvu+TuMf+2jO+j3XMYdYJKL6gWOVL341mPtYAyzJnYlA/3Lxkr5LheL6PsWSljsJovqvVd+9K
      LIg+hB+mGangMj4pQ6ivO9aVPiMhCOoDVmo+nsB8WOaypb4ZdBju76JxvlnbFuDY864+mwNZxmUI
      Sz4INUPvK2WaPgCC64ZR1hU+sHqksnMLpb4GhH3Fnrx8vioonwnqUKY+oUQHnjQbYj5kEpfts0el
      PkzbMwosXEK+GIwZT6Wutr7gcYzNm32TPg0yqe/Fp7w+0sC/lghAJL7P2/FDxbkxvuCFV8gHBjY+
      Om2hcEqaMT4GF2VclhFMvgXP6YZqf0o+lK9CGXvIED8AgLK6ZazAviDzJSA50wk/fu2eL7naEb8A
      q0ZopXDyvmjU0aaNsxg/sKmRjEpH6z0iTyraPmMQPjDFR4JBVQM+xM85dOoXQr74S8s64dk3PvAW
      xDQveFM+shxrwDWSRz5MEf+QoR2Gvty8ZK+S4Xi+Z8f4LtRjUD9GpITBVkeIPhUnhdb+s6e+9Euw
      UbeCUr6ulXvWj2m1vogJCjb00om+vSOJVepGxT5+qFVNK0uRPpa4UcbPWc6+eCzEWd6Bar7qu0/O
      0OG5vgDjDUGlaTW+6IT4/biixD4ATi57nC2cPjjwcKrb4cW+DLkSeRnBgb5gDhdizd3Evm2o0JbN
      AGI+ZSw5e8Q91j7ni+T3nByzvkyzKWQrGdy+bPdZMkLbQz7gJdEBj2FRPi4KHhJumFW+mfpS17BC
      Ub70wJ4354VrPu7N0sqM+2m+Ho7GSY+zAD8AniztnJewvsjkDtsHs/k+kdU1hHfEAb8wXLbZqFni
      vjInjvrClAg/6iuYeUkl2z2EqcU80U4APljgDvonPfM9zWUogVwBMr42BDrmJbwnPiYyNCLqX0M+
      8pgJw9N0Nz7QfoAEEAJ2vo+xZKWOwmi+RqSEwVZHiD4DlD13rmJQP6k/jrtylpe+5euoPKRrQr76
      THXB3k6lvkzh2kbDsnm+cI3bcGQstT4xm8SUnDWBPpxs9EH6M76+IEoOYNNgWr4sI3tYjcGpvkA6
      VRH0TiW+HWJFxv+ItD6eU8RMfAqMPgRapaCUxrW+TeS4vveqcb5wi/eEysO0vsecdXNc6lE+jAFo
      3woixj5upW0LygSjvvmxGLEk9su+Sedcn4HCMz4gtllg5EtBPtr5mpCCfUW+7qlcsCwtQb6HJP0X
      mGNbPjRosEAp21m+0gILljNOIL8AeCTU6jLQPhDsy78QFxm/oA5slaNYIT9AXZB9S+oBP5r4ujGV
      /ye/+HNCV4uA+r2ibaLZsdcfvlC6xvllyBK+WEo+AxeUUT445nO1GixHvoAEZzBV6mK+dw8KaHnm
      Vr7GA0nGf3yVPqvVd+9KLIg+FSeF1v6zp76pP467cpaXvs42B6YPaFA/yahHv9n7YT7pgOEAjs3E
      PhvCycvNFpk+RmHN7eSr1L4itEGdK82gvtW43hiufN0+kJe7iL3AeT6D/VocPiXJPgCbas+izUQ+
      zaLW3l8M1L4IyRwyT2CrvkrjEl9tQtU+bMj0j74/kT6S6uvQxUXUPpIdOIuifXG+DtlyjLib5b6b
      2CQgXpHCPuB/mQpzTOs+er0OV5ZKU77YPWYx7OJgvt9iMsMW+2Q+jefl7O7EYD5YEtnTX716vnhp
      ypk+Pnk+7jRMhZF3yb4A0kI59Ex5PgABJsUAmMO+MeqWrrUXyz6AcJGeNPurPi4eerW+vdK+bF/O
      fEuypL3/O9Ws893IvXgQkEsaVr29aBFfe5B0+z1DY0gEmBjyvdnYR5waiw2+irCumDfiAb4FZTKr
      icdAPoQfphmp4DI+9EuwUbeCUr7l66g8pGtCvsmoR7/Z+2E+kqqms05iUD8nAw/Z6j5wProa5nvM
      l0M+5EbVdqEkgL4OA+2m4D1KvsfSVjcJB4c++Mt7HoIcJD5MKbcRE6NzPgDyvRj7PvA9QkOfqxxQ
      f75UVwyDCmFVvtaNl/UvmoA+lkai1tPwOj6+b4u7wql/PkuCAhx+URu+9jiEg+vfkL74MWfgJgBt
      PpTC3RyIUZU+iNEk73Ah/r2QuyQP2l8Kvuk82Ad6YhA+K6ZgJgMxCj54f1qazOEkvqIVNnGZtiM+
      wFqNFpV1Lb8A1JSjSUTdPoAYpQlRqia/fKzZVfVWLz+Akc3uDi8QP857mBrYrTW/UKtDW9zwB76a
      QQV84sMsvhhjL2ey9yC+yiQbeF7CXz4S0zTDze5UvqGCSg1aFnG+KzraKeevZL5TTgQV6WijPilD
      qK871pU+rpV71o9ptb76THXB3k6lvumA4QCOzcQ+JwMP2eo+cD4JoISyGHVQPyFHHI4UqqY+y6oc
      SXes4r6Yi1KG+lquvgqmWMolo+o+AHA37pdDhz6rsO6kH7fWPgB1uF7yylI+BRs631wc4r7oC04W
      ALu4vkJ0XGxzNOM+HeUUHvspnz7qaX29NlDiPgRaYKPMmX+++BCjZx2F876YYRcO/MXQPgw3yUgP
      qfg+TsJoyk1tYb7J5YlYR4JuvkQU2scB9HI+COjcuhhMbj5FvzvczyeIvojAMJG1zYY+1F/mgbTD
      Ab8AOLHC+qWxPgA91JTLVfu+AJYpsfvlAj9Ah98VrITjPnBO2QROJQq/4PhGcJ7f3L0yuzXijFgB
      vlBKzTamdvS95qjt8MAmMz6gQOdF5z4pvhHoRsCem0S+KlS/+grzOL7gvvG2rWh3PiMhCOoDVmo+
      iAkKNvTSib5M4dpGw7J5vhvCycvNFpk+uhrme8yXQz4hRxyOFKqmPpQ2/Ci7YlA/hAzUbmiFtr4n
      uxv3CE6CvlXY7HwQEMA+2Od0DKcOXD6moduxPWWrPgBoQjkrqiY+ijYqUJ3Xtb5AxaL/Z9ONvgw3
      bBRpKbc++7M0a9zKcj5K0CIPJha2PqvAzxpKDlO+JOWvrLGKx77zTuTLsTqkPpTiPevEvc0+L0HZ
      xHwENb4APqrQu2VCvsztlFmw20Y+I/jGlw9FQj6WuSxW5CFdvlJv/+R6gFs+6DU/WOpFPT8A1FGo
      7hTtvoCOf4ikhTY/kKkzsj8kP7+g88Q13xQgv1A0gR3EikU/4DPCex/KFz7MK05EV5U8PrgP5wg+
      3DA+QBRoCPuOb77IMJTj7sxkPoviBxW0+oA+EBE4EW6OdD4Bc28UgUmzvp7AfFjmsqW+vSOJVepG
      xT5wjdtwZCy1PkZhze3kq9S+5EbVdqEkgL7LqhxJd6zivoQM1G5ohba+1Iq804asUD/Omaea3Cm+
      PiA8p/0LePq+WLwhavMdl76BiMxqXpLmvoBZdfaJrGK+FwHK8w7/8T7QGssj/JLIPqzTyk1gFfO+
      BAglQY73rr5ZPh7slDLyvtjTltiqZo8+gUQhxIdlAz8ORtIf2KrgvhYjtl0ogQi/JVmGIBtRcT47
      MNjV6VB+Pj5Ye+9W1YK+I1Kt4xIbfr6OiKQSugCYPpX9jMvPqJa++GKuePDKBz8AxP9nIKO3vgA0
      WNA5TgI/wguyrLhPCb9A7kKxQiTqvkyLgjFRghE/OK3pWvVV4z10Yp8abDsHPjAHi9ZZaPs9QJC7
      qXimOb6SskMdBugwPhQBtRremUs+Xlpm5Di1QD4Ig5FTQVp/vhl0GO7vonG+fqhVTStLkT4xm8SU
      nDWBPiK0QZ0rzaC+DgPtpuA9Sr6Yi1KG+lquvie7G/cIToK+zpmnmtwpvj5VAKH0EWNQP7nAz393
      g8W+uJbbAAXKYr6Z9ZvFkViyvgB7u+IYWy6+rHsdthdBvT6gAVxGN/mTPsDR9XeEBb++Fz4fP2Ur
      eb4s/ubr2JS9vpO93pK0hVk+jICuRtCHzz4YntIIDRirvnZu3ei56tO+/JXsJFImPD7M6FyD86NI
      PtZimulrnU6+WEdE8jB4SL4m8RjwVoJjPl+/34bPamK++F0sd+PgRL8AlGrH8730PtAGdFo7EEC/
      HMck7Aw2Rj9ARa+CjvAmPxobdhaZuk6/4EPzOqn3IL5i9TFB82JEvvC8jWXzDDi+NLb7wSyCdj68
      rtMLz6ttvoLrkAFnOIi+g0ULgKZSfb7EoaETKIO7PlnbFuDY864+lrhRxs9Zzr6cbPRB+jO+vtW4
      3hiufN0+x9JWNwkHhz4KpljKJaPqPlXY7HwQEMA+IDyn/Qt4+r65wM9/d4PFvm6h+OJU+VA/fnMp
      1tx8oD4GArD5ThnwPgD3v25Ao2o+Hrk53cmr+b4cTuAB7IbRvpiMqEbMOPs+HFq+iSwWtj7cOxvX
      SPX5PtKNIRZsZZa+8mlmfCKrC7/LyBGAfMbnPtJ5KPw0ehE/L05F9aazeL4RQC3UUZ+FvgVeCsdz
      3Yo+VZeLaet4hT5MooYvmx6hvjsQ9cBQKaA+UFmQlwc84r4A6BCBhB2SPoDyNezxDty+uDuh7Pxl
      4z6AN48r4AjEPrAEg/Jl1uq+oBqLRjCjvb3gMJIsCs7hvSC1v0lBAdW95p2V4nioEz74iUKe5ukJ
      vr3hmz00JyW+GO8kfwicGb5EDvoSPAdYPpsDWcZlCEs+eCzEWd6Bar4gSg5g02BavpCXu4i9wHk+
      +Mt7HoIcJD4AcDful0OHPtjndAynDlw+WLwhavMdl764ltsABcpivn5zKdbcfKA+QAkeBlViUD9Q
      D7ynzB6MPgAW6DKvQwc+1LinIo9rlr6QSyIWbZ1uvrg4YudKxpc+a3+g8SVKUz4evRByv6uWPiTM
      PVhcjzO+vuePbiYqqL6QqgTHtsOEPvzRwHM3h64+xuz7jtiSFb5S9ShfWOIivlB8hr2Ddic+REit
      2M7AIj7AX/sPN+c9vsBmn1rCOjw+pJuUtO3NMb8AVvnZIrDhPkBvhM2GZSu/CZnT8dvwMj+AudGp
      548TP6oXrAFaNDq/IOgTTjzwDL6McwdqiGIxvjixqAxtgiS+KQoUeMYxYz7aBz2qbk1ZvjRA9tx6
      p3S+fgC7tmYBab56aCl+JnanPgg1Q+8rZZo+6rtPztDhub4sI3tYjcGpvoP9Whw+Jck+TCm3EROj
      cz6rsO6kH7fWPqah27E9Zas+gYjMal6S5r6Z9ZvFkViyvgYCsPlOGfA+UA+8p8wejD4GzL/Uwn1Q
      PwCEIF02t1Y+etOORy/k5b7wKQ0qkuS9vpjRf3K9Nuc+zp4GEK3Voj7OQooD3CLmPiQztY1BGYO+
      EMhSBz6Y9754f8EgVkbUPje47KHizv0+githO5UQZb4qKqFCUnByvrUxHv3X6HY+V7wkPJNPcj6n
      c9NXqDKNvtjvVq5OkIs+ANiFjbJ1rb4AAFjpZkRdPgBgB7Vnqqa+AE5JrhRXrz4AAJ8eHy+QPgAy
      dsntrbW+AChBTfTwh70A+kJB/8OsvQBwrl/D96C9gPH4O37C3z0ASv+y4u7UvYDLciRrFvG9AA27
      2vuv5L0AsNd+/GgjPgCC64ZR1hU+AOMNQaVpNb5AOlUR9E4lvgCbas+izUQ+APK9GPs+8D0Adbhe
      8spSPgBoQjkrqiY+gFl19omsYr4Ae7viGFsuvgD3v25Ao2o+ABboMq9DBz4AhCBdNrdWPievvOVN
      YlA/AJdx/G4cYr4AtHjSGLs4vgC2t6GGNGM+ACyISRoqHz4ANJEOSVBiPoBiqj7smf+9ABas7TCF
      c74A5t3UDMZQPgAqAvMnqXg+QOKIOF9t4b0AcUHcZYLuvQCZwLwU9PI9AEJjCDdM7j0AIC8F6CcI
      vgCI+V/MzQY+cCIhfgRkPD8AEM/NgjTsvsDtC5rX1zU/gA7mlu4zPr+ARm1hizEfv5QN8iyH5EQ/
      +O9VkYoSFz6IoCgGxLg7PuAP9f0hWjA+Y/RwSXKbbr5Yz1HfaixkPpR0Rvmsd4A+vSHSYczvcz4u
      3wXRqrSyvrB6pLJzC6W+6IT4/biixD4dYkXG/4i0Ps2i1t5fDNS+QkOfqxxQf74FGzrfXBzivoo2
      KlCd17W+FwHK8w7/8T6sex22F0G9Ph65Od3Jq/m+1LinIo9rlr56045HL+TlvgCXcfxuHGK+LmbH
      jR6oUD/E6+swWdXHPnAPyE4cgvK+lmJjCpYIrr658fsTJ6bxvnr3jDFZdI4+RrRTOtnPAj/WizJI
      OSrgvrRBD/0OxAe/D1AlQnnLcD7FsZiV92Z9PnsclBoBRIK+XOolHcAyfb6eDb3If0eXPgJ2wnfz
      +ZW+oPxGmkZiEz8AMOcl10HDvgDNnZe30w0/EHeTBgSfFL8AEHLBK0z1vqhLiR14hxw/YFxpI3GB
      7z2gafdMWu0SPmC0R+s0VAY+5sEM1LDlRL5ILlh6EIw7PhM6SD+MfFY+oOSC0kk5Sz4ASFVA+YqJ
      vgaEfcWevHy+AE4ue5wtnD6eU8RMfAqMPgjJHDJPYKu+VFcMgwphVb7oC04WALu4vkDFov9n042+
      0BrLI/ySyD6gAVxGN/mTPhxO4AHshtG+kEsiFm2dbr7wKQ0qkuS9vgC0eNIYuzi+xOvrMFnVxz7b
      VjGKVmRQP0Ac3x/wRcm+/M79zGuBhL5MxA5NlRnIvlWTtBH/ymQ+vD9QCBew2T7Q7FRVyRK2vm5L
      RfrrOeC+yHYmj/nuRj7qbmQuExNUPtCEupkh8Vi+AMYYeWzvU74wT5inwclvPhxINwtLAm6+IB9C
      RBYbPr8AiEXgtejtPoCxwOOmKTe/EL7OdYMDQD8AZm3y+okgPyDRAYyjJ0a/sH8twlx3GL4YrxVY
      fWU9voCuqJ4FVzG+Z9Nrv2U6cD6wjBrtZ2RlvgGtcn1ZdoG+ME8i8h8kdb5Qgr/L9NWzPioonwnq
      UKY+OPBwqtvhxb4EWqWglMa1vkrjEl9tQtU+1o2X9S+agD5CdFxsczTjPgw3bBRpKbc+rNPKTWAV
      877A0fV3hAW/vpiMqEbMOPs+uDhi50rGlz6Y0X9yvTbnPgC2t6GGNGM+cA/IThyC8r5AHN8f8EXJ
      voqwmjTPsFA/3C8aBBDZrz7KGKN6GbfyPkOT3d6qJZC+mpavksfyA7+icPv7NyThPtzdo4eaMwk/
      3QR1uzXPcb5u4qAUri1/vsYpv7h8XoM+gFHJEE/2fj4up3H7hK+Yvi1BCULSTZc+BAWlYTBt+L4A
      VETSUESoPvAQjpEOy/K+kDHNzVP8+T5Agk8wh9baPr8cT2+3+QG/ePl9lNDZ072YAjJU2dn3vUD7
      AGdAI+y9sLqnXWNVKj6GhzQvUFshvojHXFYWVjy+3CTmhygnMb6hkNlcBxhwPqFEB540G2I+DLkS
      eRnBgb5N5Li+96pxvmzI9I++P5E+lkai1tPwOj4d5RQe+ymfPvuzNGvcynI+BAglQY73rr4XPh8/
      ZSt5vhxavoksFrY+a3+g8SVKUz7OngYQrdWiPgAsiEkaKh8+lmJjCpYIrr78zv3Ma4GEvtwvGgQQ
      2a8+XPsCgYFiUD8lxBpmkl6uPu6s8NW/M0q+vZjzLGovwL7vA2IC0NCbPtwgPqCLcsQ+oupoK0jm
      LL7tUYZK+0s5vtmxY5kxbj8+DinTTw4fOT7hN6jPYAdUvom6uTVn6FI+YEhGxEy1PL8AwCMRQ4Xs
      PuDA5f9gFja/GkPxC2eKPj8ACZzt2YofPxpsjPdXIEW/aFhK8phUF77kzGcBIgg8vhiPANvyiDC+
      +ivmGhPzbj5GcoeOLGZkvrf2EmvSpoC+ZrC4g+AodL4AgSy7OOqyPmQSl+2zR6U+YA4XYs3dxL5w
      i/eEysO0vpLq69DFRdQ+vm+Lu8Kpfz7qaX29NlDiPkrQIg8mFrY+WT4e7JQy8r4s/ubr2JS9vtw7
      G9dI9fk+Hr0Qcr+rlj7OQooD3CLmPgA0kQ5JUGI+ufH7Eyem8b5MxA5NlRnIvsoYo3oZt/I+JcQa
      ZpJerj53l/2MsKlQP7erDhOKy46+yhRa9rQFA78gsnr7gFjgPm+vA5kZCAg/LGOonY77cL4Qa5Y6
      Jbt9voInJXdMeII+SZUuQ1iGfT6vNeTHJYqXvt/j3oTeOJY+gAEwPNXE2D4A9t0EY5uIvrj1GfV8
      DtM+rXvWypBZ2r4AC38Y0za7vt4RV7I2OuI+OCNGdwohtD1eikuEbS/YPdhwoyQ2iMw9ADYF6d+z
      Cr6oQ64Vl5kBPk402nrCuxw+9EfDS7RkET5avgxMxlFQvkzbMwosXEK+bajQls0AYj7HnHVzXOpR
      PpIdOIuifXG+S4ICHH5RG74EWmCjzJl/vqvAzxpKDlO+2NOW2Kpmjz6Tvd6StIVZPtKNIRZsZZa+
      JMw9WFyPM74kM7WNQRmDvoBiqj7smf+9eveMMVl0jj5Vk7QR/8pkPkOT3d6qJZC+7qzw1b8zSr63
      qw4TisuOvs4fKiVRYlA/Gu46BX1poD5E7BD0nTR8vpaL+YTpu6S+fdEosflNDT7k3hOKv6YZPmfC
      N9/33h++i2gbXTF5Gb4czXcuPk80PoyWH+U+LDO+4EV+bImZTj8AGFZxVWb+voA4oX/wikc/9QZF
      KMZGUL+AKsBtcs8wvy7qUHSxhFY/mJzuAiDeKD7EBXPC9eBNPiiSSVDan0E+09yg945+gL6qyfrR
      Qb51PnLa+sOxv5E+Ka7r2Ot8hT4wOw4hRSnEvhiMGU+lrra+ZSw5e8Q91j6MAWjfCiLGPg7Zcoy4
      m+W+9jiEg+vfkL74EKNnHYXzviTlr6yxise+gUQhxIdlAz+MgK5G0IfPPvJpZnwiqwu/vuePbiYq
      qL4QyFIHPpj3vgAWrO0whXO+RrRTOtnPAj+8P1AIF7DZPpqWr5LH8gO/vZjzLGovwL7KFFr2tAUD
      vxruOgV9aaA+XLN04ramUT+azpdLN2zxvu8JI250nRm/Te+2PAMagj6IHfqTorCPPhlQa0PXr5O+
      TxKD/lp4j74QIe8aNBepPj2m7sizr6e+FF2nKU1LKr8AOM6RTR/aPtAR2cfnOiS/RIWEHvX4Kz9A
      SJN01+MMP0P3qB+PWTO/gKRweF1eBb5gG2kmsqwpvtD3RjsBSh6+eD6M6dNYXD50Sr5dC69Svs9Q
      3TK6gG6+Cw3g2+Z2Yr4YNZ+8ClOhPuBxjM2bfZM+54vk95wcs75upW0LygSjvpvYJCBekcI++DFn
      4CYAbT6YYRcO/MXQPvNO5MuxOqQ+DkbSH9iq4L4YntIIDRirvsvIEYB8xuc+kKoEx7bDhD54f8Eg
      VkbUPgDm3dQMxlA+1osySDkq4L7Q7FRVyRK2vqJw+/s3JOE+7wNiAtDQmz4gsnr7gFjgPkTsEPSd
      NHy+ms6XSzds8b6YmI10RnFQPxweSP3FAvY+2Ee6bPIbX76aYDfnIDtrvlBEq+Cy6nA+LHUfksQK
      az6tX2iJaY+Fvt3Kr9R+WoQ+vCiHvDZUU78ArN3P3jMDP4A8e0kUvk2/DDWuYQ6QVD+A7CV/uDw1
      P74PnNbFcly/UBQ5F5ZqL76gJYFBn99SvmAmwB0CREa+RLDK6YfWhD7sOeaUFHh7vsXK0y08bJa+
      e3TB+Ykli75ACzGTcXjJPg0yqe/Fp7w+TLMpZCsZ3L75sRixJPbLvuB/mQpzTOs+lMLdHIhRlT4M
      N8lID6n4PpTiPevEvc0+FiO2XSiBCL92bt3ouerTvtJ5KPw0ehE//NHAczeHrj43uOyh4s79PgAq
      AvMnqXg+tEEP/Q7EB79uS0X66zngvtzdo4eaMwk/3CA+oItyxD5vrwOZGQgIP5aL+YTpu6S+7wkj
      bnSdGb8cHkj9xQL2Pu/936MSaFI/ABL2elbehr7jWIIOgwSUvhzOUocJ35g+8DonNvbgkz44XpAl
      srKvvuXUQPOF7K0+iGFO1pdRuz7AZ91Y4SNrvooRUNu0BLU+5JuuvP0Pvb6cpDIcBwSevuIOH06U
      GsQ+h+n+8IUzlj0M8kqwzqy6PU1w4aoleK89qyUo3Zhz7b2tLFOda2njPXdY9YEAsf89nFyMERcv
      8z1voWmP2/8xvtLAv5YIQCS+bPdZMkLbQz5J51yfgcIzPnq9DleWSlO+iNEk73Ah/r1OwmjKTW1h
      vi9B2cR8BDW+JVmGIBtRcT78lewkUiY8Pi9ORfWms3i+xuz7jtiSFb6CK2E7lRBlvkDiiDhfbeG9
      D1AlQnnLcD7IdiaP+e5GPt0Edbs1z3G+oupoK0jmLL4sY6idjvtwvn3RKLH5TQ0+Te+2PAMagj7Y
      R7ps8htfvgAS9npW3oa+LDSWE05iUD+unRnsw0r8Pfhn9NhykwG+ZSWeLYUY/L2QOVlEe2YWPiaV
      zwaHJRW+oL72M77pxz4AHPaXusF3vmDSJOnsZcI+uirAv31wyb5AwxzvGkaqvrTt8Uv8mNE+EETI
      5f1uoz0kW2cHgFnHPdAyIavVi7s9Mqu2DK7H+b0ai5Z16f3wPS7T0gqavQs+ZDtOd9rKAD4Hhz2l
      2II/vs/b8UPFuTG+4CXRAY9hUT4gtllg5EtBPtg9ZjHs4mC+kLskD9pfCr7J5YlYR4JuvgA+qtC7
      ZUK+OzDY1elQfj7M6FyD86NIPhFALdRRn4W+UvUoX1jiIr4qKqFCUnByvgBxQdxlgu69xbGYlfdm
      fT7qbmQuExNUPm7ioBSuLX++7VGGSvtLOb4Qa5Y6Jbt9vuTeE4q/phk+iB36k6Kwjz6aYDfnIDtr
      vuNYgg6DBJS+rp0Z7MNK/D2bexCZTmJQP0JCS8EOxQ6+tOEv+96XCL5bv2vwmJsjPuu6qqGngiK+
      SN2OXRC2zb4AqLIEWYR9PiCmgFnt28a+rr/gQ46bzz4AJBtne1KwPkDApMtL3dW++Ft1a0MlqL1q
      Fp3P2ALNvdieognWHMG9i09oQPEDAD4KK1tMnxz1vcKN8sjAOxG+eAcTBS/dBL5Pt7Q0ZZNDPuCF
      V8gHBjY+LgoeEm6YVb7a+ZqQgn1Fvt9iMsMW+2Q+6TzYB3piED5EFNrHAfRyPsztlFmw20Y+Plh7
      71bVgr7WYprpa51OvgVeCsdz3Yo+UHyGvYN2Jz61MR791+h2PgCZwLwU9PI9exyUGgFEgr7QhLqZ
      IfFYvsYpv7h8XoM+2bFjmTFuPz6CJyV3THiCPmfCN9/33h++GVBrQ9evk75QRKvgsupwPhzOUocJ
      35g++Gf02HKTAb5CQkvBDsUOvlaKyQRPYlA/WOohi2mODj4yRd4zr1wovr+wDFmf/yY+gADiVEa/
      x74AWPTIiZd3PoCjEFlARcK+wFZE7k9DyT4AatC/cReqPgRRErK7edG+WFyCl3pMo7100SFTCDDH
      vaCyrQHqWru92G+hY+WZ+T06Op5CvN/wveBFL/9VjAu+u1ev8QetAL44xURh4ko/PjptoXBKmjE+
      mfpS17BCUb7uqVywLC1Bvo3n5ezuxGA+K6ZgJgMxCj4I6Ny6GExuPiP4xpcPRUI+I1Kt4xIbfr5Y
      R0TyMHhIvlWXi2nreIU+REit2M7AIj5XvCQ8k09yPgBCYwg3TO49XOolHcAyfb4Axhh5bO9TvoBR
      yRBP9n4+DinTTw4fOT5JlS5DWIZ9PotoG10xeRm+TxKD/lp4j74sdR+SxAprPvA6Jzb24JM+ZSWe
      LYUY/L204S/73pcIvljqIYtpjg4+7jhTlk5iUD9MaZJqxngjvn9yBAzIYSI+YCrHneju4j4AtBY1
      Os+SvkABcBQyIt0+RinP5Ugk5L5AXj4Pas3EvjSuMwus3es+SOo0CO7Fvj2nMJs0tHziPaDPt8JP
      z9U9FqJQEFFpFL4qM2OxHOgKPqGaiv229iU+phMFskKXGj4OE7k68/JYvgYXZVyWEUy+9MCeN+eF
      az6HJP0XmGNbPlgS2dNfvXq+eH9amszhJL5FvzvczyeIvpa5LFbkIV2+joikEroAmD4m8RjwVoJj
      Pkyihi+bHqG+wF/7DzfnPb6nc9NXqDKNvgAgLwXoJwi+ng29yH9Hlz4wT5inwclvPi6ncfuEr5i+
      4Teoz2AHVL6vNeTHJYqXvhzNdy4+TzQ+ECHvGjQXqT6tX2iJaY+FvjhekCWysq++kDlZRHtmFj5b
      v2vwmJsjPjJF3jOvXCi+TGmSasZ4I77WsxWWVWJQPzIhNVOwTz2+GJVqnKHf4b4A/n8iucGRPiAM
      WUnEgNu+I2etHrED4z4Abe35WqPDPkgUwA5oTuq+0PCAPgINvb0sE4uJ0XPhvbg1r3/RltS9/HSS
      MNxEEz7alHwdl2YJvgaapCcEvCS+0I8nkUMaGb5sSBBaeo1XPgXP6YZqf0o+7s3Syoz7ab40aLBA
      KdtZvnhpypk+Pnk+ohU2cZm2Iz6IwDCRtc2GPlJv/+R6gFs+lf2My8+olr5fv9+Gz2pivjsQ9cBQ
      KaA+wGafWsI6PD7Y71auTpCLPgCI+V/MzQY+AnbCd/P5lb4cSDcLSwJuvi1BCULSTZc+ibq5NWfo
      Uj7f496E3jiWPoyWH+U+LDO+PabuyLOvp77dyq/UflqEPuXUQPOF7K0+JpXPBoclFb7ruqqhp4Ii
      vr+wDFmf/yY+f3IEDMhhIj4yITVTsE89vt1W371UYlA/
  init_params: wmc
  means_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1, 42]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      LnLEl8lI47+hZoAYx+0GwIGTtlTzrPm/2ZO4zI36xr/wujmXb//6P1CW0OfzMNq/uaP8YMPuxT73
      4SttcbHNPmn8X4Y58OW+CLLbVSvI2L7gsLGNIJ74PguMFjJ9geG+ICaUejTj9L50NZuUBi08vymv
      4fe58uQ+V0/YfBZSSz/EjqdRnt8fvx0jkhWAtU6/6q/R8hQb6L7j6NloPjNhv1NvYfLluzq/bq5H
      0oF0cT9IvfJ+KbFCP8HXyBe+DHq/tLbp8U3hLj8dFgN1undjv4uKDiLXCVu/GUuxRdwidz9c+z1T
      iL1kPykfBv2gMYa/+gU9inQxKr+npKhipKdwv68+6o9FigG/Gto1op3mgT/0AdNr5+hbv9wF8qW8
      K4e/qOlhdmN+qb7E9XPkMfb/vuPD4ci1NQQ/ZNPqlE9xCD8jPCBRvgoYv1J/qOOw3BA/
  min_covar: 0.001
  n_components: 1
  n_init: 1
  n_iter: 100
  params: wmc
  random_state: null
  thresh: 0.01
  weights_: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id002
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [1]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      +P//////7z8=
